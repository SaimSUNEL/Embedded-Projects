

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Sep 14 00:10:55 2019

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	dabs	1,0x7E,2
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  010C                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0391                     	;# 
   191  0392                     	;# 
   192  0393                     	;# 
   193  039A                     	;# 
   194  039C                     	;# 
   195  039D                     	;# 
   196  039E                     	;# 
   197  039F                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209                           
   210                           	psect	idataBANK0
   211  0818                     __pidataBANK0:	
   212                           
   213                           ;initializer for __x
   214  0818  3401               	retlw	1
   215                           
   216                           ;initializer for __y
   217  0819  3401               	retlw	1
   218                           
   219                           ;initializer for _poem_size_point
   220  081A  34DA               	retlw	low (_poem_size| 0)
   221                           
   222                           ;initializer for _pp
   223  081B  34D8               	retlw	low (_byte_count| 0)
   224                           
   225                           ;initializer for _threshold_point
   226  081C  34DC               	retlw	low (_threshold| 0)
   227                           
   228                           	psect	idataBANK1
   229  08D7                     __pidataBANK1:	
   230                           
   231                           ;initializer for _rakamlar
   232  08D7  343F               	retlw	63
   233  08D8  3406               	retlw	6
   234  08D9  345B               	retlw	91
   235  08DA  344F               	retlw	79
   236  08DB  3466               	retlw	102
   237  08DC  346D               	retlw	109
   238  08DD  347D               	retlw	125
   239  08DE  3407               	retlw	7
   240  08DF  347F               	retlw	127
   241  08E0  346F               	retlw	111
   242                           
   243                           ;initializer for _alarm_id
   244  08E1  3401               	retlw	1
   245                           
   246                           ;initializer for _closest_alarm_start_loc
   247  08E2  3401               	retlw	1
   248  008E                     _ADIF	set	142
   249  0094                     _EEIF	set	148
   250  005F                     _GIE	set	95
   251  005B                     _IOCIE	set	91
   252  0058                     _IOCIF	set	88
   253  005E                     _PEIE	set	94
   254  0064                     _RA4	set	100
   255  008D                     _RCIF	set	141
   256  008B                     _SSP1IF	set	139
   257  008C                     _TXIF	set	140
   258  009C                     _ADRESH	set	156
   259  009B                     _ADRESL	set	155
   260  008C                     _TRISA	set	140
   261  04F4                     _ADCS0	set	1268
   262  04F5                     _ADCS1	set	1269
   263  04F6                     _ADCS2	set	1270
   264  04F7                     _ADFM	set	1271
   265  04E9                     _ADGO	set	1257
   266  04E8                     _ADON	set	1256
   267  04EA                     _CHS0	set	1258
   268  04EB                     _CHS1	set	1259
   269  04EC                     _CHS2	set	1260
   270  04ED                     _CHS3	set	1261
   271  04CB                     _IRCF0	set	1227
   272  04CC                     _IRCF1	set	1228
   273  04CD                     _IRCF2	set	1229
   274  04CE                     _IRCF3	set	1230
   275  048D                     _RCIE	set	1165
   276  04C8                     _SCS0	set	1224
   277  04C9                     _SCS1	set	1225
   278  04CF                     _SPLLEN	set	1231
   279  0464                     _TRISA4	set	1124
   280  08EF                     _RXDTSEL	set	2287
   281  018C                     _ANSELA	set	396
   282  0191                     _EEADRL	set	401
   283  0196                     _EECON2	set	406
   284  0193                     _EEDATL	set	403
   285  0199                     _RCREG	set	409
   286  019B                     _SPBRG	set	411
   287  019A                     _TXREG	set	410
   288  0C64                     _ANSA4	set	3172
   289  0CFB                     _BRG16	set	3323
   290  0CF2                     _BRGH	set	3314
   291  0CAE                     _CFGS	set	3246
   292  0CEC                     _CREN	set	3308
   293  0CAF                     _EEPGD	set	3247
   294  0CA8                     _RD	set	3240
   295  0CEF                     _SPEN	set	3311
   296  0CF4                     _SYNC	set	3316
   297  0CF5                     _TXEN	set	3317
   298  0CA9                     _WR	set	3241
   299  0CAA                     _WREN	set	3242
   300  0212                     _SSPADD	set	530
   301  0211                     _SSPBUF	set	529
   302  10B5                     _ACKDT	set	4277
   303  10B4                     _ACKEN	set	4276
   304  10A0                     _BF	set	4256
   305  10B2                     _PEN	set	4274
   306  10B3                     _RCEN	set	4275
   307  10B0                     _SEN	set	4272
   308  10AD                     _SSPEN	set	4269
   309  10A8                     _SSPM0	set	4264
   310  10A9                     _SSPM1	set	4265
   311  10AA                     _SSPM2	set	4266
   312  10AB                     _SSPM3	set	4267
   313  0392                     _IOCAN	set	914
   314  0391                     _IOCAP	set	913
   315  1C8B                     _IOCAP3	set	7307
   316                           
   317                           	psect	stringtext
   318  0800                     __pstringtext:	
   319  0800                     STR_1:	
   320  0800  3453               	retlw	83	;'S'
   321  0801  3465               	retlw	101	;'e'
   322  0802  346E               	retlw	110	;'n'
   323  0803  3473               	retlw	115	;'s'
   324  0804  346F               	retlw	111	;'o'
   325  0805  3472               	retlw	114	;'r'
   326  0806  3420               	retlw	32	;' '
   327  0807  3400               	retlw	0
   328  0808                     STR_2:	
   329  0808  3420               	retlw	32	;' '
   330  0809  3441               	retlw	65	;'A'
   331  080A  344C               	retlw	76	;'L'
   332  080B  3441               	retlw	65	;'A'
   333  080C  3452               	retlw	82	;'R'
   334  080D  344D               	retlw	77	;'M'
   335  080E  3400               	retlw	0
   336                           
   337                           	psect	cinit
   338  043A                     start_initialization:	
   339                           ; #config settings
   340                           
   341  043A                     __initialization:	
   342                           
   343                           ; Clear objects allocated to BANK0
   344  043A  3043               	movlw	low __pbssBANK0
   345  043B  0084               	movwf	4
   346  043C  3000               	movlw	high __pbssBANK0
   347  043D  0085               	movwf	5
   348  043E  301B               	movlw	27
   349  043F  3188  2029  3184   	fcall	clear_ram0
   350                           
   351                           ; Clear objects allocated to BANK1
   352  0442  30A0               	movlw	low __pbssBANK1
   353  0443  0084               	movwf	4
   354  0444  3000               	movlw	high __pbssBANK1
   355  0445  0085               	movwf	5
   356  0446  303E               	movlw	62
   357  0447  3188  2029  3184   	fcall	clear_ram0
   358                           
   359                           ; Clear objects allocated to BANK2
   360  044A  3020               	movlw	low __pbssBANK2
   361  044B  0084               	movwf	4
   362  044C  3001               	movlw	high __pbssBANK2
   363  044D  0085               	movwf	5
   364  044E  3020               	movlw	32
   365  044F  3188  2029  3184   	fcall	clear_ram0
   366                           
   367                           ; Initialize objects allocated to BANK0
   368  0452  3018               	movlw	low __pidataBANK0
   369  0453  0084               	movwf	4
   370  0454  3088               	movlw	(high __pidataBANK0)| (0+128)
   371  0455  0085               	movwf	5
   372  0456  305E               	movlw	low __pdataBANK0
   373  0457  0086               	movwf	6
   374  0458  3000               	movlw	high __pdataBANK0
   375  0459  0087               	movwf	7
   376  045A  3005               	movlw	5
   377  045B  3188  2023  3184   	fcall	init_ram
   378                           
   379                           ; Initialize objects allocated to BANK1
   380  045E  30D7               	movlw	low __pidataBANK1
   381  045F  0084               	movwf	4
   382  0460  3088               	movlw	(high __pidataBANK1)| (0+128)
   383  0461  0085               	movwf	5
   384  0462  30DE               	movlw	low __pdataBANK1
   385  0463  0086               	movwf	6
   386  0464  3000               	movlw	high __pdataBANK1
   387  0465  0087               	movwf	7
   388  0466  300C               	movlw	12
   389  0467  3188  2023         	fcall	init_ram
   390  0469                     end_of_initialization:	
   391                           ;End of C runtime variable initialization code
   392                           
   393  0469                     __end_of__initialization:	
   394  0469  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   395  046A  0020               	movlb	0
   396  046B  3184  2C6D         	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssBANK0
   399  0043                     __pbssBANK0:	
   400  0043                     _message_location:	
   401  0043                     	ds	2
   402  0045                     _DISPLAY_POEM:	
   403  0045                     	ds	1
   404  0046                     _LCDData:	
   405  0046                     	ds	1
   406  0047                     _LCD_LED_ON:	
   407  0047                     	ds	1
   408  0048                     _PCF8574_value:	
   409  0048                     	ds	1
   410  0049                     __temp_:	
   411  0049                     	ds	1
   412  004A                     _current_alarm_count:	
   413  004A                     	ds	1
   414  004B                     _eeprom_index:	
   415  004B                     	ds	1
   416  004C                     _global_index:	
   417  004C                     	ds	1
   418  004D                     _global_index2:	
   419  004D                     	ds	1
   420  004E                     _inselect:	
   421  004E                     	ds	1
   422  004F                     _komut:	
   423  004F                     	ds	1
   424  0050                     _nem:	
   425  0050                     	ds	1
   426  0051                     _received_data:	
   427  0051                     	ds	1
   428  0052                     _saniye:	
   429  0052                     	ds	1
   430  0053                     _sicaklik:	
   431  0053                     	ds	1
   432  0054                     _start:	
   433  0054                     	ds	1
   434  0055                     _t_i:	
   435  0055                     	ds	1
   436  0056                     _tempor:	
   437  0056                     	ds	1
   438  0057                     _time_index:	
   439  0057                     	ds	1
   440  0058                     _unnecessary:	
   441  0058                     	ds	1
   442  0059                     _what_to_display:	
   443  0059                     	ds	1
   444  005A                     _measured_adc_value:	
   445  005A                     	ds	2
   446  005C                     _closes_alarm_index:	
   447  005C                     	ds	1
   448  005D                     _message_id:	
   449  005D                     	ds	1
   450                           
   451                           	psect	dataBANK0
   452  005E                     __pdataBANK0:	
   453  005E                     __x:	
   454  005E                     	ds	1
   455  005F                     __y:	
   456  005F                     	ds	1
   457  0060                     _poem_size_point:	
   458  0060                     	ds	1
   459  0061                     _pp:	
   460  0061                     	ds	1
   461  0062                     _threshold_point:	
   462  0062                     	ds	1
   463                           
   464                           	psect	bssBANK1
   465  00A0                     __pbssBANK1:	
   466  00A0                     _dht11_data:	
   467  00A0                     	ds	5
   468  00A5                     _time_array:	
   469  00A5                     	ds	3
   470  00A8                     _nisa:	
   471  00A8                     	ds	2
   472  00AA                     _poe:	
   473  00AA                     	ds	2
   474  00AC                     _ALARM_SET:	
   475  00AC                     	ds	1
   476  00AD                     _EXTRA_INFO_SHOW:	
   477  00AD                     	ds	1
   478  00AE                     _PINS:	
   479  00AE                     	ds	1
   480  00AF                     _UPDATE_NEAREST_ALARM:	
   481  00AF                     	ds	1
   482  00B0                     _bit_index:	
   483  00B0                     	ds	1
   484  00B1                     _byte_index:	
   485  00B1                     	ds	1
   486  00B2                     _count:	
   487  00B2                     	ds	1
   488  00B3                     _current_diff_index:	
   489  00B3                     	ds	1
   490  00B4                     _current_diff_value:	
   491  00B4                     	ds	1
   492  00B5                     _dakika:	
   493  00B5                     	ds	1
   494  00B6                     _data_sent:	
   495  00B6                     	ds	1
   496  00B7                     _den:	
   497  00B7                     	ds	1
   498  00B8                     _global_diff_index:	
   499  00B8                     	ds	1
   500  00B9                     _global_diff_value:	
   501  00B9                     	ds	1
   502  00BA                     _high_time_count:	
   503  00BA                     	ds	1
   504  00BB                     _j:	
   505  00BB                     	ds	1
   506  00BC                     _low_time_count:	
   507  00BC                     	ds	1
   508  00BD                     _passed:	
   509  00BD                     	ds	1
   510  00BE                     _saat:	
   511  00BE                     	ds	1
   512  00BF                     _saim:	
   513  00BF                     	ds	1
   514  00C0                     _temp:	
   515  00C0                     	ds	1
   516  00C1                     _tempo:	
   517  00C1                     	ds	1
   518  00C2                     _var:	
   519  00C2                     	ds	1
   520  00C3                     _zaman:	
   521  00C3                     	ds	6
   522  00C9                     _closest_alarm:	
   523  00C9                     	ds	5
   524  00CE                     _current_diff:	
   525  00CE                     	ds	5
   526  00D3                     _global_diff:	
   527  00D3                     	ds	5
   528  00D8                     _byte_count:	
   529  00D8                     	ds	2
   530  00DA                     _poem_size:	
   531  00DA                     	ds	2
   532  00DC                     _threshold:	
   533  00DC                     	ds	2
   534                           
   535                           	psect	dataBANK1
   536  00DE                     __pdataBANK1:	
   537  00DE                     _rakamlar:	
   538  00DE                     	ds	10
   539  00E8                     _alarm_id:	
   540  00E8                     	ds	1
   541  00E9                     _closest_alarm_start_loc:	
   542  00E9                     	ds	1
   543                           
   544                           	psect	bssBANK2
   545  0120                     __pbssBANK2:	
   546  0120                     _extra_info:	
   547  0120                     	ds	16
   548  0130                     _data_time_array:	
   549  0130                     	ds	8
   550  0138                     _kk:	
   551  0138                     	ds	8
   552                           
   553                           	psect	clrtext
   554  0829                     clear_ram0:	
   555                           ;	Called with FSR0 containing the base address, and
   556                           ;	WREG with the size to clear
   557                           
   558  0829  0064               	clrwdt	;clear the watchdog before getting into this loop
   559  082A                     clrloop0:	
   560  082A  0180               	clrf	0	;clear RAM location pointed to by FSR
   561  082B  3101               	addfsr 0,1
   562  082C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   563  082D  282A               	goto	clrloop0	;have we reached the end yet?
   564  082E  3400               	retlw	0	;all done for this memory range, return
   565                           
   566                           	psect	inittext
   567  0823                     init_ram:	
   568  0823  00FE               	movwf	126
   569  0824                     initloop:	
   570  0824  0012               	moviw fsr0++
   571  0825  001E               	movwi fsr1++
   572  0826  0BFE               	decfsz	126,f
   573  0827  2824               	goto	initloop
   574  0828  3400               	retlw	0
   575                           
   576                           	psect	cstackBANK2
   577  0140                     __pcstackBANK2:	
   578  0140                     ??_checkSensors:	
   579  0140                     showAlarmMessage@mes_count:	
   580                           ; 1 bytes @ 0x0
   581                           
   582                           
   583                           ; 1 bytes @ 0x0
   584  0140                     	ds	1
   585  0141                     showAlarmMessage@kk:	
   586                           
   587                           ; 1 bytes @ 0x1
   588  0141                     	ds	1
   589  0142                     showAlarmMessage@l:	
   590                           
   591                           ; 1 bytes @ 0x2
   592  0142                     	ds	1
   593  0143                     showAlarmMessage@j:	
   594                           
   595                           ; 1 bytes @ 0x3
   596  0143                     	ds	1
   597  0144                     ??_main:	
   598                           
   599                           ; 1 bytes @ 0x4
   600  0144                     	ds	3
   601  0147                     main@k:	
   602                           
   603                           ; 2 bytes @ 0x7
   604  0147                     	ds	2
   605                           
   606                           	psect	cstackBANK1
   607  00EA                     __pcstackBANK1:	
   608  00EA                     ??_lcd_clear:	
   609  00EA                     ??_lcd_yaz:	
   610                           ; 1 bytes @ 0x0
   611                           
   612                           
   613                           ; 1 bytes @ 0x0
   614  00EA                     	ds	1
   615  00EB                     ??_LCD_init:	
   616  00EB                     lcd_yaz@s:	
   617                           ; 1 bytes @ 0x1
   618                           
   619                           
   620                           ; 1 bytes @ 0x1
   621  00EB                     	ds	1
   622  00EC                     ?_lcd_write:	
   623  00EC                     ??_showAlarmMessage:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  00EC                     ??_disp_time_info:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  00EC                     ??_showPoem:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  00EC                     lcd_write@s:	
   633                           ; 1 bytes @ 0x2
   634                           
   635                           
   636                           ; 2 bytes @ 0x2
   637  00EC                     	ds	2
   638  00EE                     ??_lcd_write:	
   639  00EE                     disp_time_info@k:	
   640                           ; 1 bytes @ 0x4
   641                           
   642                           
   643                           ; 1 bytes @ 0x4
   644  00EE                     	ds	1
   645  00EF                     checkSensors@any:	
   646                           
   647                           ; 1 bytes @ 0x5
   648  00EF                     	ds	1
   649                           
   650                           	psect	cstackCOMMON
   651  0070                     __pcstackCOMMON:	
   652  0070                     ?_DELAY:	
   653  0070                     ?_DELAY100:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_UART_byte_send:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ??_UART_byte_send:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_UART_byte_receive:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ??_UART_byte_receive:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_UART_init:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_initialize:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_I2C_Start:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_I2C_data_receive:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_I2C_data_send:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_I2C_SendACK:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_I2C_SendNACK:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_I2C_Stop:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_DS1307_time:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_DS1307_date:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_DS1307_set_shared:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_PCF8574_load_data:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_lcd_clear:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_lcd_yaz:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_LCD_init:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_EEPROM_ReadByte:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_INSELECT_select:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_ADC_init:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_ADC_read:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_checkSensors:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_showAlarmMessage:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_disp_time_info:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_findClosestAlarm:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_showPoem:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_DHT11_get_data:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_pinControl:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_commondUART:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_sendT:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_receiveStruct:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_FNC:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_display_number:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_main:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?i1_DELAY:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??i1_DELAY:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?i1_I2C_Start:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ??i1_I2C_Start:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?i1_I2C_data_receive:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??i1_I2C_data_receive:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?i1_I2C_data_send:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ??i1_I2C_data_send:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?i1_I2C_SendNACK:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ??i1_I2C_SendNACK:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?i1_I2C_Stop:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ??i1_I2C_Stop:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?i1_PCF8574_load_data:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?i1_EEPROM_ReadByte:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ??i1_EEPROM_ReadByte:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?i1_INSELECT_select:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?i1_ADC_read:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?i1___bmul:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?i1___wmul:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     UART_byte_send@data:	
   822                           ; 2 bytes @ 0x0
   823                           
   824  0070                     PCF8574_load_data@data:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     i1EEPROM_ReadByte@address:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     i1___bmul@multiplicand:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     i1___wmul@multiplier:	
   834                           ; 1 bytes @ 0x0
   835                           
   836                           
   837                           ; 2 bytes @ 0x0
   838  0070                     	ds	1
   839  0071                     ??i1___bmul:	
   840  0071                     i1I2C_data_send@data:	
   841                           ; 1 bytes @ 0x1
   842                           
   843                           
   844                           ; 1 bytes @ 0x1
   845  0071                     	ds	1
   846  0072                     ??_DS1307_set_shared:	
   847  0072                     ??i1_PCF8574_load_data:	
   848                           ; 1 bytes @ 0x2
   849                           
   850  0072                     ?i1_PCF8574_set_pin:	
   851                           ; 1 bytes @ 0x2
   852                           
   853  0072                     i1DELAY@number:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0072                     i1PCF8574_set_pin@value:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0072                     i1___bmul@product:	
   860                           ; 1 bytes @ 0x2
   861                           
   862  0072                     i1___wmul@multiplicand:	
   863                           ; 1 bytes @ 0x2
   864                           
   865                           
   866                           ; 2 bytes @ 0x2
   867  0072                     	ds	1
   868  0073                     ??i1_PCF8574_set_pin:	
   869  0073                     DS1307_set_shared@addr:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0073                     i1DELAY@k:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0073                     i1___bmul@multiplier:	
   876                           ; 1 bytes @ 0x3
   877                           
   878                           
   879                           ; 1 bytes @ 0x3
   880  0073                     	ds	1
   881  0074                     ?_Generic_write_byte:	
   882  0074                     ?_EEPROM_WriteByte:	
   883                           ; 1 bytes @ 0x4
   884                           
   885  0074                     ??_commondUART:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0074                     ??_sendT:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     ??_receiveStruct:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     ?i1_Generic_read_byte:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     ??i1___wmul:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0074                     EEPROM_WriteByte@value:	
   901                           ; 1 bytes @ 0x4
   902                           
   903  0074                     Generic_write_byte@address:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0074                     i1Generic_read_byte@address:	
   907                           ; 2 bytes @ 0x4
   908                           
   909  0074                     i1___wmul@product:	
   910                           ; 2 bytes @ 0x4
   911                           
   912                           
   913                           ; 2 bytes @ 0x4
   914  0074                     	ds	1
   915  0075                     ??_EEPROM_WriteByte:	
   916  0075                     EEPROM_WriteByte@address:	
   917                           ; 1 bytes @ 0x5
   918                           
   919  0075                     i1PCF8574_set_pin@pin_number:	
   920                           ; 1 bytes @ 0x5
   921                           
   922                           
   923                           ; 1 bytes @ 0x5
   924  0075                     	ds	1
   925  0076                     ?i1_LoadDataCenter:	
   926  0076                     ??i1_Generic_read_byte:	
   927                           ; 1 bytes @ 0x6
   928                           
   929  0076                     Generic_write_byte@data:	
   930                           ; 1 bytes @ 0x6
   931                           
   932  0076                     i1LoadDataCenter@center_data:	
   933                           ; 1 bytes @ 0x6
   934                           
   935                           
   936                           ; 1 bytes @ 0x6
   937  0076                     	ds	1
   938  0077                     ??_Generic_write_byte:	
   939  0077                     ??i1_LoadDataCenter:	
   940                           ; 1 bytes @ 0x7
   941                           
   942  0077                     Generic_write_byte@dev_id:	
   943                           ; 1 bytes @ 0x7
   944                           
   945  0077                     i1Generic_read_byte@received:	
   946                           ; 1 bytes @ 0x7
   947                           
   948                           
   949                           ; 1 bytes @ 0x7
   950  0077                     	ds	1
   951  0078                     ?_EEPROM24C32_write_byte:	
   952  0078                     ?_EEPROM24C64_write_byte:	
   953                           ; 1 bytes @ 0x8
   954                           
   955  0078                     i1Generic_read_byte@dev_id:	
   956                           ; 1 bytes @ 0x8
   957                           
   958  0078                     EEPROM24C32_write_byte@address:	
   959                           ; 1 bytes @ 0x8
   960                           
   961  0078                     EEPROM24C64_write_byte@address:	
   962                           ; 2 bytes @ 0x8
   963                           
   964                           
   965                           ; 2 bytes @ 0x8
   966  0078                     	ds	1
   967  0079                     ?i1_EEPROM24C32_read_byte:	
   968  0079                     i1LoadDataCenter@center_no:	
   969                           ; 1 bytes @ 0x9
   970                           
   971  0079                     i1EEPROM24C32_read_byte@address:	
   972                           ; 1 bytes @ 0x9
   973                           
   974                           
   975                           ; 2 bytes @ 0x9
   976  0079                     	ds	1
   977  007A                     EEPROM24C32_write_byte@data:	
   978  007A                     EEPROM24C64_write_byte@data:	
   979                           ; 1 bytes @ 0xA
   980                           
   981  007A                     i1LoadDataCenter@index:	
   982                           ; 1 bytes @ 0xA
   983                           
   984                           
   985                           ; 1 bytes @ 0xA
   986  007A                     	ds	1
   987  007B                     ??_EEPROM24C32_write_byte:	
   988  007B                     ??_EEPROM24C64_write_byte:	
   989                           ; 1 bytes @ 0xB
   990                           
   991  007B                     ?i1_shift_reg_set_pin_lcd:	
   992                           ; 1 bytes @ 0xB
   993                           
   994  007B                     ??i1_EEPROM24C32_read_byte:	
   995                           ; 1 bytes @ 0xB
   996                           
   997  007B                     ??i1_INSELECT_select:	
   998                           ; 1 bytes @ 0xB
   999                           
  1000  007B                     i1shift_reg_set_pin_lcd@pin_value:	
  1001                           ; 1 bytes @ 0xB
  1002                           
  1003                           
  1004                           ; 1 bytes @ 0xB
  1005  007B                     	ds	1
  1006  007C                     ??i1_shift_reg_set_pin_lcd:	
  1007  007C                     i1INSELECT_select@input_number:	
  1008                           ; 1 bytes @ 0xC
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0xC
  1012  007C                     	ds	1
  1013  007D                     ??i1_ADC_read:	
  1014                           
  1015                           ; 1 bytes @ 0xD
  1016  007D                     	ds	1
  1017                           
  1018                           	psect	cstackBANK0
  1019  0020                     __pcstackBANK0:	
  1020  0020                     i1shift_reg_set_pin_lcd@pin_number:	
  1021  0020                     i1ADC_read@pin:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x0
  1026  0020                     	ds	1
  1027  0021                     ??_pinControl:	
  1028  0021                     i1ADC_read@m:	
  1029                           ; 1 bytes @ 0x1
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x1
  1033  0021                     	ds	1
  1034  0022                     ??_FNC:	
  1035                           
  1036                           ; 1 bytes @ 0x2
  1037  0022                     	ds	5
  1038  0027                     FNC@m_id:	
  1039                           
  1040                           ; 1 bytes @ 0x7
  1041  0027                     	ds	1
  1042  0028                     FNC@mes_id:	
  1043                           
  1044                           ; 1 bytes @ 0x8
  1045  0028                     	ds	1
  1046  0029                     FNC@message_count:	
  1047                           
  1048                           ; 1 bytes @ 0x9
  1049  0029                     	ds	1
  1050  002A                     FNC@leng:	
  1051                           
  1052                           ; 1 bytes @ 0xA
  1053  002A                     	ds	1
  1054  002B                     FNC@temp2:	
  1055                           
  1056                           ; 1 bytes @ 0xB
  1057  002B                     	ds	1
  1058  002C                     FNC@l:	
  1059                           
  1060                           ; 1 bytes @ 0xC
  1061  002C                     	ds	1
  1062  002D                     ??_DELAY:	
  1063  002D                     ??_DELAY100:	
  1064                           ; 1 bytes @ 0xD
  1065                           
  1066  002D                     ??_UART_init:	
  1067                           ; 1 bytes @ 0xD
  1068                           
  1069  002D                     ??_I2C_Start:	
  1070                           ; 1 bytes @ 0xD
  1071                           
  1072  002D                     ??_I2C_data_receive:	
  1073                           ; 1 bytes @ 0xD
  1074                           
  1075  002D                     ??_I2C_data_send:	
  1076                           ; 1 bytes @ 0xD
  1077                           
  1078  002D                     ??_I2C_SendACK:	
  1079                           ; 1 bytes @ 0xD
  1080                           
  1081  002D                     ??_I2C_SendNACK:	
  1082                           ; 1 bytes @ 0xD
  1083                           
  1084  002D                     ??_I2C_Stop:	
  1085                           ; 1 bytes @ 0xD
  1086                           
  1087  002D                     ??_EEPROM_ReadByte:	
  1088                           ; 1 bytes @ 0xD
  1089                           
  1090  002D                     ?_compareAlarms:	
  1091                           ; 1 bytes @ 0xD
  1092                           
  1093  002D                     ?___bmul:	
  1094                           ; 1 bytes @ 0xD
  1095                           
  1096  002D                     ?___wmul:	
  1097                           ; 1 bytes @ 0xD
  1098                           
  1099  002D                     ?___awdiv:	
  1100                           ; 2 bytes @ 0xD
  1101                           
  1102  002D                     ?___awmod:	
  1103                           ; 2 bytes @ 0xD
  1104                           
  1105  002D                     EEPROM_ReadByte@address:	
  1106                           ; 2 bytes @ 0xD
  1107                           
  1108  002D                     compareAlarms@arr2:	
  1109                           ; 1 bytes @ 0xD
  1110                           
  1111  002D                     ___bmul@multiplicand:	
  1112                           ; 1 bytes @ 0xD
  1113                           
  1114  002D                     ___wmul@multiplier:	
  1115                           ; 1 bytes @ 0xD
  1116                           
  1117  002D                     ___awdiv@divisor:	
  1118                           ; 2 bytes @ 0xD
  1119                           
  1120  002D                     ___awmod@divisor:	
  1121                           ; 2 bytes @ 0xD
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0xD
  1125  002D                     	ds	1
  1126  002E                     ??_compareAlarms:	
  1127  002E                     ??___bmul:	
  1128                           ; 1 bytes @ 0xE
  1129                           
  1130  002E                     I2C_data_send@data:	
  1131                           ; 1 bytes @ 0xE
  1132                           
  1133                           
  1134                           ; 1 bytes @ 0xE
  1135  002E                     	ds	1
  1136  002F                     ??_PCF8574_load_data:	
  1137  002F                     ?_PCF8574_set_pin:	
  1138                           ; 1 bytes @ 0xF
  1139                           
  1140  002F                     DELAY@number:	
  1141                           ; 1 bytes @ 0xF
  1142                           
  1143  002F                     PCF8574_set_pin@value:	
  1144                           ; 1 bytes @ 0xF
  1145                           
  1146  002F                     ___bmul@product:	
  1147                           ; 1 bytes @ 0xF
  1148                           
  1149  002F                     ___wmul@multiplicand:	
  1150                           ; 1 bytes @ 0xF
  1151                           
  1152  002F                     ___awdiv@dividend:	
  1153                           ; 2 bytes @ 0xF
  1154                           
  1155  002F                     ___awmod@dividend:	
  1156                           ; 2 bytes @ 0xF
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0xF
  1160  002F                     	ds	1
  1161  0030                     ??_PCF8574_set_pin:	
  1162  0030                     DELAY@k:	
  1163                           ; 1 bytes @ 0x10
  1164                           
  1165  0030                     DELAY100@number:	
  1166                           ; 1 bytes @ 0x10
  1167                           
  1168  0030                     compareAlarms@arr1:	
  1169                           ; 1 bytes @ 0x10
  1170                           
  1171  0030                     ___bmul@multiplier:	
  1172                           ; 1 bytes @ 0x10
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0x10
  1176  0030                     	ds	1
  1177  0031                     ??_I2C_initialize:	
  1178  0031                     ?_DS1307_shared_get:	
  1179                           ; 1 bytes @ 0x11
  1180                           
  1181  0031                     ?_Generic_read_byte:	
  1182                           ; 1 bytes @ 0x11
  1183                           
  1184  0031                     ??_ADC_init:	
  1185                           ; 1 bytes @ 0x11
  1186                           
  1187  0031                     ??_DHT11_get_data:	
  1188                           ; 1 bytes @ 0x11
  1189                           
  1190  0031                     ??___wmul:	
  1191                           ; 1 bytes @ 0x11
  1192                           
  1193  0031                     ??___awdiv:	
  1194                           ; 1 bytes @ 0x11
  1195                           
  1196  0031                     ??___awmod:	
  1197                           ; 1 bytes @ 0x11
  1198                           
  1199  0031                     DELAY100@k:	
  1200                           ; 1 bytes @ 0x11
  1201                           
  1202  0031                     DS1307_shared_get@reg:	
  1203                           ; 1 bytes @ 0x11
  1204                           
  1205  0031                     compareAlarms@j:	
  1206                           ; 1 bytes @ 0x11
  1207                           
  1208  0031                     Generic_read_byte@address:	
  1209                           ; 1 bytes @ 0x11
  1210                           
  1211  0031                     ___wmul@product:	
  1212                           ; 2 bytes @ 0x11
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x11
  1216  0031                     	ds	1
  1217  0032                     ??_DS1307_shared_get:	
  1218  0032                     ??_findClosestAlarm:	
  1219                           ; 1 bytes @ 0x12
  1220                           
  1221  0032                     PCF8574_set_pin@pin_number:	
  1222                           ; 1 bytes @ 0x12
  1223                           
  1224  0032                     ___awdiv@counter:	
  1225                           ; 1 bytes @ 0x12
  1226                           
  1227  0032                     ___awmod@counter:	
  1228                           ; 1 bytes @ 0x12
  1229                           
  1230                           
  1231                           ; 1 bytes @ 0x12
  1232  0032                     	ds	1
  1233  0033                     ?_LoadDataCenter:	
  1234  0033                     ??_Generic_read_byte:	
  1235                           ; 1 bytes @ 0x13
  1236                           
  1237  0033                     LoadDataCenter@center_data:	
  1238                           ; 1 bytes @ 0x13
  1239                           
  1240  0033                     findClosestAlarm@valid:	
  1241                           ; 1 bytes @ 0x13
  1242                           
  1243  0033                     DHT11_get_data@a:	
  1244                           ; 1 bytes @ 0x13
  1245                           
  1246  0033                     ___awdiv@sign:	
  1247                           ; 1 bytes @ 0x13
  1248                           
  1249  0033                     ___awmod@sign:	
  1250                           ; 1 bytes @ 0x13
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x13
  1254  0033                     	ds	1
  1255  0034                     ??_LoadDataCenter:	
  1256  0034                     Generic_read_byte@received:	
  1257                           ; 1 bytes @ 0x14
  1258                           
  1259  0034                     findClosestAlarm@none:	
  1260                           ; 1 bytes @ 0x14
  1261                           
  1262  0034                     ___awdiv@quotient:	
  1263                           ; 1 bytes @ 0x14
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x14
  1267  0034                     	ds	1
  1268  0035                     Generic_read_byte@dev_id:	
  1269  0035                     findClosestAlarm@alarm_id4:	
  1270                           ; 1 bytes @ 0x15
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x15
  1274  0035                     	ds	1
  1275  0036                     ?_EEPROM24C32_read_byte:	
  1276  0036                     ?_EEPROM24C64_read_byte:	
  1277                           ; 1 bytes @ 0x16
  1278                           
  1279  0036                     DS1307_shared_get@addr:	
  1280                           ; 1 bytes @ 0x16
  1281                           
  1282  0036                     LoadDataCenter@center_no:	
  1283                           ; 1 bytes @ 0x16
  1284                           
  1285  0036                     findClosestAlarm@alarm_count:	
  1286                           ; 1 bytes @ 0x16
  1287                           
  1288  0036                     EEPROM24C32_read_byte@address:	
  1289                           ; 1 bytes @ 0x16
  1290                           
  1291  0036                     EEPROM24C64_read_byte@address:	
  1292                           ; 2 bytes @ 0x16
  1293                           
  1294                           
  1295                           ; 2 bytes @ 0x16
  1296  0036                     	ds	1
  1297  0037                     DS1307_shared_get@k:	
  1298  0037                     LoadDataCenter@index:	
  1299                           ; 1 bytes @ 0x17
  1300                           
  1301  0037                     findClosestAlarm@k_265:	
  1302                           ; 1 bytes @ 0x17
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x17
  1306  0037                     	ds	1
  1307  0038                     ?_shift_reg_set_pin_lcd:	
  1308  0038                     ??_EEPROM24C32_read_byte:	
  1309                           ; 1 bytes @ 0x18
  1310                           
  1311  0038                     ??_EEPROM24C64_read_byte:	
  1312                           ; 1 bytes @ 0x18
  1313                           
  1314  0038                     ??_INSELECT_select:	
  1315                           ; 1 bytes @ 0x18
  1316                           
  1317  0038                     ??_display_number:	
  1318                           ; 1 bytes @ 0x18
  1319                           
  1320  0038                     DS1307_shared_get@den:	
  1321                           ; 1 bytes @ 0x18
  1322                           
  1323  0038                     shift_reg_set_pin_lcd@pin_value:	
  1324                           ; 1 bytes @ 0x18
  1325                           
  1326  0038                     findClosestAlarm@start:	
  1327                           ; 1 bytes @ 0x18
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x18
  1331  0038                     	ds	1
  1332  0039                     ??_DS1307_time:	
  1333  0039                     ??_DS1307_date:	
  1334                           ; 1 bytes @ 0x19
  1335                           
  1336  0039                     ??_shift_reg_set_pin_lcd:	
  1337                           ; 1 bytes @ 0x19
  1338                           
  1339  0039                     INSELECT_select@input_number:	
  1340                           ; 1 bytes @ 0x19
  1341                           
  1342  0039                     findClosestAlarm@k:	
  1343                           ; 1 bytes @ 0x19
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0x19
  1347  0039                     	ds	1
  1348  003A                     ??_ADC_read:	
  1349  003A                     findClosestAlarm@j:	
  1350                           ; 1 bytes @ 0x1A
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x1A
  1354  003A                     	ds	1
  1355  003B                     shift_reg_set_pin_lcd@pin_number:	
  1356  003B                     ADC_read@pin:	
  1357                           ; 1 bytes @ 0x1B
  1358                           
  1359  003B                     display_number@number:	
  1360                           ; 1 bytes @ 0x1B
  1361                           
  1362                           
  1363                           ; 1 bytes @ 0x1B
  1364  003B                     	ds	1
  1365  003C                     ?_lcd_info:	
  1366  003C                     lcd_info@data_type:	
  1367                           ; 1 bytes @ 0x1C
  1368                           
  1369  003C                     ADC_read@m:	
  1370                           ; 1 bytes @ 0x1C
  1371                           
  1372  003C                     display_number@digit:	
  1373                           ; 1 bytes @ 0x1C
  1374                           
  1375                           
  1376                           ; 1 bytes @ 0x1C
  1377  003C                     	ds	1
  1378  003D                     ??_lcd_info:	
  1379                           
  1380                           ; 1 bytes @ 0x1D
  1381  003D                     	ds	2
  1382  003F                     lcd_info@c:	
  1383                           
  1384                           ; 1 bytes @ 0x1F
  1385  003F                     	ds	1
  1386  0040                     ?_lcd_goto:	
  1387  0040                     lcd_goto@p_2:	
  1388                           ; 1 bytes @ 0x20
  1389                           
  1390                           
  1391                           ; 1 bytes @ 0x20
  1392  0040                     	ds	1
  1393  0041                     ??_lcd_goto:	
  1394                           
  1395                           ; 1 bytes @ 0x21
  1396  0041                     	ds	1
  1397  0042                     lcd_goto@p_1:	
  1398                           
  1399                           ; 1 bytes @ 0x22
  1400  0042                     	ds	1
  1401                           
  1402                           	psect	maintext
  1403  046D                     __pmaintext:	
  1404 ;;
  1405 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1406 ;;
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 44 in file "PoemCircuit.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  k               2    7[BANK2 ] unsigned int 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : B1F/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1423 ;;      Params:         0       0       0       0
  1424 ;;      Locals:         0       0       0       2
  1425 ;;      Temps:          0       0       0       3
  1426 ;;      Totals:         0       0       0       5
  1427 ;;Total ram usage:        5 bytes
  1428 ;; Hardware stack levels required when called:   17
  1429 ;; This function calls:
  1430 ;;		_ADC_init
  1431 ;;		_DELAY
  1432 ;;		_DHT11_get_data
  1433 ;;		_DS1307_date
  1434 ;;		_DS1307_time
  1435 ;;		_EEPROM_ReadByte
  1436 ;;		_I2C_initialize
  1437 ;;		_INSELECT_select
  1438 ;;		_LCD_init
  1439 ;;		_UART_init
  1440 ;;		___awdiv
  1441 ;;		___awmod
  1442 ;;		_checkSensors
  1443 ;;		_compareAlarms
  1444 ;;		_disp_time_info
  1445 ;;		_display_number
  1446 ;;		_findClosestAlarm
  1447 ;;		_lcd_goto
  1448 ;;		_lcd_yaz
  1449 ;;		_shift_reg_set_pin_lcd
  1450 ;;		_showAlarmMessage
  1451 ;;		_showPoem
  1452 ;; This function is called by:
  1453 ;;		Startup code after reset
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _main
  1459  046D                     _main:	
  1460                           
  1461                           ;PoemCircuit.c: 46: ANSELA = 0;
  1462                           
  1463                           ;incstack = 0
  1464 ;; hardware stack exceeded
  1465                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1466  046D  0023               	movlb	3	; select bank3
  1467  046E  018C               	clrf	12	;volatile
  1468                           
  1469                           ;PoemCircuit.c: 48: TRISA = 0b00111110;
  1470  046F  303E               	movlw	62
  1471  0470  0021               	movlb	1	; select bank1
  1472  0471  008C               	movwf	12	;volatile
  1473                           
  1474                           ;PoemCircuit.c: 50: SPLLEN = 0;
  1475  0472  1399               	bcf	25,7	;volatile
  1476                           
  1477                           ;PoemCircuit.c: 55: IRCF3 = 1;
  1478  0473  1719               	bsf	25,6	;volatile
  1479                           
  1480                           ;PoemCircuit.c: 56: IRCF2 = 1;
  1481  0474  1699               	bsf	25,5	;volatile
  1482                           
  1483                           ;PoemCircuit.c: 57: IRCF1 = 1;
  1484  0475  1619               	bsf	25,4	;volatile
  1485                           
  1486                           ;PoemCircuit.c: 58: IRCF0 = 0;
  1487  0476  1199               	bcf	25,3	;volatile
  1488                           
  1489                           ;PoemCircuit.c: 60: SCS1 = 1 ;
  1490  0477  1499               	bsf	25,1	;volatile
  1491                           
  1492                           ;PoemCircuit.c: 61: SCS0 = 0;
  1493  0478  1019               	bcf	25,0	;volatile
  1494                           
  1495                           ;PoemCircuit.c: 63: IOCAN = 0;
  1496  0479  0027               	movlb	7	; select bank7
  1497  047A  0192               	clrf	18	;volatile
  1498                           
  1499                           ;PoemCircuit.c: 64: IOCAP = 0;
  1500  047B  0191               	clrf	17	;volatile
  1501                           
  1502                           ;PoemCircuit.c: 66: IOCAP3 = 1;
  1503  047C  1591               	bsf	17,3	;volatile
  1504                           
  1505                           ;PoemCircuit.c: 67: IOCIE = 1;
  1506  047D  158B               	bsf	11,3	;volatile
  1507                           
  1508                           ;PoemCircuit.c: 68: IOCIF = 0;
  1509  047E  100B               	bcf	11,0	;volatile
  1510                           
  1511                           ;PoemCircuit.c: 69: RXDTSEL = 1;
  1512  047F  0022               	movlb	2	; select bank2
  1513  0480  179D               	bsf	29,7	;volatile
  1514                           
  1515                           ;PoemCircuit.c: 70: DELAY(120);
  1516  0481  3078               	movlw	120
  1517  0482  3189  21BB  3184   	fcall	_DELAY
  1518                           
  1519                           ;PoemCircuit.c: 72: UART_init();
  1520  0485  3188  20FF  3184   	fcall	_UART_init
  1521                           
  1522                           ;PoemCircuit.c: 73: I2C_initialize();
  1523  0488  3188  20F1  3184   	fcall	_I2C_initialize
  1524                           
  1525                           ;PoemCircuit.c: 74: ADC_init();
  1526  048B  3189  217F  3184   	fcall	_ADC_init
  1527                           
  1528                           ;PoemCircuit.c: 75: DELAY(100);
  1529  048E  3064               	movlw	100
  1530  048F  3189  21BB  3184   	fcall	_DELAY
  1531                           
  1532                           ;PoemCircuit.c: 77: LCD_init();
  1533  0492  318D  256C  3184   	fcall	_LCD_init
  1534                           
  1535                           ;PoemCircuit.c: 78: DELAY(100);
  1536  0495  3064               	movlw	100
  1537  0496  3189  21BB  3184   	fcall	_DELAY
  1538                           
  1539                           ;PoemCircuit.c: 79: DS1307_date();
  1540  0499  3188  2084  3184   	fcall	_DS1307_date
  1541                           
  1542                           ;PoemCircuit.c: 80: DS1307_time();
  1543  049C  318A  226B  3184   	fcall	_DS1307_time
  1544                           
  1545                           ;PoemCircuit.c: 81: PEIE = 1;
  1546  049F  170B               	bsf	11,6	;volatile
  1547                           
  1548                           ;PoemCircuit.c: 86: INSELECT_select(1);
  1549  04A0  3001               	movlw	1
  1550  04A1  3189  213B  3184   	fcall	_INSELECT_select
  1551                           
  1552                           ;PoemCircuit.c: 87: DHT11_get_data();
  1553  04A4  3187  2751  3184   	fcall	_DHT11_get_data
  1554                           
  1555                           ;PoemCircuit.c: 88: findClosestAlarm();
  1556  04A7  3186  262C  3184   	fcall	_findClosestAlarm
  1557                           
  1558                           ;PoemCircuit.c: 89: display_number();
  1559  04AA  318D  25B9  3184   	fcall	_display_number
  1560                           
  1561                           ;PoemCircuit.c: 90: EXTRA_INFO_SHOW = 0;
  1562  04AD  0021               	movlb	1	; select bank1
  1563  04AE  01AD               	clrf	_EXTRA_INFO_SHOW^(0+128)
  1564  04AF                     l4560:	
  1565                           ;PoemCircuit.c: 93: while(1)
  1566                           
  1567                           
  1568                           ;PoemCircuit.c: 94: {
  1569                           ;PoemCircuit.c: 96: GIE = 0;
  1570  04AF  138B               	bcf	11,7	;volatile
  1571                           
  1572                           ;PoemCircuit.c: 97: DS1307_time();
  1573  04B0  318A  226B  3184   	fcall	_DS1307_time
  1574                           
  1575                           ;PoemCircuit.c: 98: disp_time_info();
  1576  04B3  318E  26B7  3184   	fcall	_disp_time_info
  1577                           
  1578                           ;PoemCircuit.c: 100: if(saniye %10 == 0)
  1579  04B6  300A               	movlw	10
  1580  04B7  0020               	movlb	0	; select bank0
  1581  04B8  00AD               	movwf	___awmod@divisor
  1582  04B9  3000               	movlw	0
  1583  04BA  00AE               	movwf	___awmod@divisor+1
  1584  04BB  0852               	movf	_saniye,w
  1585  04BC  0022               	movlb	2	; select bank2
  1586  04BD  00C4               	movwf	??_main^(0+256)
  1587  04BE  01C5               	clrf	(??_main^(0+256)+1)
  1588  04BF  0844               	movf	??_main^(0+256),w
  1589  04C0  0020               	movlb	0	; select bank0
  1590  04C1  00AF               	movwf	___awmod@dividend
  1591  04C2  0022               	movlb	2	; select bank2
  1592  04C3  0845               	movf	(??_main+1)^(0+256),w
  1593  04C4  0020               	movlb	0	; select bank0
  1594  04C5  00B0               	movwf	___awmod@dividend+1
  1595  04C6  318D  2526  3184   	fcall	___awmod
  1596  04C9  0020               	movlb	0	; select bank0
  1597  04CA  082D               	movf	?___awmod,w
  1598  04CB  042E               	iorwf	?___awmod+1,w
  1599  04CC  1D03               	btfss	3,2
  1600  04CD  2CD7               	goto	l4572
  1601                           
  1602                           ;PoemCircuit.c: 101: {
  1603                           ;PoemCircuit.c: 102: what_to_display ^= 1;
  1604  04CE  3001               	movlw	1
  1605  04CF  0022               	movlb	2	; select bank2
  1606  04D0  00C4               	movwf	??_main^(0+256)
  1607  04D1  0844               	movf	??_main^(0+256),w
  1608  04D2  0020               	movlb	0	; select bank0
  1609  04D3  06D9               	xorwf	_what_to_display,f
  1610                           
  1611                           ;PoemCircuit.c: 103: display_number();
  1612  04D4  318D  25B9  3184   	fcall	_display_number
  1613  04D7                     l4572:	
  1614                           
  1615                           ;PoemCircuit.c: 104: }
  1616                           ;PoemCircuit.c: 105: if(saniye %30 == 0){
  1617  04D7  301E               	movlw	30
  1618  04D8  0020               	movlb	0	; select bank0
  1619  04D9  00AD               	movwf	___awmod@divisor
  1620  04DA  3000               	movlw	0
  1621  04DB  00AE               	movwf	___awmod@divisor+1
  1622  04DC  0852               	movf	_saniye,w
  1623  04DD  0022               	movlb	2	; select bank2
  1624  04DE  00C4               	movwf	??_main^(0+256)
  1625  04DF  01C5               	clrf	(??_main^(0+256)+1)
  1626  04E0  0844               	movf	??_main^(0+256),w
  1627  04E1  0020               	movlb	0	; select bank0
  1628  04E2  00AF               	movwf	___awmod@dividend
  1629  04E3  0022               	movlb	2	; select bank2
  1630  04E4  0845               	movf	(??_main+1)^(0+256),w
  1631  04E5  0020               	movlb	0	; select bank0
  1632  04E6  00B0               	movwf	___awmod@dividend+1
  1633  04E7  318D  2526  3184   	fcall	___awmod
  1634  04EA  0020               	movlb	0	; select bank0
  1635  04EB  082D               	movf	?___awmod,w
  1636  04EC  042E               	iorwf	?___awmod+1,w
  1637  04ED  1D03               	btfss	3,2
  1638  04EE  2CF9               	goto	l4580
  1639                           
  1640                           ;PoemCircuit.c: 106: checkSensors();
  1641  04EF  3185  258B  3184   	fcall	_checkSensors
  1642                           
  1643                           ;PoemCircuit.c: 108: INSELECT_select(1);
  1644  04F2  3001               	movlw	1
  1645  04F3  3189  213B  3184   	fcall	_INSELECT_select
  1646                           
  1647                           ;PoemCircuit.c: 109: DHT11_get_data();
  1648  04F6  3187  2751  3184   	fcall	_DHT11_get_data
  1649  04F9                     l4580:	
  1650                           
  1651                           ;PoemCircuit.c: 110: }
  1652                           ;PoemCircuit.c: 111: if(saniye == 0)
  1653  04F9  0020               	movlb	0	; select bank0
  1654  04FA  0852               	movf	_saniye,w
  1655  04FB  1D03               	btfss	3,2
  1656  04FC  2D24               	goto	l4592
  1657                           
  1658                           ;PoemCircuit.c: 112: {
  1659                           ;PoemCircuit.c: 113: if(compareAlarms(zaman, closest_alarm) == 1)
  1660  04FD  30C9               	movlw	(low (_closest_alarm| 0))& (0+255)
  1661  04FE  0022               	movlb	2	; select bank2
  1662  04FF  00C4               	movwf	??_main^(0+256)
  1663  0500  0844               	movf	??_main^(0+256),w
  1664  0501  0020               	movlb	0	; select bank0
  1665  0502  00AD               	movwf	compareAlarms@arr2
  1666  0503  30C3               	movlw	(low (_zaman| 0))& (0+255)
  1667  0504  318C  2480  3184   	fcall	_compareAlarms
  1668  0507  3A01               	xorlw	1
  1669  0508  1D03               	skipz
  1670  0509  2D1A               	goto	l4586
  1671                           
  1672                           ;PoemCircuit.c: 114: {
  1673                           ;PoemCircuit.c: 115: shift_reg_set_pin_lcd(7, 1);
  1674  050A  0020               	movlb	0	; select bank0
  1675  050B  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  1676  050C  0AB8               	incf	shift_reg_set_pin_lcd@pin_value,f
  1677  050D  3007               	movlw	7
  1678  050E  318B  2302  3184   	fcall	_shift_reg_set_pin_lcd
  1679                           
  1680                           ;PoemCircuit.c: 116: showAlarmMessage();
  1681  0511  3186  26CC  3184   	fcall	_showAlarmMessage
  1682                           
  1683                           ;PoemCircuit.c: 117: shift_reg_set_pin_lcd(7, 0);
  1684  0514  0020               	movlb	0	; select bank0
  1685  0515  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  1686  0516  3007               	movlw	7
  1687  0517  318B  2302  3184   	fcall	_shift_reg_set_pin_lcd
  1688  051A                     l4586:	
  1689                           
  1690                           ;PoemCircuit.c: 119: }
  1691                           ;PoemCircuit.c: 121: if(saat==0 && dakika == 0)
  1692  051A  0021               	movlb	1	; select bank1
  1693  051B  083E               	movf	_saat^(0+128),w
  1694  051C  1D03               	btfss	3,2
  1695  051D  2D24               	goto	l4592
  1696  051E  0835               	movf	_dakika^(0+128),w
  1697  051F  1D03               	btfss	3,2
  1698  0520  2D24               	goto	l4592
  1699                           
  1700                           ;PoemCircuit.c: 122: DS1307_date();
  1701  0521  3188  2084  3184   	fcall	_DS1307_date
  1702  0524                     l4592:	
  1703                           
  1704                           ;PoemCircuit.c: 123: }
  1705                           ;PoemCircuit.c: 125: GIE = 1;
  1706  0524  178B               	bsf	11,7	;volatile
  1707                           
  1708                           ;PoemCircuit.c: 127: for(unsigned int k = 0 ; k != 1000 ; k++)
  1709  0525  0022               	movlb	2	; select bank2
  1710  0526  01C7               	clrf	main@k^(0+256)
  1711  0527  01C8               	clrf	(main@k+1)^(0+256)
  1712  0528                     L1:	
  1713  0528  30E8               	movlw	232
  1714  0529  0647               	xorwf	main@k^(0+256),w
  1715  052A  3003               	movlw	3
  1716  052B  1903               	skipnz
  1717  052C  0648               	xorwf	(main@k+1)^(0+256),w
  1718  052D  1903               	btfsc	3,2
  1719  052E  2CAF               	goto	l4560
  1720                           
  1721                           ;PoemCircuit.c: 128: {
  1722                           ;PoemCircuit.c: 129: if(UPDATE_NEAREST_ALARM){UPDATE_NEAREST_ALARM = 0;findClosestAlarm(
      +                          );}
  1723  052F  0021               	movlb	1	; select bank1
  1724  0530  082F               	movf	_UPDATE_NEAREST_ALARM^(0+128),w
  1725  0531  1903               	btfsc	3,2
  1726  0532  2D37               	goto	l4606
  1727  0533  01AF               	clrf	_UPDATE_NEAREST_ALARM^(0+128)
  1728  0534  3186  262C  3184   	fcall	_findClosestAlarm
  1729  0537                     l4606:	
  1730                           
  1731                           ;PoemCircuit.c: 130: if(DISPLAY_POEM){GIE=0; DISPLAY_POEM = 0;showPoem(); GIE=1;}
  1732  0537  0020               	movlb	0	; select bank0
  1733  0538  0845               	movf	_DISPLAY_POEM,w
  1734  0539  1903               	btfsc	3,2
  1735  053A  2D41               	goto	l4616
  1736  053B  138B               	bcf	11,7	;volatile
  1737  053C  01C5               	clrf	_DISPLAY_POEM
  1738  053D  318E  265A  3184   	fcall	_showPoem
  1739  0540  178B               	bsf	11,7	;volatile
  1740  0541                     l4616:	
  1741                           
  1742                           ;PoemCircuit.c: 131: if(EXTRA_INFO_SHOW){
  1743  0541  0021               	movlb	1	; select bank1
  1744  0542  082D               	movf	_EXTRA_INFO_SHOW^(0+128),w
  1745  0543  1903               	btfsc	3,2
  1746  0544  2D81               	goto	l4632
  1747                           
  1748                           ;PoemCircuit.c: 132: EXTRA_INFO_SHOW = 0;
  1749  0545  01AD               	clrf	_EXTRA_INFO_SHOW^(0+128)
  1750                           
  1751                           ;PoemCircuit.c: 133: for(start=0;start != 16; start++)
  1752  0546  0020               	movlb	0	; select bank0
  1753  0547  01D4               	clrf	_start
  1754  0548  3010               	movlw	16
  1755  0549  0654               	xorwf	_start,w
  1756  054A  1903               	btfsc	3,2
  1757  054B  2D81               	goto	l4632
  1758  054C                     l4624:	
  1759                           
  1760                           ;PoemCircuit.c: 134: {
  1761                           ;PoemCircuit.c: 135: if(start % 8==0)lcd_goto(start/8+1, 9);
  1762  054C  0854               	movf	_start,w
  1763  054D  3907               	andlw	7
  1764  054E  1D03               	btfss	3,2
  1765  054F  2D6E               	goto	l657
  1766  0550  3009               	movlw	9
  1767  0551  0022               	movlb	2	; select bank2
  1768  0552  00C4               	movwf	??_main^(0+256)
  1769  0553  0844               	movf	??_main^(0+256),w
  1770  0554  0020               	movlb	0	; select bank0
  1771  0555  00C0               	movwf	lcd_goto@p_2
  1772  0556  3008               	movlw	8
  1773  0557  00AD               	movwf	___awdiv@divisor
  1774  0558  3000               	movlw	0
  1775  0559  00AE               	movwf	___awdiv@divisor+1
  1776  055A  0854               	movf	_start,w
  1777  055B  0022               	movlb	2	; select bank2
  1778  055C  00C5               	movwf	(??_main+1)^(0+256)
  1779  055D  01C6               	clrf	((??_main+1)^(0+256)+1)
  1780  055E  0845               	movf	(??_main+1)^(0+256),w
  1781  055F  0020               	movlb	0	; select bank0
  1782  0560  00AF               	movwf	___awdiv@dividend
  1783  0561  0022               	movlb	2	; select bank2
  1784  0562  0846               	movf	(??_main+2)^(0+256),w
  1785  0563  0020               	movlb	0	; select bank0
  1786  0564  00B0               	movwf	___awdiv@dividend+1
  1787  0565  318E  2608  3184   	fcall	___awdiv
  1788  0568  0020               	movlb	0	; select bank0
  1789  0569  082D               	movf	?___awdiv,w
  1790  056A  3E01               	addlw	1
  1791  056B  318A  22BD  3184   	fcall	_lcd_goto
  1792  056E                     l657:	
  1793                           
  1794                           ;PoemCircuit.c: 136: lcd_yaz(EEPROM_ReadByte(232+start));
  1795  056E  0020               	movlb	0	; select bank0
  1796  056F  0854               	movf	_start,w
  1797  0570  3EE8               	addlw	232
  1798  0571  3189  215C  3184   	fcall	_EEPROM_ReadByte
  1799  0574  318B  23C3  3184   	fcall	_lcd_yaz
  1800  0577  3001               	movlw	1
  1801  0578  0022               	movlb	2	; select bank2
  1802  0579  00C4               	movwf	??_main^(0+256)
  1803  057A  0844               	movf	??_main^(0+256),w
  1804  057B  0020               	movlb	0	; select bank0
  1805  057C  07D4               	addwf	_start,f
  1806  057D  3010               	movlw	16
  1807  057E  0654               	xorwf	_start,w
  1808  057F  1D03               	btfss	3,2
  1809  0580  2D4C               	goto	l4624
  1810  0581                     l4632:	
  1811                           
  1812                           ;PoemCircuit.c: 137: }
  1813                           ;PoemCircuit.c: 138: }
  1814                           ;PoemCircuit.c: 139: DELAY(1);
  1815  0581  3001               	movlw	1
  1816  0582  3189  21BB  3184   	fcall	_DELAY
  1817  0585  3001               	movlw	1
  1818  0586  0022               	movlb	2	; select bank2
  1819  0587  07C7               	addwf	main@k^(0+256),f
  1820  0588  3000               	movlw	0
  1821  0589  3DC8               	addwfc	(main@k+1)^(0+256),f
  1822  058A  2D28               	goto	L1
  1823  058B                     __end_of_main:	
  1824                           
  1825                           	psect	text1
  1826  0E5A                     __ptext1:	
  1827 ;; *************** function _showPoem *****************
  1828 ;; Defined at:
  1829 ;;		line 20 in file "POEM.h"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1843 ;;      Params:         0       0       0       0
  1844 ;;      Locals:         0       0       0       0
  1845 ;;      Temps:          0       0       2       0
  1846 ;;      Totals:         0       0       2       0
  1847 ;;Total ram usage:        2 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:   15
  1850 ;; This function calls:
  1851 ;;		_DELAY100
  1852 ;;		_EEPROM24C64_read_byte
  1853 ;;		_lcd_clear
  1854 ;;		_lcd_yaz
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _showPoem
  1862  0E5A                     _showPoem:	
  1863                           
  1864                           ;POEM.h: 22: lcd_clear();
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _showPoem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1868  0E5A  318A  2201  318E   	fcall	_lcd_clear
  1869                           
  1870                           ;POEM.h: 23: *(poem_size_point+1) = EEPROM24C64_read_byte(0);
  1871  0E5D  3000               	movlw	0
  1872  0E5E  0020               	movlb	0	; select bank0
  1873  0E5F  00B6               	movwf	EEPROM24C64_read_byte@address
  1874  0E60  00B7               	movwf	EEPROM24C64_read_byte@address+1
  1875  0E61  3188  2096  318E   	fcall	_EEPROM24C64_read_byte
  1876  0E64  0021               	movlb	1	; select bank1
  1877  0E65  00EC               	movwf	??_showPoem^(0+128)
  1878  0E66  0020               	movlb	0	; select bank0
  1879  0E67  0A60               	incf	_poem_size_point,w
  1880  0E68  0086               	movwf	6
  1881  0E69  0187               	clrf	7
  1882  0E6A  0021               	movlb	1	; select bank1
  1883  0E6B  086C               	movf	??_showPoem^(0+128),w
  1884  0E6C  0081               	movwf	1
  1885                           
  1886                           ;POEM.h: 24: *poem_size_point = EEPROM24C64_read_byte(1);
  1887  0E6D  3001               	movlw	1
  1888  0E6E  0020               	movlb	0	; select bank0
  1889  0E6F  00B6               	movwf	EEPROM24C64_read_byte@address
  1890  0E70  3000               	movlw	0
  1891  0E71  00B7               	movwf	EEPROM24C64_read_byte@address+1
  1892  0E72  3188  2096  318E   	fcall	_EEPROM24C64_read_byte
  1893  0E75  0021               	movlb	1	; select bank1
  1894  0E76  00EC               	movwf	??_showPoem^(0+128)
  1895  0E77  0020               	movlb	0	; select bank0
  1896  0E78  0860               	movf	_poem_size_point,w
  1897  0E79  0086               	movwf	6
  1898  0E7A  0187               	clrf	7
  1899  0E7B  0021               	movlb	1	; select bank1
  1900  0E7C  086C               	movf	??_showPoem^(0+128),w
  1901  0E7D  0081               	movwf	1
  1902                           
  1903                           ;POEM.h: 25: for(poe=1; poe != poem_size+1; poe++)
  1904  0E7E  3001               	movlw	1
  1905  0E7F  00AA               	movwf	_poe^(0+128)
  1906  0E80  3000               	movlw	0
  1907  0E81  00AB               	movwf	(_poe^(0+128)+1)
  1908  0E82                     l4442:	
  1909  0E82  085A               	movf	_poem_size^(0+128),w
  1910  0E83  3E01               	addlw	1
  1911  0E84  00EC               	movwf	??_showPoem^(0+128)
  1912  0E85  3000               	movlw	0
  1913  0E86  3D5B               	addwfc	(_poem_size+1)^(0+128),w
  1914  0E87  00ED               	movwf	(??_showPoem+1)^(0+128)
  1915  0E88  082B               	movf	(_poe+1)^(0+128),w
  1916  0E89  066D               	xorwf	(??_showPoem+1)^(0+128),w
  1917  0E8A  1D03               	skipz
  1918  0E8B  2E8E               	goto	u4865
  1919  0E8C  082A               	movf	_poe^(0+128),w
  1920  0E8D  066C               	xorwf	??_showPoem^(0+128),w
  1921  0E8E                     u4865:	
  1922  0E8E  1903               	btfsc	3,2
  1923  0E8F  0008               	return
  1924                           
  1925                           ;POEM.h: 26: {
  1926                           ;POEM.h: 28: lcd_yaz(EEPROM24C64_read_byte(poe+1));
  1927  0E90  082A               	movf	_poe^(0+128),w
  1928  0E91  3E01               	addlw	1
  1929  0E92  0020               	movlb	0	; select bank0
  1930  0E93  00B6               	movwf	EEPROM24C64_read_byte@address
  1931  0E94  3000               	movlw	0
  1932  0E95  0021               	movlb	1	; select bank1
  1933  0E96  3D2B               	addwfc	(_poe+1)^(0+128),w
  1934  0E97  0020               	movlb	0	; select bank0
  1935  0E98  00B7               	movwf	EEPROM24C64_read_byte@address+1
  1936  0E99  3188  2096  318E   	fcall	_EEPROM24C64_read_byte
  1937  0E9C  318B  23C3  318E   	fcall	_lcd_yaz
  1938                           
  1939                           ;POEM.h: 29: if(poe % 32 == 0)
  1940  0E9F  301F               	movlw	31
  1941  0EA0  0021               	movlb	1	; select bank1
  1942  0EA1  052A               	andwf	_poe^(0+128),w
  1943  0EA2  00EC               	movwf	??_showPoem^(0+128)
  1944  0EA3  3000               	movlw	0
  1945  0EA4  052B               	andwf	(_poe+1)^(0+128),w
  1946  0EA5  00ED               	movwf	(??_showPoem+1)^(0+128)
  1947  0EA6  086C               	movf	??_showPoem^(0+128),w
  1948  0EA7  046D               	iorwf	(??_showPoem^(0+128)+1),w
  1949  0EA8  1D03               	btfss	3,2
  1950  0EA9  2EB1               	goto	l4440
  1951                           
  1952                           ;POEM.h: 30: {
  1953                           ;POEM.h: 31: DELAY100(40);
  1954  0EAA  3028               	movlw	40
  1955  0EAB  318A  221B  318E   	fcall	_DELAY100
  1956                           
  1957                           ;POEM.h: 32: lcd_clear();
  1958  0EAE  318A  2201  318E   	fcall	_lcd_clear
  1959  0EB1                     l4440:	
  1960  0EB1  3001               	movlw	1
  1961  0EB2  0021               	movlb	1	; select bank1
  1962  0EB3  07AA               	addwf	_poe^(0+128),f
  1963  0EB4  3000               	movlw	0
  1964  0EB5  3DAB               	addwfc	(_poe+1)^(0+128),f
  1965  0EB6  2E82               	goto	l4442
  1966  0EB7                     __end_of_showPoem:	
  1967                           
  1968                           	psect	text2
  1969  0896                     __ptext2:	
  1970 ;; *************** function _EEPROM24C64_read_byte *****************
  1971 ;; Defined at:
  1972 ;;		line 32 in file "EEPROM24C64.h"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  address         2   22[BANK0 ] unsigned int 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      unsigned char 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0, pclath, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1986 ;;      Params:         0       2       0       0
  1987 ;;      Locals:         0       0       0       0
  1988 ;;      Temps:          0       0       0       0
  1989 ;;      Totals:         0       2       0       0
  1990 ;;Total ram usage:        2 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    9
  1993 ;; This function calls:
  1994 ;;		_Generic_read_byte
  1995 ;; This function is called by:
  1996 ;;		_showPoem
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _EEPROM24C64_read_byte
  2002  0896                     _EEPROM24C64_read_byte:	
  2003                           
  2004                           ;EEPROM24C64.h: 35: return Generic_read_byte(0b10101110, address);
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _EEPROM24C64_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2008  0896  0020               	movlb	0	; select bank0
  2009  0897  0837               	movf	EEPROM24C64_read_byte@address+1,w
  2010  0898  00B2               	movwf	Generic_read_byte@address+1
  2011  0899  0836               	movf	EEPROM24C64_read_byte@address,w
  2012  089A  00B1               	movwf	Generic_read_byte@address
  2013  089B  30AE               	movlw	174
  2014  089C  318C  24B5         	fcall	_Generic_read_byte
  2015  089E  0008               	return
  2016  089F                     __end_of_EEPROM24C64_read_byte:	
  2017                           
  2018                           	psect	text3
  2019  06CC                     __ptext3:	
  2020 ;; *************** function _showAlarmMessage *****************
  2021 ;; Defined at:
  2022 ;;		line 77 in file "ALARM.h"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  j               1    3[BANK2 ] unsigned char 
  2027 ;;  l               1    2[BANK2 ] unsigned char 
  2028 ;;  kk              1    1[BANK2 ] unsigned char 
  2029 ;;  mes_count       1    0[BANK2 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2039 ;;      Params:         0       0       0       0
  2040 ;;      Locals:         0       0       0       4
  2041 ;;      Temps:          0       0       2       0
  2042 ;;      Totals:         0       0       2       4
  2043 ;;Total ram usage:        6 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:   15
  2046 ;; This function calls:
  2047 ;;		_DELAY100
  2048 ;;		_EEPROM24C32_read_byte
  2049 ;;		_EEPROM_ReadByte
  2050 ;;		___bmul
  2051 ;;		___wmul
  2052 ;;		_lcd_clear
  2053 ;;		_lcd_yaz
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _showAlarmMessage
  2061  06CC                     _showAlarmMessage:	
  2062                           
  2063                           ;ALARM.h: 79: byte mes_count = EEPROM_ReadByte(closes_alarm_index*7) & 0xf;
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _showAlarmMessage: [wreg+status,2+status,0+pclath+cstack]
  2067  06CC  3007               	movlw	7
  2068  06CD  0021               	movlb	1	; select bank1
  2069  06CE  00EC               	movwf	??_showAlarmMessage^(0+128)
  2070  06CF  086C               	movf	??_showAlarmMessage^(0+128),w
  2071  06D0  0020               	movlb	0	; select bank0
  2072  06D1  00AD               	movwf	___bmul@multiplicand
  2073  06D2  085C               	movf	_closes_alarm_index,w
  2074  06D3  3189  216D  3186   	fcall	___bmul
  2075  06D6  3189  215C  3186   	fcall	_EEPROM_ReadByte
  2076  06D9  390F               	andlw	15
  2077  06DA  0021               	movlb	1	; select bank1
  2078  06DB  00ED               	movwf	(??_showAlarmMessage+1)^(0+128)
  2079  06DC  086D               	movf	(??_showAlarmMessage+1)^(0+128),w
  2080  06DD  0022               	movlb	2	; select bank2
  2081  06DE  00C0               	movwf	showAlarmMessage@mes_count^(0+256)
  2082                           
  2083                           ;ALARM.h: 80: message_location = (closes_alarm_index-1)*(64*5);
  2084  06DF  0020               	movlb	0	; select bank0
  2085  06E0  085C               	movf	_closes_alarm_index,w
  2086  06E1  3EFF               	addlw	255
  2087  06E2  00AD               	movwf	___wmul@multiplier
  2088  06E3  30FF               	movlw	255
  2089  06E4  1803               	skipnc
  2090  06E5  3000               	movlw	0
  2091  06E6  00AE               	movwf	___wmul@multiplier+1
  2092  06E7  3040               	movlw	64
  2093  06E8  00AF               	movwf	___wmul@multiplicand
  2094  06E9  3001               	movlw	1
  2095  06EA  00B0               	movwf	___wmul@multiplicand+1
  2096  06EB  318A  22A1  3186   	fcall	___wmul
  2097  06EE  0020               	movlb	0	; select bank0
  2098  06EF  082E               	movf	?___wmul+1,w
  2099  06F0  00C4               	movwf	_message_location+1
  2100  06F1  082D               	movf	?___wmul,w
  2101  06F2  00C3               	movwf	_message_location
  2102                           
  2103                           ;ALARM.h: 81: byte kk = 0;
  2104  06F3  0022               	movlb	2	; select bank2
  2105  06F4  01C1               	clrf	showAlarmMessage@kk^(0+256)
  2106                           
  2107                           ;ALARM.h: 82: for(char l=0; l != mes_count ; l++)
  2108  06F5  01C2               	clrf	showAlarmMessage@l^(0+256)
  2109  06F6                     l4340:	
  2110  06F6  0842               	movf	showAlarmMessage@l^(0+256),w
  2111  06F7  0640               	xorwf	showAlarmMessage@mes_count^(0+256),w
  2112  06F8  1903               	btfsc	3,2
  2113  06F9  0008               	return
  2114                           
  2115                           ;ALARM.h: 83: {
  2116                           ;ALARM.h: 84: lcd_clear();
  2117  06FA  318A  2201  3186   	fcall	_lcd_clear
  2118  06FD                     l4324:	
  2119                           ;ALARM.h: 85: while((kk = EEPROM24C32_read_byte(message_location)) == 0) message_locatio
      +                          n += 64;
  2120                           
  2121  06FD  0020               	movlb	0	; select bank0
  2122  06FE  0844               	movf	_message_location+1,w
  2123  06FF  00B7               	movwf	EEPROM24C32_read_byte@address+1
  2124  0700  0843               	movf	_message_location,w
  2125  0701  00B6               	movwf	EEPROM24C32_read_byte@address
  2126  0702  3188  208D  3186   	fcall	_EEPROM24C32_read_byte
  2127  0705  0021               	movlb	1	; select bank1
  2128  0706  00EC               	movwf	??_showAlarmMessage^(0+128)
  2129  0707  086C               	movf	??_showAlarmMessage^(0+128),w
  2130  0708  0022               	movlb	2	; select bank2
  2131  0709  00C1               	movwf	showAlarmMessage@kk^(0+256)
  2132  070A  0841               	movf	showAlarmMessage@kk^(0+256),w
  2133  070B  1D03               	btfss	3,2
  2134  070C  2F13               	goto	l389
  2135  070D  3040               	movlw	64
  2136  070E  0020               	movlb	0	; select bank0
  2137  070F  07C3               	addwf	_message_location,f
  2138  0710  3000               	movlw	0
  2139  0711  3DC4               	addwfc	_message_location+1,f
  2140  0712  2EFD               	goto	l4324
  2141  0713                     l389:	
  2142                           
  2143                           ;ALARM.h: 86: for(char j = 1; j != kk+1; j++)
  2144  0713  01C3               	clrf	showAlarmMessage@j^(0+256)
  2145  0714  0AC3               	incf	showAlarmMessage@j^(0+256),f
  2146  0715                     l4334:	
  2147  0715  0841               	movf	showAlarmMessage@kk^(0+256),w
  2148  0716  3E01               	addlw	1
  2149  0717  0021               	movlb	1	; select bank1
  2150  0718  00EC               	movwf	??_showAlarmMessage^(0+128)
  2151  0719  3000               	movlw	0
  2152  071A  1803               	skipnc
  2153  071B  3001               	movlw	1
  2154  071C  00ED               	movwf	(??_showAlarmMessage^(0+128)+1)
  2155  071D  0022               	movlb	2	; select bank2
  2156  071E  0843               	movf	showAlarmMessage@j^(0+256),w
  2157  071F  0021               	movlb	1	; select bank1
  2158  0720  066C               	xorwf	??_showAlarmMessage^(0+128),w
  2159  0721  046D               	iorwf	(??_showAlarmMessage+1)^(0+128),w
  2160  0722  1903               	btfsc	3,2
  2161  0723  2F46               	goto	l4336
  2162                           
  2163                           ;ALARM.h: 87: {
  2164                           ;ALARM.h: 88: lcd_yaz(EEPROM24C32_read_byte(j+message_location));
  2165  0724  0022               	movlb	2	; select bank2
  2166  0725  0843               	movf	showAlarmMessage@j^(0+256),w
  2167  0726  0020               	movlb	0	; select bank0
  2168  0727  0743               	addwf	_message_location,w
  2169  0728  00B6               	movwf	EEPROM24C32_read_byte@address
  2170  0729  0844               	movf	_message_location+1,w
  2171  072A  1803               	skipnc
  2172  072B  0A44               	incf	_message_location+1,w
  2173  072C  00B7               	movwf	EEPROM24C32_read_byte@address+1
  2174  072D  3188  208D  3186   	fcall	_EEPROM24C32_read_byte
  2175  0730  318B  23C3  3186   	fcall	_lcd_yaz
  2176                           
  2177                           ;ALARM.h: 89: if(j % 32 == 0)
  2178  0733  0022               	movlb	2	; select bank2
  2179  0734  0843               	movf	showAlarmMessage@j^(0+256),w
  2180  0735  391F               	andlw	31
  2181  0736  1D03               	btfss	3,2
  2182  0737  2F3F               	goto	l4332
  2183                           
  2184                           ;ALARM.h: 90: {
  2185                           ;ALARM.h: 91: DELAY100(30);
  2186  0738  301E               	movlw	30
  2187  0739  318A  221B  3186   	fcall	_DELAY100
  2188                           
  2189                           ;ALARM.h: 92: lcd_clear();
  2190  073C  318A  2201  3186   	fcall	_lcd_clear
  2191  073F                     l4332:	
  2192  073F  3001               	movlw	1
  2193  0740  0021               	movlb	1	; select bank1
  2194  0741  00EC               	movwf	??_showAlarmMessage^(0+128)
  2195  0742  086C               	movf	??_showAlarmMessage^(0+128),w
  2196  0743  0022               	movlb	2	; select bank2
  2197  0744  07C3               	addwf	showAlarmMessage@j^(0+256),f
  2198  0745  2F15               	goto	l4334
  2199  0746                     l4336:	
  2200                           
  2201                           ;ALARM.h: 93: }
  2202                           ;ALARM.h: 94: }
  2203                           ;ALARM.h: 95: DELAY100(30);
  2204  0746  301E               	movlw	30
  2205  0747  318A  221B  3186   	fcall	_DELAY100
  2206  074A  3001               	movlw	1
  2207  074B  0021               	movlb	1	; select bank1
  2208  074C  00EC               	movwf	??_showAlarmMessage^(0+128)
  2209  074D  086C               	movf	??_showAlarmMessage^(0+128),w
  2210  074E  0022               	movlb	2	; select bank2
  2211  074F  07C2               	addwf	showAlarmMessage@l^(0+256),f
  2212  0750  2EF6               	goto	l4340
  2213  0751                     __end_of_showAlarmMessage:	
  2214                           
  2215                           	psect	text4
  2216  0AA1                     __ptext4:	
  2217 ;; *************** function ___wmul *****************
  2218 ;; Defined at:
  2219 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  multiplier      2   13[BANK0 ] unsigned int 
  2222 ;;  multiplicand    2   15[BANK0 ] unsigned int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  product         2   17[BANK0 ] unsigned int 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2   13[BANK0 ] unsigned int 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2234 ;;      Params:         0       4       0       0
  2235 ;;      Locals:         0       2       0       0
  2236 ;;      Temps:          0       0       0       0
  2237 ;;      Totals:         0       6       0       0
  2238 ;;Total ram usage:        6 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    7
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_showAlarmMessage
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           
  2249                           ;psect for function ___wmul
  2250  0AA1                     ___wmul:	
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2254  0AA1  0020               	movlb	0	; select bank0
  2255  0AA2  01B1               	clrf	___wmul@product
  2256  0AA3  01B2               	clrf	___wmul@product+1
  2257  0AA4                     l4134:	
  2258  0AA4  1C2D               	btfss	___wmul@multiplier,0
  2259  0AA5  2AAA               	goto	l744
  2260  0AA6  082F               	movf	___wmul@multiplicand,w
  2261  0AA7  07B1               	addwf	___wmul@product,f
  2262  0AA8  0830               	movf	___wmul@multiplicand+1,w
  2263  0AA9  3DB2               	addwfc	___wmul@product+1,f
  2264  0AAA                     l744:	
  2265  0AAA  3001               	movlw	1
  2266  0AAB                     u4405:	
  2267  0AAB  35AF               	lslf	___wmul@multiplicand,f
  2268  0AAC  0DB0               	rlf	___wmul@multiplicand+1,f
  2269  0AAD  0B89               	decfsz	9,f
  2270  0AAE  2AAB               	goto	u4405
  2271  0AAF  3001               	movlw	1
  2272  0AB0                     u4415:	
  2273  0AB0  36AE               	lsrf	___wmul@multiplier+1,f
  2274  0AB1  0CAD               	rrf	___wmul@multiplier,f
  2275  0AB2  0B89               	decfsz	9,f
  2276  0AB3  2AB0               	goto	u4415
  2277  0AB4  082D               	movf	___wmul@multiplier,w
  2278  0AB5  042E               	iorwf	___wmul@multiplier+1,w
  2279  0AB6  1D03               	btfss	3,2
  2280  0AB7  2AA4               	goto	l4134
  2281  0AB8  0832               	movf	___wmul@product+1,w
  2282  0AB9  00AE               	movwf	?___wmul+1
  2283  0ABA  0831               	movf	___wmul@product,w
  2284  0ABB  00AD               	movwf	?___wmul
  2285  0ABC  0008               	return
  2286  0ABD                     __end_of___wmul:	
  2287                           
  2288                           	psect	text5
  2289  088D                     __ptext5:	
  2290 ;; *************** function _EEPROM24C32_read_byte *****************
  2291 ;; Defined at:
  2292 ;;		line 56 in file "EEPROM24C32.h"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  address         2   22[BANK0 ] unsigned int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      unsigned char 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2306 ;;      Params:         0       2       0       0
  2307 ;;      Locals:         0       0       0       0
  2308 ;;      Temps:          0       0       0       0
  2309 ;;      Totals:         0       2       0       0
  2310 ;;Total ram usage:        2 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    9
  2313 ;; This function calls:
  2314 ;;		_Generic_read_byte
  2315 ;; This function is called by:
  2316 ;;		_showAlarmMessage
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _EEPROM24C32_read_byte
  2322  088D                     _EEPROM24C32_read_byte:	
  2323                           
  2324                           ;EEPROM24C32.h: 58: return Generic_read_byte(0b10100000, address);
  2325                           
  2326                           ;incstack = 0
  2327                           ; Regs used in _EEPROM24C32_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2328  088D  0020               	movlb	0	; select bank0
  2329  088E  0837               	movf	EEPROM24C32_read_byte@address+1,w
  2330  088F  00B2               	movwf	Generic_read_byte@address+1
  2331  0890  0836               	movf	EEPROM24C32_read_byte@address,w
  2332  0891  00B1               	movwf	Generic_read_byte@address
  2333  0892  30A0               	movlw	160
  2334  0893  318C  24B5         	fcall	_Generic_read_byte
  2335  0895  0008               	return
  2336  0896                     __end_of_EEPROM24C32_read_byte:	
  2337                           
  2338                           	psect	text6
  2339  0CB5                     __ptext6:	
  2340 ;; *************** function _Generic_read_byte *****************
  2341 ;; Defined at:
  2342 ;;		line 29 in file "EEPROM24C32.h"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  dev_id          1    wreg     unsigned char 
  2345 ;;  address         2   17[BANK0 ] unsigned int 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  dev_id          1   21[BANK0 ] unsigned char 
  2348 ;;  received        1   20[BANK0 ] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      unsigned char 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2358 ;;      Params:         0       2       0       0
  2359 ;;      Locals:         0       2       0       0
  2360 ;;      Temps:          0       1       0       0
  2361 ;;      Totals:         0       5       0       0
  2362 ;;Total ram usage:        5 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    8
  2365 ;; This function calls:
  2366 ;;		_DELAY
  2367 ;;		_I2C_SendNACK
  2368 ;;		_I2C_Start
  2369 ;;		_I2C_Stop
  2370 ;;		_I2C_data_receive
  2371 ;;		_I2C_data_send
  2372 ;; This function is called by:
  2373 ;;		_EEPROM24C32_read_byte
  2374 ;;		_EEPROM24C64_read_byte
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _Generic_read_byte
  2380  0CB5                     _Generic_read_byte:	
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in _Generic_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2384                           ;Generic_read_byte@dev_id stored from wreg
  2385  0CB5  0020               	movlb	0	; select bank0
  2386  0CB6  00B5               	movwf	Generic_read_byte@dev_id
  2387                           
  2388                           ;EEPROM24C32.h: 31: byte received;
  2389                           ;EEPROM24C32.h: 33: I2C_Start();
  2390  0CB7  3188  203D  318C   	fcall	_I2C_Start
  2391                           
  2392                           ;EEPROM24C32.h: 34: I2C_data_send(dev_id);
  2393  0CBA  0020               	movlb	0	; select bank0
  2394  0CBB  0835               	movf	Generic_read_byte@dev_id,w
  2395  0CBC  3189  21E9  318C   	fcall	_I2C_data_send
  2396                           
  2397                           ;EEPROM24C32.h: 36: I2C_data_send(address>>8);
  2398  0CBF  0020               	movlb	0	; select bank0
  2399  0CC0  0832               	movf	Generic_read_byte@address+1,w
  2400  0CC1  3189  21E9  318C   	fcall	_I2C_data_send
  2401                           
  2402                           ;EEPROM24C32.h: 37: I2C_data_send(address&0xff);
  2403  0CC4  0020               	movlb	0	; select bank0
  2404  0CC5  0831               	movf	Generic_read_byte@address,w
  2405  0CC6  3189  21E9  318C   	fcall	_I2C_data_send
  2406                           
  2407                           ;EEPROM24C32.h: 39: I2C_Stop();
  2408  0CC9  3188  2044  318C   	fcall	_I2C_Stop
  2409                           
  2410                           ;EEPROM24C32.h: 40: DELAY(5);
  2411  0CCC  3005               	movlw	5
  2412  0CCD  3189  21BB  318C   	fcall	_DELAY
  2413                           
  2414                           ;EEPROM24C32.h: 41: I2C_Start();
  2415  0CD0  3188  203D  318C   	fcall	_I2C_Start
  2416                           
  2417                           ;EEPROM24C32.h: 42: I2C_data_send(dev_id+1);
  2418  0CD3  0020               	movlb	0	; select bank0
  2419  0CD4  0835               	movf	Generic_read_byte@dev_id,w
  2420  0CD5  3E01               	addlw	1
  2421  0CD6  3189  21E9  318C   	fcall	_I2C_data_send
  2422                           
  2423                           ;EEPROM24C32.h: 43: received = I2C_data_receive();
  2424  0CD9  3188  20B4  318C   	fcall	_I2C_data_receive
  2425  0CDC  0020               	movlb	0	; select bank0
  2426  0CDD  00B3               	movwf	??_Generic_read_byte
  2427  0CDE  0833               	movf	??_Generic_read_byte,w
  2428  0CDF  00B4               	movwf	Generic_read_byte@received
  2429                           
  2430                           ;EEPROM24C32.h: 45: I2C_SendNACK();
  2431  0CE0  3188  2073  318C   	fcall	_I2C_SendNACK
  2432                           
  2433                           ;EEPROM24C32.h: 46: I2C_Stop();
  2434  0CE3  3188  2044  318C   	fcall	_I2C_Stop
  2435                           
  2436                           ;EEPROM24C32.h: 47: DELAY(5);
  2437  0CE6  3005               	movlw	5
  2438  0CE7  3189  21BB         	fcall	_DELAY
  2439                           
  2440                           ;EEPROM24C32.h: 48: return received;
  2441  0CE9  0020               	movlb	0	; select bank0
  2442  0CEA  0834               	movf	Generic_read_byte@received,w
  2443  0CEB  0008               	return
  2444  0CEC                     __end_of_Generic_read_byte:	
  2445                           
  2446                           	psect	text7
  2447  0873                     __ptext7:	
  2448 ;; *************** function _I2C_SendNACK *****************
  2449 ;; Defined at:
  2450 ;;		line 323 in file "I2C.h"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		None
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2464 ;;      Params:         0       0       0       0
  2465 ;;      Locals:         0       0       0       0
  2466 ;;      Temps:          0       0       0       0
  2467 ;;      Totals:         0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    7
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_Generic_read_byte
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _I2C_SendNACK
  2480  0873                     _I2C_SendNACK:	
  2481                           
  2482                           ;I2C.h: 325: ACKDT = 1 ;
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _I2C_SendNACK: []
  2486  0873  0024               	movlb	4	; select bank4
  2487  0874  1696               	bsf	22,5	;volatile
  2488                           
  2489                           ;I2C.h: 326: ACKEN = 1;
  2490  0875  1616               	bsf	22,4	;volatile
  2491  0876                     l224:	
  2492                           ;I2C.h: 327: while (ACKEN);
  2493                           
  2494  0876  1A16               	btfsc	22,4	;volatile
  2495  0877  2876               	goto	l224
  2496                           
  2497                           ;I2C.h: 328: SSP1IF = 0;
  2498  0878  0020               	movlb	0	; select bank0
  2499  0879  1191               	bcf	17,3	;volatile
  2500  087A  0008               	return
  2501  087B                     __end_of_I2C_SendNACK:	
  2502                           
  2503                           	psect	text8
  2504  0A1B                     __ptext8:	
  2505 ;; *************** function _DELAY100 *****************
  2506 ;; Defined at:
  2507 ;;		line 19 in file "PoemCircuit.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  number          1    wreg     unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  number          1   16[BANK0 ] unsigned char 
  2512 ;;  k               1   17[BANK0 ] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2522 ;;      Params:         0       0       0       0
  2523 ;;      Locals:         0       2       0       0
  2524 ;;      Temps:          0       3       0       0
  2525 ;;      Totals:         0       5       0       0
  2526 ;;Total ram usage:        5 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    7
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_showAlarmMessage
  2533 ;;		_showPoem
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _DELAY100
  2539  0A1B                     _DELAY100:	
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in _DELAY100: [wreg+status,2+status,0]
  2543                           ;DELAY100@number stored from wreg
  2544  0A1B  0020               	movlb	0	; select bank0
  2545  0A1C  00B0               	movwf	DELAY100@number
  2546                           
  2547                           ;PoemCircuit.c: 21: for(byte k=0; k != number; k++)
  2548  0A1D  01B1               	clrf	DELAY100@k
  2549  0A1E                     l4020:	
  2550  0A1E  0831               	movf	DELAY100@k,w
  2551  0A1F  0630               	xorwf	DELAY100@number,w
  2552  0A20  1903               	btfsc	3,2
  2553  0A21  0008               	return
  2554                           
  2555                           ;PoemCircuit.c: 22: _delay((unsigned long)((100)*(8000000/4000.0)));
  2556  0A22  3002               	movlw	2
  2557  0A23  00AF               	movwf	??_DELAY100+2
  2558  0A24  3004               	movlw	4
  2559  0A25  00AE               	movwf	??_DELAY100+1
  2560  0A26  30BA               	movlw	186
  2561  0A27  00AD               	movwf	??_DELAY100
  2562  0A28                     u5067:	
  2563  0A28  0BAD               	decfsz	??_DELAY100,f
  2564  0A29  2A28               	goto	u5067
  2565  0A2A  0BAE               	decfsz	??_DELAY100+1,f
  2566  0A2B  2A28               	goto	u5067
  2567  0A2C  0BAF               	decfsz	??_DELAY100+2,f
  2568  0A2D  2A28               	goto	u5067
  2569  0A2E  0000               	nop
  2570  0A2F  3001               	movlw	1
  2571  0A30  0020               	movlb	0	; select bank0
  2572  0A31  00AD               	movwf	??_DELAY100
  2573  0A32  082D               	movf	??_DELAY100,w
  2574  0A33  07B1               	addwf	DELAY100@k,f
  2575  0A34  2A1E               	goto	l4020
  2576  0A35                     __end_of_DELAY100:	
  2577                           
  2578                           	psect	text9
  2579  062C                     __ptext9:	
  2580 ;; *************** function _findClosestAlarm *****************
  2581 ;; Defined at:
  2582 ;;		line 197 in file "ALARM.h"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  k               1   23[BANK0 ] unsigned char 
  2587 ;;  j               1   26[BANK0 ] unsigned char 
  2588 ;;  k               1   25[BANK0 ] unsigned char 
  2589 ;;  start           1   24[BANK0 ] unsigned char 
  2590 ;;  alarm_count     1   22[BANK0 ] unsigned char 
  2591 ;;  alarm_id4       1   21[BANK0 ] unsigned char 
  2592 ;;  none            1   20[BANK0 ] unsigned char 
  2593 ;;  valid           1   19[BANK0 ] unsigned char 
  2594 ;;  temp            1    0        unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2604 ;;      Params:         0       0       0       0
  2605 ;;      Locals:         0       8       0       0
  2606 ;;      Temps:          0       1       0       0
  2607 ;;      Totals:         0       9       0       0
  2608 ;;Total ram usage:        9 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    8
  2611 ;; This function calls:
  2612 ;;		_EEPROM_ReadByte
  2613 ;;		_compareAlarms
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _findClosestAlarm
  2621  062C                     _findClosestAlarm:	
  2622                           
  2623                           ;ALARM.h: 199: global_diff_value = 100;
  2624                           
  2625                           ;incstack = 0
  2626                           ; Regs used in _findClosestAlarm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2627  062C  3064               	movlw	100
  2628  062D  0020               	movlb	0	; select bank0
  2629  062E  00B2               	movwf	??_findClosestAlarm
  2630  062F  0832               	movf	??_findClosestAlarm,w
  2631  0630  0021               	movlb	1	; select bank1
  2632  0631  00B9               	movwf	_global_diff_value^(0+128)
  2633                           
  2634                           ;ALARM.h: 200: global_diff_index = 0;
  2635  0632  01B8               	clrf	_global_diff_index^(0+128)
  2636                           
  2637                           ;ALARM.h: 201: byte alarm_count = EEPROM_ReadByte(0);
  2638  0633  3000               	movlw	0
  2639  0634  3189  215C  3186   	fcall	_EEPROM_ReadByte
  2640  0637  0020               	movlb	0	; select bank0
  2641  0638  00B2               	movwf	??_findClosestAlarm
  2642  0639  0832               	movf	??_findClosestAlarm,w
  2643  063A  00B6               	movwf	findClosestAlarm@alarm_count
  2644                           
  2645                           ;ALARM.h: 203: byte none = 1;;
  2646  063B  01B4               	clrf	findClosestAlarm@none
  2647  063C  0AB4               	incf	findClosestAlarm@none,f
  2648                           
  2649                           ;ALARM.h: 206: byte start= 1; byte alarm_id4=1;
  2650  063D  01B8               	clrf	findClosestAlarm@start
  2651  063E  0AB8               	incf	findClosestAlarm@start,f
  2652  063F  01B5               	clrf	findClosestAlarm@alarm_id4
  2653  0640  0AB5               	incf	findClosestAlarm@alarm_id4,f
  2654                           
  2655                           ;ALARM.h: 207: byte valid ;
  2656                           ;ALARM.h: 208: byte temp;
  2657                           ;ALARM.h: 210: for(char k =0; k != alarm_count; k++)
  2658  0641  01B9               	clrf	findClosestAlarm@k
  2659  0642  2EC7               	goto	l4424
  2660  0643                     l4386:	
  2661                           ;ALARM.h: 211: {
  2662                           ;ALARM.h: 213: while( EEPROM_ReadByte(start)==0){ start += 7; alarm_id4++;}
  2663                           
  2664  0643  3007               	movlw	7
  2665  0644  0020               	movlb	0	; select bank0
  2666  0645  00B2               	movwf	??_findClosestAlarm
  2667  0646  0832               	movf	??_findClosestAlarm,w
  2668  0647  07B8               	addwf	findClosestAlarm@start,f
  2669  0648  3001               	movlw	1
  2670  0649  00B2               	movwf	??_findClosestAlarm
  2671  064A  0832               	movf	??_findClosestAlarm,w
  2672  064B  07B5               	addwf	findClosestAlarm@alarm_id4,f
  2673  064C                     l4388:	
  2674  064C  0838               	movf	findClosestAlarm@start,w
  2675  064D  3189  215C  3186   	fcall	_EEPROM_ReadByte
  2676  0650  3A00               	xorlw	0
  2677  0651  1903               	skipnz
  2678  0652  2E43               	goto	l4386
  2679                           
  2680                           ;ALARM.h: 214: valid = 1;
  2681  0653  0020               	movlb	0	; select bank0
  2682  0654  01B3               	clrf	findClosestAlarm@valid
  2683  0655  0AB3               	incf	findClosestAlarm@valid,f
  2684                           
  2685                           ;ALARM.h: 217: for(time_index = 0; time_index != 5;time_index++)
  2686  0656  01D7               	clrf	_time_index
  2687  0657  3005               	movlw	5
  2688  0658  0657               	xorwf	_time_index,w
  2689  0659  1903               	btfsc	3,2
  2690  065A  2E7C               	goto	l4406
  2691  065B                     l4396:	
  2692                           
  2693                           ;ALARM.h: 218: {
  2694                           ;ALARM.h: 219: if(k ==0) global_diff[k] = 100;
  2695  065B  0839               	movf	findClosestAlarm@k,w
  2696  065C  1D03               	btfss	3,2
  2697  065D  2E66               	goto	l4400
  2698  065E  3064               	movlw	100
  2699  065F  00B2               	movwf	??_findClosestAlarm
  2700  0660  0839               	movf	findClosestAlarm@k,w
  2701  0661  3ED3               	addlw	(low (_global_diff| 0))& (0+255)
  2702  0662  0086               	movwf	6
  2703  0663  0187               	clrf	7
  2704  0664  0832               	movf	??_findClosestAlarm,w
  2705  0665  0081               	movwf	1
  2706  0666                     l4400:	
  2707                           
  2708                           ;ALARM.h: 220: current_diff[time_index] = EEPROM_ReadByte(start+time_index+1);;
  2709  0666  0838               	movf	findClosestAlarm@start,w
  2710  0667  0757               	addwf	_time_index,w
  2711  0668  3E01               	addlw	1
  2712  0669  3189  215C  3186   	fcall	_EEPROM_ReadByte
  2713  066C  0020               	movlb	0	; select bank0
  2714  066D  00B2               	movwf	??_findClosestAlarm
  2715  066E  0857               	movf	_time_index,w
  2716  066F  3ECE               	addlw	(low (_current_diff| 0))& (0+255)
  2717  0670  0086               	movwf	6
  2718  0671  0187               	clrf	7
  2719  0672  0832               	movf	??_findClosestAlarm,w
  2720  0673  0081               	movwf	1
  2721  0674  3001               	movlw	1
  2722  0675  00B2               	movwf	??_findClosestAlarm
  2723  0676  0832               	movf	??_findClosestAlarm,w
  2724  0677  07D7               	addwf	_time_index,f
  2725  0678  3005               	movlw	5
  2726  0679  0657               	xorwf	_time_index,w
  2727  067A  1D03               	btfss	3,2
  2728  067B  2E5B               	goto	l4396
  2729  067C                     l4406:	
  2730                           
  2731                           ;ALARM.h: 222: }
  2732                           ;ALARM.h: 224: if(compareAlarms(zaman, current_diff) == 2 && compareAlarms(current_diff,
      +                           global_diff) == 2)
  2733  067C  30CE               	movlw	(low (_current_diff| 0))& (0+255)
  2734  067D  00B2               	movwf	??_findClosestAlarm
  2735  067E  0832               	movf	??_findClosestAlarm,w
  2736  067F  00AD               	movwf	compareAlarms@arr2
  2737  0680  30C3               	movlw	(low (_zaman| 0))& (0+255)
  2738  0681  318C  2480  3186   	fcall	_compareAlarms
  2739  0684  3A02               	xorlw	2
  2740  0685  1D03               	skipz
  2741  0686  2EBA               	goto	l4422
  2742  0687  30D3               	movlw	(low (_global_diff| 0))& (0+255)
  2743  0688  0020               	movlb	0	; select bank0
  2744  0689  00B2               	movwf	??_findClosestAlarm
  2745  068A  0832               	movf	??_findClosestAlarm,w
  2746  068B  00AD               	movwf	compareAlarms@arr2
  2747  068C  30CE               	movlw	(low (_current_diff| 0))& (0+255)
  2748  068D  318C  2480  3186   	fcall	_compareAlarms
  2749  0690  3A02               	xorlw	2
  2750  0691  1D03               	skipz
  2751  0692  2EBA               	goto	l4422
  2752                           
  2753                           ;ALARM.h: 225: {
  2754                           ;ALARM.h: 226: none = 0;
  2755  0693  0020               	movlb	0	; select bank0
  2756  0694  01B4               	clrf	findClosestAlarm@none
  2757                           
  2758                           ;ALARM.h: 227: for(char j=0; j < 5; j++)
  2759  0695  01BA               	clrf	findClosestAlarm@j
  2760  0696  3005               	movlw	5
  2761  0697  023A               	subwf	findClosestAlarm@j,w
  2762  0698  1803               	btfsc	3,0
  2763  0699  2EBA               	goto	l4422
  2764  069A                     l4416:	
  2765                           
  2766                           ;ALARM.h: 228: {
  2767                           ;ALARM.h: 229: byte k = current_diff[j];
  2768  069A  083A               	movf	findClosestAlarm@j,w
  2769  069B  3ECE               	addlw	(low (_current_diff| 0))& (0+255)
  2770  069C  0086               	movwf	6
  2771  069D  0187               	clrf	7
  2772  069E  0801               	movf	1,w
  2773  069F  00B2               	movwf	??_findClosestAlarm
  2774  06A0  0832               	movf	??_findClosestAlarm,w
  2775  06A1  00B7               	movwf	findClosestAlarm@k_265
  2776                           
  2777                           ;ALARM.h: 230: global_diff[j] = k;
  2778  06A2  0837               	movf	findClosestAlarm@k_265,w
  2779  06A3  00B2               	movwf	??_findClosestAlarm
  2780  06A4  083A               	movf	findClosestAlarm@j,w
  2781  06A5  3ED3               	addlw	(low (_global_diff| 0))& (0+255)
  2782  06A6  0086               	movwf	6
  2783  06A7  0187               	clrf	7
  2784  06A8  0832               	movf	??_findClosestAlarm,w
  2785  06A9  0081               	movwf	1
  2786                           
  2787                           ;ALARM.h: 231: closest_alarm[j] = k;
  2788  06AA  0837               	movf	findClosestAlarm@k_265,w
  2789  06AB  00B2               	movwf	??_findClosestAlarm
  2790  06AC  083A               	movf	findClosestAlarm@j,w
  2791  06AD  3EC9               	addlw	(low (_closest_alarm| 0))& (0+255)
  2792  06AE  0086               	movwf	6
  2793  06AF  0187               	clrf	7
  2794  06B0  0832               	movf	??_findClosestAlarm,w
  2795  06B1  0081               	movwf	1
  2796  06B2  3001               	movlw	1
  2797  06B3  00B2               	movwf	??_findClosestAlarm
  2798  06B4  0832               	movf	??_findClosestAlarm,w
  2799  06B5  07BA               	addwf	findClosestAlarm@j,f
  2800  06B6  3005               	movlw	5
  2801  06B7  023A               	subwf	findClosestAlarm@j,w
  2802  06B8  1C03               	skipc
  2803  06B9  2E9A               	goto	l4416
  2804  06BA                     l4422:	
  2805                           
  2806                           ;ALARM.h: 232: }
  2807                           ;ALARM.h: 233: }
  2808                           ;ALARM.h: 235: start += 7; alarm_id4++;
  2809  06BA  3007               	movlw	7
  2810  06BB  0020               	movlb	0	; select bank0
  2811  06BC  00B2               	movwf	??_findClosestAlarm
  2812  06BD  0832               	movf	??_findClosestAlarm,w
  2813  06BE  07B8               	addwf	findClosestAlarm@start,f
  2814  06BF  3001               	movlw	1
  2815  06C0  00B2               	movwf	??_findClosestAlarm
  2816  06C1  0832               	movf	??_findClosestAlarm,w
  2817  06C2  07B5               	addwf	findClosestAlarm@alarm_id4,f
  2818  06C3  3001               	movlw	1
  2819  06C4  00B2               	movwf	??_findClosestAlarm
  2820  06C5  0832               	movf	??_findClosestAlarm,w
  2821  06C6  07B9               	addwf	findClosestAlarm@k,f
  2822  06C7                     l4424:	
  2823  06C7  0839               	movf	findClosestAlarm@k,w
  2824  06C8  0636               	xorwf	findClosestAlarm@alarm_count,w
  2825  06C9  1903               	btfsc	3,2
  2826  06CA  0008               	return
  2827  06CB  2E4C               	goto	l4388
  2828  06CC                     __end_of_findClosestAlarm:	
  2829                           
  2830                           	psect	text10
  2831  0C80                     __ptext10:	
  2832 ;; *************** function _compareAlarms *****************
  2833 ;; Defined at:
  2834 ;;		line 175 in file "ALARM.h"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  arr1            1    wreg     PTR unsigned char 
  2837 ;;		 -> current_diff(5), zaman(6), 
  2838 ;;  arr2            1   13[BANK0 ] PTR unsigned char 
  2839 ;;		 -> closest_alarm(5), current_diff(5), global_diff(5), 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  arr1            1   16[BANK0 ] PTR unsigned char 
  2842 ;;		 -> current_diff(5), zaman(6), 
  2843 ;;  j               1   17[BANK0 ] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      unsigned char 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2853 ;;      Params:         0       1       0       0
  2854 ;;      Locals:         0       2       0       0
  2855 ;;      Temps:          0       2       0       0
  2856 ;;      Totals:         0       5       0       0
  2857 ;;Total ram usage:        5 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    7
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_findClosestAlarm
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _compareAlarms
  2870  0C80                     _compareAlarms:	
  2871                           
  2872                           ;incstack = 0
  2873                           ; Regs used in _compareAlarms: [wreg-fsr1h+status,2+status,0]
  2874                           ;compareAlarms@arr1 stored from wreg
  2875  0C80  0020               	movlb	0	; select bank0
  2876  0C81  00B0               	movwf	compareAlarms@arr1
  2877                           
  2878                           ;ALARM.h: 178: for(char j=0; j != 5; j++)
  2879  0C82  01B1               	clrf	compareAlarms@j
  2880  0C83  3005               	movlw	5
  2881  0C84  0631               	xorwf	compareAlarms@j,w
  2882  0C85  1903               	btfsc	3,2
  2883  0C86  2CB3               	goto	l4128
  2884  0C87                     l4110:	
  2885                           
  2886                           ;ALARM.h: 179: {
  2887                           ;ALARM.h: 180: if(arr1[j] > arr2[j]) return 3;
  2888  0C87  0831               	movf	compareAlarms@j,w
  2889  0C88  072D               	addwf	compareAlarms@arr2,w
  2890  0C89  00AE               	movwf	??_compareAlarms
  2891  0C8A  082E               	movf	??_compareAlarms,w
  2892  0C8B  0086               	movwf	6
  2893  0C8C  0187               	clrf	7
  2894  0C8D  0831               	movf	compareAlarms@j,w
  2895  0C8E  0730               	addwf	compareAlarms@arr1,w
  2896  0C8F  00AF               	movwf	??_compareAlarms+1
  2897  0C90  082F               	movf	??_compareAlarms+1,w
  2898  0C91  0084               	movwf	4
  2899  0C92  0185               	clrf	5
  2900  0C93  0800               	movf	0,w
  2901  0C94  0201               	subwf	1,w
  2902  0C95  1803               	skipnc
  2903  0C96  2C99               	goto	l4118
  2904  0C97  3003               	movlw	3
  2905  0C98  0008               	return
  2906  0C99                     l4118:	
  2907                           
  2908                           ;ALARM.h: 181: else if(arr1[j] == arr2[j]);
  2909  0C99  0831               	movf	compareAlarms@j,w
  2910  0C9A  072D               	addwf	compareAlarms@arr2,w
  2911  0C9B  00AE               	movwf	??_compareAlarms
  2912  0C9C  082E               	movf	??_compareAlarms,w
  2913  0C9D  0086               	movwf	6
  2914  0C9E  0187               	clrf	7
  2915  0C9F  0831               	movf	compareAlarms@j,w
  2916  0CA0  0730               	addwf	compareAlarms@arr1,w
  2917  0CA1  00AF               	movwf	??_compareAlarms+1
  2918  0CA2  082F               	movf	??_compareAlarms+1,w
  2919  0CA3  0084               	movwf	4
  2920  0CA4  0185               	clrf	5
  2921  0CA5  0800               	movf	0,w
  2922  0CA6  0601               	xorwf	1,w
  2923  0CA7  1903               	btfsc	3,2
  2924  0CA8  2CAB               	goto	l4126
  2925                           
  2926                           ;ALARM.h: 182: else
  2927                           ;ALARM.h: 183: return 2;
  2928  0CA9  3002               	movlw	2
  2929  0CAA  0008               	return
  2930  0CAB                     l4126:	
  2931  0CAB  3001               	movlw	1
  2932  0CAC  00AE               	movwf	??_compareAlarms
  2933  0CAD  082E               	movf	??_compareAlarms,w
  2934  0CAE  07B1               	addwf	compareAlarms@j,f
  2935  0CAF  3005               	movlw	5
  2936  0CB0  0631               	xorwf	compareAlarms@j,w
  2937  0CB1  1D03               	btfss	3,2
  2938  0CB2  2C87               	goto	l4110
  2939  0CB3                     l4128:	
  2940                           
  2941                           ;ALARM.h: 184: }
  2942                           ;ALARM.h: 185: return 1;
  2943  0CB3  3001               	movlw	1
  2944  0CB4  0008               	return
  2945  0CB5                     __end_of_compareAlarms:	
  2946                           
  2947                           	psect	text11
  2948  0DB9                     __ptext11:	
  2949 ;; *************** function _display_number *****************
  2950 ;; Defined at:
  2951 ;;		line 39 in file "SevenSegments.h"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  digit           1   28[BANK0 ] unsigned char 
  2956 ;;  number          1   27[BANK0 ] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2966 ;;      Params:         0       0       0       0
  2967 ;;      Locals:         0       2       0       0
  2968 ;;      Temps:          0       3       0       0
  2969 ;;      Totals:         0       5       0       0
  2970 ;;Total ram usage:        5 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:   11
  2973 ;; This function calls:
  2974 ;;		_LoadDataCenter
  2975 ;;		___awdiv
  2976 ;;		___awmod
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _display_number
  2984  0DB9                     _display_number:	
  2985                           
  2986                           ;SevenSegments.h: 41: byte number;
  2987                           ;SevenSegments.h: 42: if(what_to_display){
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _display_number: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2991  0DB9  0020               	movlb	0	; select bank0
  2992  0DBA  0859               	movf	_what_to_display,w
  2993  0DBB  1903               	btfsc	3,2
  2994  0DBC  2DBF               	goto	l4482
  2995                           
  2996                           ;SevenSegments.h: 43: number = sicaklik;
  2997  0DBD  0853               	movf	_sicaklik,w
  2998  0DBE  2DC0               	goto	L2
  2999  0DBF                     l4482:	
  3000                           ;SevenSegments.h: 44: }
  3001                           
  3002                           
  3003                           ;SevenSegments.h: 45: else number = nem;
  3004  0DBF  0850               	movf	_nem,w
  3005  0DC0                     L2:	
  3006  0DC0  00B8               	movwf	??_display_number
  3007  0DC1  0838               	movf	??_display_number,w
  3008  0DC2  00BB               	movwf	display_number@number
  3009                           
  3010                           ;SevenSegments.h: 47: byte digit = rakamlar[number / 10];
  3011  0DC3  300A               	movlw	10
  3012  0DC4  00AD               	movwf	___awdiv@divisor
  3013  0DC5  3000               	movlw	0
  3014  0DC6  00AE               	movwf	___awdiv@divisor+1
  3015  0DC7  083B               	movf	display_number@number,w
  3016  0DC8  00B8               	movwf	??_display_number
  3017  0DC9  01B9               	clrf	??_display_number+1
  3018  0DCA  0838               	movf	??_display_number,w
  3019  0DCB  00AF               	movwf	___awdiv@dividend
  3020  0DCC  0839               	movf	??_display_number+1,w
  3021  0DCD  00B0               	movwf	___awdiv@dividend+1
  3022  0DCE  318E  2608  318D   	fcall	___awdiv
  3023  0DD1  0020               	movlb	0	; select bank0
  3024  0DD2  082D               	movf	?___awdiv,w
  3025  0DD3  3EDE               	addlw	(low (_rakamlar| 0))& (0+255)
  3026  0DD4  0086               	movwf	6
  3027  0DD5  0187               	clrf	7
  3028  0DD6  0801               	movf	1,w
  3029  0DD7  00BA               	movwf	??_display_number+2
  3030  0DD8  083A               	movf	??_display_number+2,w
  3031  0DD9  00BC               	movwf	display_number@digit
  3032                           
  3033                           ;SevenSegments.h: 48: if(what_to_display)
  3034  0DDA  0859               	movf	_what_to_display,w
  3035  0DDB  1D03               	btfss	3,2
  3036                           
  3037                           ;SevenSegments.h: 49: digit |= 1 << 7;
  3038  0DDC  17BC               	bsf	display_number@digit,7
  3039                           
  3040                           ;SevenSegments.h: 50: LoadDataCenter(4, digit);
  3041  0DDD  083C               	movf	display_number@digit,w
  3042  0DDE  00B8               	movwf	??_display_number
  3043  0DDF  0838               	movf	??_display_number,w
  3044  0DE0  00B3               	movwf	LoadDataCenter@center_data
  3045  0DE1  3004               	movlw	4
  3046  0DE2  318C  24EC  318D   	fcall	_LoadDataCenter
  3047                           
  3048                           ;SevenSegments.h: 52: digit = rakamlar[number % 10];
  3049  0DE5  300A               	movlw	10
  3050  0DE6  0020               	movlb	0	; select bank0
  3051  0DE7  00AD               	movwf	___awmod@divisor
  3052  0DE8  3000               	movlw	0
  3053  0DE9  00AE               	movwf	___awmod@divisor+1
  3054  0DEA  083B               	movf	display_number@number,w
  3055  0DEB  00B8               	movwf	??_display_number
  3056  0DEC  01B9               	clrf	??_display_number+1
  3057  0DED  0838               	movf	??_display_number,w
  3058  0DEE  00AF               	movwf	___awmod@dividend
  3059  0DEF  0839               	movf	??_display_number+1,w
  3060  0DF0  00B0               	movwf	___awmod@dividend+1
  3061  0DF1  318D  2526  318D   	fcall	___awmod
  3062  0DF4  0020               	movlb	0	; select bank0
  3063  0DF5  082D               	movf	?___awmod,w
  3064  0DF6  3EDE               	addlw	(low (_rakamlar| 0))& (0+255)
  3065  0DF7  0086               	movwf	6
  3066  0DF8  0187               	clrf	7
  3067  0DF9  0801               	movf	1,w
  3068  0DFA  00BA               	movwf	??_display_number+2
  3069  0DFB  083A               	movf	??_display_number+2,w
  3070  0DFC  00BC               	movwf	display_number@digit
  3071                           
  3072                           ;SevenSegments.h: 53: if(what_to_display == 0)
  3073  0DFD  0859               	movf	_what_to_display,w
  3074  0DFE  1903               	btfsc	3,2
  3075                           
  3076                           ;SevenSegments.h: 54: digit |= 1 << 7;
  3077  0DFF  17BC               	bsf	display_number@digit,7
  3078                           
  3079                           ;SevenSegments.h: 55: LoadDataCenter(5, digit);
  3080  0E00  083C               	movf	display_number@digit,w
  3081  0E01  00B8               	movwf	??_display_number
  3082  0E02  0838               	movf	??_display_number,w
  3083  0E03  00B3               	movwf	LoadDataCenter@center_data
  3084  0E04  3005               	movlw	5
  3085  0E05  318C  24EC         	fcall	_LoadDataCenter
  3086  0E07  0008               	return
  3087  0E08                     __end_of_display_number:	
  3088                           
  3089                           	psect	text12
  3090  0EB7                     __ptext12:	
  3091 ;; *************** function _disp_time_info *****************
  3092 ;; Defined at:
  3093 ;;		line 114 in file "ALARM.h"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  k               1    4[BANK1 ] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3107 ;;      Params:         0       0       0       0
  3108 ;;      Locals:         0       0       1       0
  3109 ;;      Temps:          0       0       2       0
  3110 ;;      Totals:         0       0       3       0
  3111 ;;Total ram usage:        3 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:   15
  3114 ;; This function calls:
  3115 ;;		___awdiv
  3116 ;;		___awmod
  3117 ;;		_lcd_goto
  3118 ;;		_lcd_yaz
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _disp_time_info
  3126  0EB7                     _disp_time_info:	
  3127                           
  3128                           ;ALARM.h: 116: lcd_goto(1, 1);
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _disp_time_info: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3132  0EB7  0020               	movlb	0	; select bank0
  3133  0EB8  01C0               	clrf	lcd_goto@p_2
  3134  0EB9  0AC0               	incf	lcd_goto@p_2,f
  3135  0EBA  3001               	movlw	1
  3136  0EBB  318A  22BD  318E   	fcall	_lcd_goto
  3137                           
  3138                           ;ALARM.h: 117: for(char k=0; k != 6; k++)
  3139  0EBE  0021               	movlb	1	; select bank1
  3140  0EBF  01EE               	clrf	disp_time_info@k^(0+128)
  3141  0EC0                     L4:	
  3142  0EC0  3006               	movlw	6
  3143  0EC1  066E               	xorwf	disp_time_info@k^(0+128),w
  3144  0EC2  1903               	btfsc	3,2
  3145  0EC3  0008               	return
  3146                           
  3147                           ;ALARM.h: 118: {
  3148                           ;ALARM.h: 119: tempor = zaman[k];
  3149  0EC4  086E               	movf	disp_time_info@k^(0+128),w
  3150  0EC5  3EC3               	addlw	(low (_zaman| 0))& (0+255)
  3151  0EC6  0086               	movwf	6
  3152  0EC7  0187               	clrf	7
  3153  0EC8  0801               	movf	1,w
  3154  0EC9  00EC               	movwf	??_disp_time_info^(0+128)
  3155  0ECA  086C               	movf	??_disp_time_info^(0+128),w
  3156  0ECB  0020               	movlb	0	; select bank0
  3157  0ECC  00D6               	movwf	_tempor
  3158                           
  3159                           ;ALARM.h: 120: lcd_yaz(tempor/10 +48);
  3160  0ECD  300A               	movlw	10
  3161  0ECE  00AD               	movwf	___awdiv@divisor
  3162  0ECF  3000               	movlw	0
  3163  0ED0  00AE               	movwf	___awdiv@divisor+1
  3164  0ED1  0856               	movf	_tempor,w
  3165  0ED2  0021               	movlb	1	; select bank1
  3166  0ED3  00EC               	movwf	??_disp_time_info^(0+128)
  3167  0ED4  01ED               	clrf	(??_disp_time_info^(0+128)+1)
  3168  0ED5  086C               	movf	??_disp_time_info^(0+128),w
  3169  0ED6  0020               	movlb	0	; select bank0
  3170  0ED7  00AF               	movwf	___awdiv@dividend
  3171  0ED8  0021               	movlb	1	; select bank1
  3172  0ED9  086D               	movf	(??_disp_time_info+1)^(0+128),w
  3173  0EDA  0020               	movlb	0	; select bank0
  3174  0EDB  00B0               	movwf	___awdiv@dividend+1
  3175  0EDC  318E  2608  318E   	fcall	___awdiv
  3176  0EDF  0020               	movlb	0	; select bank0
  3177  0EE0  082D               	movf	?___awdiv,w
  3178  0EE1  3E30               	addlw	48
  3179  0EE2  318B  23C3  318E   	fcall	_lcd_yaz
  3180                           
  3181                           ;ALARM.h: 121: lcd_yaz(tempor%10 +48);
  3182  0EE5  300A               	movlw	10
  3183  0EE6  0020               	movlb	0	; select bank0
  3184  0EE7  00AD               	movwf	___awmod@divisor
  3185  0EE8  3000               	movlw	0
  3186  0EE9  00AE               	movwf	___awmod@divisor+1
  3187  0EEA  0856               	movf	_tempor,w
  3188  0EEB  0021               	movlb	1	; select bank1
  3189  0EEC  00EC               	movwf	??_disp_time_info^(0+128)
  3190  0EED  01ED               	clrf	(??_disp_time_info^(0+128)+1)
  3191  0EEE  086C               	movf	??_disp_time_info^(0+128),w
  3192  0EEF  0020               	movlb	0	; select bank0
  3193  0EF0  00AF               	movwf	___awmod@dividend
  3194  0EF1  0021               	movlb	1	; select bank1
  3195  0EF2  086D               	movf	(??_disp_time_info+1)^(0+128),w
  3196  0EF3  0020               	movlb	0	; select bank0
  3197  0EF4  00B0               	movwf	___awmod@dividend+1
  3198  0EF5  318D  2526  318E   	fcall	___awmod
  3199  0EF8  0020               	movlb	0	; select bank0
  3200  0EF9  082D               	movf	?___awmod,w
  3201  0EFA  3E30               	addlw	48
  3202  0EFB  318B  23C3  318E   	fcall	_lcd_yaz
  3203                           
  3204                           ;ALARM.h: 123: if(k < 2)lcd_yaz('/');
  3205  0EFE  3002               	movlw	2
  3206  0EFF  0021               	movlb	1	; select bank1
  3207  0F00  026E               	subwf	disp_time_info@k^(0+128),w
  3208  0F01  1803               	skipnc
  3209  0F02  2F05               	goto	l4360
  3210  0F03  302F               	movlw	47
  3211  0F04  2F18               	goto	L3
  3212  0F05                     l4360:	
  3213                           
  3214                           ;ALARM.h: 124: else if(k == 2)lcd_goto(2, 1);
  3215  0F05  3002               	movlw	2
  3216  0F06  0021               	movlb	1	; select bank1
  3217  0F07  066E               	xorwf	disp_time_info@k^(0+128),w
  3218  0F08  1D03               	btfss	3,2
  3219  0F09  2F12               	goto	l4364
  3220  0F0A  0020               	movlb	0	; select bank0
  3221  0F0B  01C0               	clrf	lcd_goto@p_2
  3222  0F0C  0AC0               	incf	lcd_goto@p_2,f
  3223  0F0D  3002               	movlw	2
  3224  0F0E  318A  22BD  318E   	fcall	_lcd_goto
  3225  0F11  2F1B               	goto	l4368
  3226  0F12                     l4364:	
  3227                           
  3228                           ;ALARM.h: 125: else {
  3229                           ;ALARM.h: 126: if(k <5)lcd_yaz(':');
  3230  0F12  3005               	movlw	5
  3231  0F13  0021               	movlb	1	; select bank1
  3232  0F14  026E               	subwf	disp_time_info@k^(0+128),w
  3233  0F15  1803               	skipnc
  3234  0F16  2F1B               	goto	l4368
  3235  0F17  303A               	movlw	58
  3236  0F18                     L3:	
  3237  0F18  318B  23C3  318E   	fcall	_lcd_yaz
  3238  0F1B                     l4368:	
  3239  0F1B  3001               	movlw	1
  3240  0F1C  0021               	movlb	1	; select bank1
  3241  0F1D  00EC               	movwf	??_disp_time_info^(0+128)
  3242  0F1E  086C               	movf	??_disp_time_info^(0+128),w
  3243  0F1F  07EE               	addwf	disp_time_info@k^(0+128),f
  3244  0F20  2EC0               	goto	L4
  3245  0F21                     __end_of_disp_time_info:	
  3246                           
  3247                           	psect	text13
  3248  0D26                     __ptext13:	
  3249 ;; *************** function ___awmod *****************
  3250 ;; Defined at:
  3251 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  divisor         2   13[BANK0 ] int 
  3254 ;;  dividend        2   15[BANK0 ] int 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  sign            1   19[BANK0 ] unsigned char 
  3257 ;;  counter         1   18[BANK0 ] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  2   13[BANK0 ] int 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3267 ;;      Params:         0       4       0       0
  3268 ;;      Locals:         0       2       0       0
  3269 ;;      Temps:          0       1       0       0
  3270 ;;      Totals:         0       7       0       0
  3271 ;;Total ram usage:        7 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    7
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_disp_time_info
  3278 ;;		_display_number
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function ___awmod
  3285  0D26                     ___awmod:	
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3289  0D26  0020               	movlb	0	; select bank0
  3290  0D27  01B3               	clrf	___awmod@sign
  3291  0D28  1FB0               	btfss	___awmod@dividend+1,7
  3292  0D29  2D31               	goto	l4198
  3293  0D2A  09AF               	comf	___awmod@dividend,f
  3294  0D2B  09B0               	comf	___awmod@dividend+1,f
  3295  0D2C  0AAF               	incf	___awmod@dividend,f
  3296  0D2D  1903               	skipnz
  3297  0D2E  0AB0               	incf	___awmod@dividend+1,f
  3298  0D2F  01B3               	clrf	___awmod@sign
  3299  0D30  0AB3               	incf	___awmod@sign,f
  3300  0D31                     l4198:	
  3301  0D31  1FAE               	btfss	___awmod@divisor+1,7
  3302  0D32  2D38               	goto	l4202
  3303  0D33  09AD               	comf	___awmod@divisor,f
  3304  0D34  09AE               	comf	___awmod@divisor+1,f
  3305  0D35  0AAD               	incf	___awmod@divisor,f
  3306  0D36  1903               	skipnz
  3307  0D37  0AAE               	incf	___awmod@divisor+1,f
  3308  0D38                     l4202:	
  3309  0D38  082D               	movf	___awmod@divisor,w
  3310  0D39  042E               	iorwf	___awmod@divisor+1,w
  3311  0D3A  1903               	btfsc	3,2
  3312  0D3B  2D5F               	goto	l4220
  3313  0D3C  01B2               	clrf	___awmod@counter
  3314  0D3D  0AB2               	incf	___awmod@counter,f
  3315  0D3E                     l4210:	
  3316  0D3E  1BAE               	btfsc	___awmod@divisor+1,7
  3317  0D3F  2D4A               	goto	l4212
  3318  0D40  3001               	movlw	1
  3319  0D41                     u4565:	
  3320  0D41  35AD               	lslf	___awmod@divisor,f
  3321  0D42  0DAE               	rlf	___awmod@divisor+1,f
  3322  0D43  0B89               	decfsz	9,f
  3323  0D44  2D41               	goto	u4565
  3324  0D45  3001               	movlw	1
  3325  0D46  00B1               	movwf	??___awmod
  3326  0D47  0831               	movf	??___awmod,w
  3327  0D48  07B2               	addwf	___awmod@counter,f
  3328  0D49  2D3E               	goto	l4210
  3329  0D4A                     l4212:	
  3330  0D4A  082E               	movf	___awmod@divisor+1,w
  3331  0D4B  0230               	subwf	___awmod@dividend+1,w
  3332  0D4C  1D03               	skipz
  3333  0D4D  2D50               	goto	u4585
  3334  0D4E  082D               	movf	___awmod@divisor,w
  3335  0D4F  022F               	subwf	___awmod@dividend,w
  3336  0D50                     u4585:	
  3337  0D50  1C03               	skipc
  3338  0D51  2D56               	goto	l4216
  3339  0D52  082D               	movf	___awmod@divisor,w
  3340  0D53  02AF               	subwf	___awmod@dividend,f
  3341  0D54  082E               	movf	___awmod@divisor+1,w
  3342  0D55  3BB0               	subwfb	___awmod@dividend+1,f
  3343  0D56                     l4216:	
  3344  0D56  3001               	movlw	1
  3345  0D57                     u4595:	
  3346  0D57  36AE               	lsrf	___awmod@divisor+1,f
  3347  0D58  0CAD               	rrf	___awmod@divisor,f
  3348  0D59  0B89               	decfsz	9,f
  3349  0D5A  2D57               	goto	u4595
  3350  0D5B  3001               	movlw	1
  3351  0D5C  02B2               	subwf	___awmod@counter,f
  3352  0D5D  1D03               	btfss	3,2
  3353  0D5E  2D4A               	goto	l4212
  3354  0D5F                     l4220:	
  3355  0D5F  0833               	movf	___awmod@sign,w
  3356  0D60  1903               	btfsc	3,2
  3357  0D61  2D67               	goto	l4224
  3358  0D62  09AF               	comf	___awmod@dividend,f
  3359  0D63  09B0               	comf	___awmod@dividend+1,f
  3360  0D64  0AAF               	incf	___awmod@dividend,f
  3361  0D65  1903               	skipnz
  3362  0D66  0AB0               	incf	___awmod@dividend+1,f
  3363  0D67                     l4224:	
  3364  0D67  0830               	movf	___awmod@dividend+1,w
  3365  0D68  00AE               	movwf	?___awmod+1
  3366  0D69  082F               	movf	___awmod@dividend,w
  3367  0D6A  00AD               	movwf	?___awmod
  3368  0D6B  0008               	return
  3369  0D6C                     __end_of___awmod:	
  3370                           
  3371                           	psect	text14
  3372  0E08                     __ptext14:	
  3373 ;; *************** function ___awdiv *****************
  3374 ;; Defined at:
  3375 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  divisor         2   13[BANK0 ] int 
  3378 ;;  dividend        2   15[BANK0 ] int 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  quotient        2   20[BANK0 ] int 
  3381 ;;  sign            1   19[BANK0 ] unsigned char 
  3382 ;;  counter         1   18[BANK0 ] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  2   13[BANK0 ] int 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3392 ;;      Params:         0       4       0       0
  3393 ;;      Locals:         0       4       0       0
  3394 ;;      Temps:          0       1       0       0
  3395 ;;      Totals:         0       9       0       0
  3396 ;;Total ram usage:        9 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    7
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_disp_time_info
  3403 ;;		_display_number
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function ___awdiv
  3410  0E08                     ___awdiv:	
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3414  0E08  0020               	movlb	0	; select bank0
  3415  0E09  01B3               	clrf	___awdiv@sign
  3416  0E0A  1FAE               	btfss	___awdiv@divisor+1,7
  3417  0E0B  2E13               	goto	l4154
  3418  0E0C  09AD               	comf	___awdiv@divisor,f
  3419  0E0D  09AE               	comf	___awdiv@divisor+1,f
  3420  0E0E  0AAD               	incf	___awdiv@divisor,f
  3421  0E0F  1903               	skipnz
  3422  0E10  0AAE               	incf	___awdiv@divisor+1,f
  3423  0E11  01B3               	clrf	___awdiv@sign
  3424  0E12  0AB3               	incf	___awdiv@sign,f
  3425  0E13                     l4154:	
  3426  0E13  1FB0               	btfss	___awdiv@dividend+1,7
  3427  0E14  2E1E               	goto	l4160
  3428  0E15  09AF               	comf	___awdiv@dividend,f
  3429  0E16  09B0               	comf	___awdiv@dividend+1,f
  3430  0E17  0AAF               	incf	___awdiv@dividend,f
  3431  0E18  1903               	skipnz
  3432  0E19  0AB0               	incf	___awdiv@dividend+1,f
  3433  0E1A  3001               	movlw	1
  3434  0E1B  00B1               	movwf	??___awdiv
  3435  0E1C  0831               	movf	??___awdiv,w
  3436  0E1D  06B3               	xorwf	___awdiv@sign,f
  3437  0E1E                     l4160:	
  3438  0E1E  01B4               	clrf	___awdiv@quotient
  3439  0E1F  01B5               	clrf	___awdiv@quotient+1
  3440  0E20  082D               	movf	___awdiv@divisor,w
  3441  0E21  042E               	iorwf	___awdiv@divisor+1,w
  3442  0E22  1903               	btfsc	3,2
  3443  0E23  2E4D               	goto	l4182
  3444  0E24  01B2               	clrf	___awdiv@counter
  3445  0E25  0AB2               	incf	___awdiv@counter,f
  3446  0E26                     l4170:	
  3447  0E26  1BAE               	btfsc	___awdiv@divisor+1,7
  3448  0E27  2E32               	goto	l4172
  3449  0E28  3001               	movlw	1
  3450  0E29                     u4465:	
  3451  0E29  35AD               	lslf	___awdiv@divisor,f
  3452  0E2A  0DAE               	rlf	___awdiv@divisor+1,f
  3453  0E2B  0B89               	decfsz	9,f
  3454  0E2C  2E29               	goto	u4465
  3455  0E2D  3001               	movlw	1
  3456  0E2E  00B1               	movwf	??___awdiv
  3457  0E2F  0831               	movf	??___awdiv,w
  3458  0E30  07B2               	addwf	___awdiv@counter,f
  3459  0E31  2E26               	goto	l4170
  3460  0E32                     l4172:	
  3461  0E32  3001               	movlw	1
  3462  0E33                     u4485:	
  3463  0E33  35B4               	lslf	___awdiv@quotient,f
  3464  0E34  0DB5               	rlf	___awdiv@quotient+1,f
  3465  0E35  0B89               	decfsz	9,f
  3466  0E36  2E33               	goto	u4485
  3467  0E37  082E               	movf	___awdiv@divisor+1,w
  3468  0E38  0230               	subwf	___awdiv@dividend+1,w
  3469  0E39  1D03               	skipz
  3470  0E3A  2E3D               	goto	u4495
  3471  0E3B  082D               	movf	___awdiv@divisor,w
  3472  0E3C  022F               	subwf	___awdiv@dividend,w
  3473  0E3D                     u4495:	
  3474  0E3D  1C03               	skipc
  3475  0E3E  2E44               	goto	l4178
  3476  0E3F  082D               	movf	___awdiv@divisor,w
  3477  0E40  02AF               	subwf	___awdiv@dividend,f
  3478  0E41  082E               	movf	___awdiv@divisor+1,w
  3479  0E42  3BB0               	subwfb	___awdiv@dividend+1,f
  3480  0E43  1434               	bsf	___awdiv@quotient,0
  3481  0E44                     l4178:	
  3482  0E44  3001               	movlw	1
  3483  0E45                     u4505:	
  3484  0E45  36AE               	lsrf	___awdiv@divisor+1,f
  3485  0E46  0CAD               	rrf	___awdiv@divisor,f
  3486  0E47  0B89               	decfsz	9,f
  3487  0E48  2E45               	goto	u4505
  3488  0E49  3001               	movlw	1
  3489  0E4A  02B2               	subwf	___awdiv@counter,f
  3490  0E4B  1D03               	btfss	3,2
  3491  0E4C  2E32               	goto	l4172
  3492  0E4D                     l4182:	
  3493  0E4D  0833               	movf	___awdiv@sign,w
  3494  0E4E  1903               	btfsc	3,2
  3495  0E4F  2E55               	goto	l4186
  3496  0E50  09B4               	comf	___awdiv@quotient,f
  3497  0E51  09B5               	comf	___awdiv@quotient+1,f
  3498  0E52  0AB4               	incf	___awdiv@quotient,f
  3499  0E53  1903               	skipnz
  3500  0E54  0AB5               	incf	___awdiv@quotient+1,f
  3501  0E55                     l4186:	
  3502  0E55  0835               	movf	___awdiv@quotient+1,w
  3503  0E56  00AE               	movwf	?___awdiv+1
  3504  0E57  0834               	movf	___awdiv@quotient,w
  3505  0E58  00AD               	movwf	?___awdiv
  3506  0E59  0008               	return
  3507  0E5A                     __end_of___awdiv:	
  3508                           
  3509                           	psect	text15
  3510  058B                     __ptext15:	
  3511 ;; *************** function _checkSensors *****************
  3512 ;; Defined at:
  3513 ;;		line 41 in file "ALARM.h"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  any             1    5[BANK1 ] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3527 ;;      Params:         0       0       0       0
  3528 ;;      Locals:         0       0       1       0
  3529 ;;      Temps:          0       0       0       2
  3530 ;;      Totals:         0       0       1       2
  3531 ;;Total ram usage:        3 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:   16
  3534 ;; This function calls:
  3535 ;;		_ADC_read
  3536 ;;		_EEPROM_ReadByte
  3537 ;;		_INSELECT_select
  3538 ;;		_LoadDataCenter
  3539 ;;		_lcd_clear
  3540 ;;		_lcd_write
  3541 ;;		_lcd_yaz
  3542 ;;		_shift_reg_set_pin_lcd
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _checkSensors
  3550  058B                     _checkSensors:	
  3551  058B                     l370:	
  3552                           ;incstack = 0
  3553 ;; hardware stack exceeded
  3554                           ; Regs used in _checkSensors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3555                           
  3556                           
  3557                           ;ALARM.h: 43: byte any = 0;
  3558  058B  0021               	movlb	1	; select bank1
  3559  058C  01EF               	clrf	checkSensors@any^(0+128)
  3560                           
  3561                           ;ALARM.h: 44: for(start=0; start != 4; start++)
  3562  058D  0020               	movlb	0	; select bank0
  3563  058E  01D4               	clrf	_start
  3564  058F  3004               	movlw	4
  3565  0590  0654               	xorwf	_start,w
  3566  0591  1903               	btfsc	3,2
  3567  0592  2E11               	goto	l4304
  3568  0593                     l4274:	
  3569                           
  3570                           ;ALARM.h: 45: {
  3571                           ;ALARM.h: 46: INSELECT_select(start);
  3572  0593  0854               	movf	_start,w
  3573  0594  3189  213B  3185   	fcall	_INSELECT_select
  3574                           
  3575                           ;ALARM.h: 47: ADC_read(start);
  3576  0597  0020               	movlb	0	; select bank0
  3577  0598  0854               	movf	_start,w
  3578  0599  318C  241D  3185   	fcall	_ADC_read
  3579                           
  3580                           ;ALARM.h: 49: *threshold_point =EEPROM_ReadByte(248+start*2);;
  3581  059C  0020               	movlb	0	; select bank0
  3582  059D  3554               	lslf	_start,w
  3583  059E  3EF8               	addlw	248
  3584  059F  3189  215C  3185   	fcall	_EEPROM_ReadByte
  3585  05A2  0022               	movlb	2	; select bank2
  3586  05A3  00C0               	movwf	??_checkSensors^(0+256)
  3587  05A4  0020               	movlb	0	; select bank0
  3588  05A5  0862               	movf	_threshold_point,w
  3589  05A6  0086               	movwf	6
  3590  05A7  0187               	clrf	7
  3591  05A8  0022               	movlb	2	; select bank2
  3592  05A9  0840               	movf	??_checkSensors^(0+256),w
  3593  05AA  0081               	movwf	1
  3594                           
  3595                           ;ALARM.h: 51: *(threshold_point+1) = EEPROM_ReadByte(248+start*2+1); ;
  3596  05AB  0020               	movlb	0	; select bank0
  3597  05AC  3554               	lslf	_start,w
  3598  05AD  3EF9               	addlw	249
  3599  05AE  3189  215C  3185   	fcall	_EEPROM_ReadByte
  3600  05B1  0022               	movlb	2	; select bank2
  3601  05B2  00C0               	movwf	??_checkSensors^(0+256)
  3602  05B3  0020               	movlb	0	; select bank0
  3603  05B4  0A62               	incf	_threshold_point,w
  3604  05B5  0086               	movwf	6
  3605  05B6  0187               	clrf	7
  3606  05B7  0022               	movlb	2	; select bank2
  3607  05B8  0840               	movf	??_checkSensors^(0+256),w
  3608  05B9  0081               	movwf	1
  3609                           
  3610                           ;ALARM.h: 52: if(measured_adc_value >= threshold)
  3611  05BA  0021               	movlb	1	; select bank1
  3612  05BB  085D               	movf	(_threshold+1)^(0+128),w
  3613  05BC  0020               	movlb	0	; select bank0
  3614  05BD  025B               	subwf	_measured_adc_value+1,w
  3615  05BE  1D03               	skipz
  3616  05BF  2DC4               	goto	u4635
  3617  05C0  0021               	movlb	1	; select bank1
  3618  05C1  085C               	movf	_threshold^(0+128),w
  3619  05C2  0020               	movlb	0	; select bank0
  3620  05C3  025A               	subwf	_measured_adc_value,w
  3621  05C4                     u4635:	
  3622  05C4  1C03               	skipc
  3623  05C5  2E07               	goto	l4300
  3624                           
  3625                           ;ALARM.h: 53: {
  3626                           ;ALARM.h: 54: any = 1;
  3627  05C6  0021               	movlb	1	; select bank1
  3628  05C7  01EF               	clrf	checkSensors@any^(0+128)
  3629  05C8  0AEF               	incf	checkSensors@any^(0+128),f
  3630                           
  3631                           ;ALARM.h: 55: lcd_clear();
  3632  05C9  318A  2201  3185   	fcall	_lcd_clear
  3633                           
  3634                           ;ALARM.h: 56: lcd_write("Sensor ");
  3635  05CC  3000               	movlw	low (STR_1| (0+32768))
  3636  05CD  0021               	movlb	1	; select bank1
  3637  05CE  00EC               	movwf	lcd_write@s^(0+128)
  3638  05CF  3088               	movlw	high (STR_1| (0+32768))
  3639  05D0  00ED               	movwf	(lcd_write@s^(0+128)+1)
  3640  05D1  318A  2286  3185   	fcall	_lcd_write
  3641                           
  3642                           ;ALARM.h: 57: lcd_yaz(49+start);
  3643  05D4  0020               	movlb	0	; select bank0
  3644  05D5  0854               	movf	_start,w
  3645  05D6  3E31               	addlw	49
  3646  05D7  318B  23C3  3185   	fcall	_lcd_yaz
  3647                           
  3648                           ;ALARM.h: 58: lcd_write(" ALARM");
  3649  05DA  3008               	movlw	low (STR_2| (0+32768))
  3650  05DB  0021               	movlb	1	; select bank1
  3651  05DC  00EC               	movwf	lcd_write@s^(0+128)
  3652  05DD  3088               	movlw	high (STR_2| (0+32768))
  3653  05DE  00ED               	movwf	(lcd_write@s^(0+128)+1)
  3654  05DF  318A  2286  3185   	fcall	_lcd_write
  3655                           
  3656                           ;ALARM.h: 59: shift_reg_set_pin_lcd(7, 1);
  3657  05E2  0020               	movlb	0	; select bank0
  3658  05E3  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  3659  05E4  0AB8               	incf	shift_reg_set_pin_lcd@pin_value,f
  3660  05E5  3007               	movlw	7
  3661  05E6  318B  2302  3185   	fcall	_shift_reg_set_pin_lcd
  3662                           
  3663                           ;ALARM.h: 60: inselect |= 1 << (3+start);
  3664  05E9  3001               	movlw	1
  3665  05EA  0022               	movlb	2	; select bank2
  3666  05EB  00C0               	movwf	??_checkSensors^(0+256)
  3667  05EC  0020               	movlb	0	; select bank0
  3668  05ED  0854               	movf	_start,w
  3669  05EE  3E03               	addlw	3
  3670  05EF  0A89               	incf	9,f
  3671  05F0  0022               	movlb	2	; select bank2
  3672  05F1  2DF3               	goto	u4644
  3673  05F2                     u4645:	
  3674  05F2  35C0               	lslf	??_checkSensors^(0+256),f
  3675  05F3                     u4644:	
  3676  05F3  0B89               	decfsz	9,f
  3677  05F4  2DF2               	goto	u4645
  3678  05F5  0840               	movf	??_checkSensors^(0+256),w
  3679  05F6  00C1               	movwf	(??_checkSensors+1)^(0+256)
  3680  05F7  0841               	movf	(??_checkSensors+1)^(0+256),w
  3681  05F8  0020               	movlb	0	; select bank0
  3682  05F9  04CE               	iorwf	_inselect,f
  3683                           
  3684                           ;ALARM.h: 61: LoadDataCenter(3, inselect);
  3685  05FA  084E               	movf	_inselect,w
  3686  05FB  0022               	movlb	2	; select bank2
  3687  05FC  00C0               	movwf	??_checkSensors^(0+256)
  3688  05FD  0840               	movf	??_checkSensors^(0+256),w
  3689  05FE  0020               	movlb	0	; select bank0
  3690  05FF  00B3               	movwf	LoadDataCenter@center_data
  3691  0600  3003               	movlw	3
  3692  0601  318C  24EC  3185   	fcall	_LoadDataCenter
  3693                           
  3694                           ;ALARM.h: 63: ALARM_SET = 1;
  3695  0604  0021               	movlb	1	; select bank1
  3696  0605  01AC               	clrf	_ALARM_SET^(0+128)
  3697  0606  0AAC               	incf	_ALARM_SET^(0+128),f
  3698  0607                     l4300:	
  3699  0607  3001               	movlw	1
  3700  0608  0022               	movlb	2	; select bank2
  3701  0609  00C0               	movwf	??_checkSensors^(0+256)
  3702  060A  0840               	movf	??_checkSensors^(0+256),w
  3703  060B  0020               	movlb	0	; select bank0
  3704  060C  07D4               	addwf	_start,f
  3705  060D  3004               	movlw	4
  3706  060E  0654               	xorwf	_start,w
  3707  060F  1D03               	btfss	3,2
  3708  0610  2D93               	goto	l4274
  3709  0611                     l4304:	
  3710                           
  3711                           ;ALARM.h: 64: }
  3712                           ;ALARM.h: 66: }
  3713                           ;ALARM.h: 67: if(!any) {ALARM_SET = 0;shift_reg_set_pin_lcd(7, 0); inselect &= 0x7;
  3714  0611  0021               	movlb	1	; select bank1
  3715  0612  086F               	movf	checkSensors@any^(0+128),w
  3716  0613  1D03               	btfss	3,2
  3717  0614  2D8B               	goto	l370
  3718  0615  01AC               	clrf	_ALARM_SET^(0+128)
  3719  0616  0020               	movlb	0	; select bank0
  3720  0617  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  3721  0618  3007               	movlw	7
  3722  0619  318B  2302  3185   	fcall	_shift_reg_set_pin_lcd
  3723  061C  3007               	movlw	7
  3724  061D  0022               	movlb	2	; select bank2
  3725  061E  00C0               	movwf	??_checkSensors^(0+256)
  3726  061F  0840               	movf	??_checkSensors^(0+256),w
  3727  0620  0020               	movlb	0	; select bank0
  3728  0621  05CE               	andwf	_inselect,f
  3729                           
  3730                           ;ALARM.h: 68: LoadDataCenter(3, inselect);}
  3731  0622  084E               	movf	_inselect,w
  3732  0623  0022               	movlb	2	; select bank2
  3733  0624  00C0               	movwf	??_checkSensors^(0+256)
  3734  0625  0840               	movf	??_checkSensors^(0+256),w
  3735  0626  0020               	movlb	0	; select bank0
  3736  0627  00B3               	movwf	LoadDataCenter@center_data
  3737  0628  3003               	movlw	3
  3738  0629  318C  24EC         	fcall	_LoadDataCenter
  3739  062B  0008               	return
  3740  062C                     __end_of_checkSensors:	
  3741                           ;ALARM.h: 69: else goto tekrar_olc;
  3742                           
  3743                           
  3744                           	psect	text16
  3745  0A86                     __ptext16:	
  3746 ;; *************** function _lcd_write *****************
  3747 ;; Defined at:
  3748 ;;		line 175 in file "LCD.h"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  3751 ;;		 -> STR_2(7), STR_1(8), 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3763 ;;      Params:         0       0       2       0
  3764 ;;      Locals:         0       0       0       0
  3765 ;;      Temps:          0       0       1       0
  3766 ;;      Totals:         0       0       3       0
  3767 ;;Total ram usage:        3 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:   15
  3770 ;; This function calls:
  3771 ;;		_DELAY
  3772 ;;		_lcd_yaz
  3773 ;; This function is called by:
  3774 ;;		_checkSensors
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           
  3779                           ;psect for function _lcd_write
  3780  0A86                     _lcd_write:	
  3781  0A86                     l4066:	
  3782                           ;LCD.h: 177: while(*s){
  3783                           
  3784                           ;incstack = 0
  3785 ;; hardware stack exceeded
  3786                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3787                           
  3788  0A86  0021               	movlb	1	; select bank1
  3789  0A87  086C               	movf	lcd_write@s^(0+128),w
  3790  0A88  0084               	movwf	4
  3791  0A89  086D               	movf	(lcd_write@s+1)^(0+128),w
  3792  0A8A  0085               	movwf	5
  3793  0A8B  0012               	moviw fsr0++
  3794  0A8C  1903               	btfsc	3,2
  3795  0A8D  0008               	return
  3796                           
  3797                           ;LCD.h: 179: lcd_yaz(*s);
  3798  0A8E  0021               	movlb	1	; select bank1
  3799  0A8F  086C               	movf	lcd_write@s^(0+128),w
  3800  0A90  0084               	movwf	4
  3801  0A91  086D               	movf	(lcd_write@s+1)^(0+128),w
  3802  0A92  0085               	movwf	5
  3803  0A93  0800               	movf	0,w	;code access
  3804  0A94  318B  23C3  318A   	fcall	_lcd_yaz
  3805                           
  3806                           ;LCD.h: 180: s++;
  3807  0A97  3001               	movlw	1
  3808  0A98  0021               	movlb	1	; select bank1
  3809  0A99  07EC               	addwf	lcd_write@s^(0+128),f
  3810  0A9A  3000               	movlw	0
  3811  0A9B  3DED               	addwfc	(lcd_write@s+1)^(0+128),f
  3812                           
  3813                           ;LCD.h: 182: DELAY(1);}
  3814  0A9C  3001               	movlw	1
  3815  0A9D  3189  21BB  318A   	fcall	_DELAY
  3816  0AA0  2A86               	goto	l4066
  3817  0AA1                     __end_of_lcd_write:	
  3818                           
  3819                           	psect	text17
  3820  0BC3                     __ptext17:	
  3821 ;; *************** function _lcd_yaz *****************
  3822 ;; Defined at:
  3823 ;;		line 157 in file "LCD.h"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  s               1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  s               1    1[BANK1 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3837 ;;      Params:         0       0       0       0
  3838 ;;      Locals:         0       0       1       0
  3839 ;;      Temps:          0       0       1       0
  3840 ;;      Totals:         0       0       2       0
  3841 ;;Total ram usage:        2 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:   14
  3844 ;; This function calls:
  3845 ;;		_lcd_goto
  3846 ;;		_lcd_info
  3847 ;; This function is called by:
  3848 ;;		_lcd_write
  3849 ;;		_checkSensors
  3850 ;;		_showAlarmMessage
  3851 ;;		_disp_time_info
  3852 ;;		_showPoem
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _lcd_yaz
  3859  0BC3                     _lcd_yaz:	
  3860                           
  3861                           ;incstack = 0
  3862                           ; Regs used in _lcd_yaz: [wreg+status,2+status,0+pclath+cstack]
  3863                           ;lcd_yaz@s stored from wreg
  3864  0BC3  0021               	movlb	1	; select bank1
  3865  0BC4  00EB               	movwf	lcd_yaz@s^(0+128)
  3866                           
  3867                           ;LCD.h: 159: lcd_info(s, 1);
  3868  0BC5  0020               	movlb	0	; select bank0
  3869  0BC6  01BC               	clrf	lcd_info@data_type
  3870  0BC7  0ABC               	incf	lcd_info@data_type,f
  3871  0BC8  0021               	movlb	1	; select bank1
  3872  0BC9  086B               	movf	lcd_yaz@s^(0+128),w
  3873  0BCA  318F  278C  318B   	fcall	_lcd_info
  3874                           
  3875                           ;LCD.h: 160: _x++;
  3876  0BCD  3001               	movlw	1
  3877  0BCE  0021               	movlb	1	; select bank1
  3878  0BCF  00EA               	movwf	??_lcd_yaz^(0+128)
  3879  0BD0  086A               	movf	??_lcd_yaz^(0+128),w
  3880  0BD1  0020               	movlb	0	; select bank0
  3881  0BD2  07DE               	addwf	__x,f
  3882                           
  3883                           ;LCD.h: 161: if(_x == 17)
  3884  0BD3  3011               	movlw	17
  3885  0BD4  065E               	xorwf	__x,w
  3886  0BD5  1D03               	btfss	3,2
  3887  0BD6  0008               	return
  3888                           
  3889                           ;LCD.h: 162: {
  3890                           ;LCD.h: 163: _x = 1;
  3891  0BD7  01DE               	clrf	__x
  3892  0BD8  0ADE               	incf	__x,f
  3893                           
  3894                           ;LCD.h: 164: _y++;
  3895  0BD9  3001               	movlw	1
  3896  0BDA  0021               	movlb	1	; select bank1
  3897  0BDB  00EA               	movwf	??_lcd_yaz^(0+128)
  3898  0BDC  086A               	movf	??_lcd_yaz^(0+128),w
  3899  0BDD  0020               	movlb	0	; select bank0
  3900  0BDE  07DF               	addwf	__y,f
  3901                           
  3902                           ;LCD.h: 165: if(_y == 3)
  3903  0BDF  3003               	movlw	3
  3904  0BE0  065F               	xorwf	__y,w
  3905  0BE1  1D03               	btfss	3,2
  3906  0BE2  2BE5               	goto	l3968
  3907                           
  3908                           ;LCD.h: 166: {
  3909                           ;LCD.h: 167: _y = 1;
  3910  0BE3  01DF               	clrf	__y
  3911  0BE4  0ADF               	incf	__y,f
  3912  0BE5                     l3968:	
  3913                           
  3914                           ;LCD.h: 168: }
  3915                           ;LCD.h: 170: lcd_goto(_y, _x);
  3916  0BE5  085E               	movf	__x,w
  3917  0BE6  0021               	movlb	1	; select bank1
  3918  0BE7  00EA               	movwf	??_lcd_yaz^(0+128)
  3919  0BE8  086A               	movf	??_lcd_yaz^(0+128),w
  3920  0BE9  0020               	movlb	0	; select bank0
  3921  0BEA  00C0               	movwf	lcd_goto@p_2
  3922  0BEB  085F               	movf	__y,w
  3923  0BEC  318A  22BD         	fcall	_lcd_goto
  3924  0BEE  0008               	return
  3925  0BEF                     __end_of_lcd_yaz:	
  3926                           
  3927                           	psect	text18
  3928  095C                     __ptext18:	
  3929 ;; *************** function _EEPROM_ReadByte *****************
  3930 ;; Defined at:
  3931 ;;		line 37 in file "EEPROM.h"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  address         1    wreg     unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  address         1   13[BANK0 ] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      unsigned char 
  3938 ;; Registers used:
  3939 ;;		wreg
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3945 ;;      Params:         0       0       0       0
  3946 ;;      Locals:         0       1       0       0
  3947 ;;      Temps:          0       0       0       0
  3948 ;;      Totals:         0       1       0       0
  3949 ;;Total ram usage:        1 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    7
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_checkSensors
  3956 ;;		_showAlarmMessage
  3957 ;;		_findClosestAlarm
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _EEPROM_ReadByte
  3964  095C                     _EEPROM_ReadByte:	
  3965                           
  3966                           ;incstack = 0
  3967                           ; Regs used in _EEPROM_ReadByte: [wreg]
  3968                           ;EEPROM_ReadByte@address stored from wreg
  3969  095C  0020               	movlb	0	; select bank0
  3970  095D  00AD               	movwf	EEPROM_ReadByte@address
  3971                           
  3972                           ;EEPROM.h: 39: EEPGD = 0;
  3973  095E  0023               	movlb	3	; select bank3
  3974  095F  1395               	bcf	21,7	;volsfr
  3975                           
  3976                           ;EEPROM.h: 40: CFGS = 0;
  3977  0960  1315               	bcf	21,6	;volsfr
  3978                           
  3979                           ;EEPROM.h: 41: EEADRL = address;
  3980  0961  0020               	movlb	0	; select bank0
  3981  0962  082D               	movf	EEPROM_ReadByte@address,w
  3982  0963  0023               	movlb	3	; select bank3
  3983  0964  0091               	movwf	17	;volatile
  3984                           
  3985                           ;EEPROM.h: 42: RD = 1;
  3986  0965  1415               	bsf	21,0	;volsfr
  3987  0966                     l342:	
  3988                           ;EEPROM.h: 43: while(RD);
  3989                           
  3990  0966  1815               	btfsc	21,0	;volsfr
  3991  0967  2966               	goto	l342
  3992                           
  3993                           ;EEPROM.h: 44: EEIF = 0;
  3994  0968  0020               	movlb	0	; select bank0
  3995  0969  1212               	bcf	18,4	;volatile
  3996                           
  3997                           ;EEPROM.h: 45: return EEDATL;
  3998  096A  0023               	movlb	3	; select bank3
  3999  096B  0813               	movf	19,w	;volatile
  4000  096C  0008               	return
  4001  096D                     __end_of_EEPROM_ReadByte:	
  4002                           
  4003                           	psect	text19
  4004  0C1D                     __ptext19:	
  4005 ;; *************** function _ADC_read *****************
  4006 ;; Defined at:
  4007 ;;		line 50 in file "ADC.h"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  pin             1    wreg     unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  pin             1   27[BANK0 ] unsigned char 
  4012 ;;  m               1   28[BANK0 ] PTR unsigned char 
  4013 ;;		 -> measured_adc_value(2), 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4023 ;;      Params:         0       0       0       0
  4024 ;;      Locals:         0       2       0       0
  4025 ;;      Temps:          0       1       0       0
  4026 ;;      Totals:         0       3       0       0
  4027 ;;Total ram usage:        3 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:   12
  4030 ;; This function calls:
  4031 ;;		_DELAY
  4032 ;;		_INSELECT_select
  4033 ;; This function is called by:
  4034 ;;		_checkSensors
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _ADC_read
  4040  0C1D                     _ADC_read:	
  4041                           
  4042                           ;incstack = 0
  4043                           ; Regs used in _ADC_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4044                           ;ADC_read@pin stored from wreg
  4045  0C1D  0020               	movlb	0	; select bank0
  4046  0C1E  00BB               	movwf	ADC_read@pin
  4047                           
  4048                           ;ADC.h: 54: INSELECT_select(pin);
  4049  0C1F  083B               	movf	ADC_read@pin,w
  4050  0C20  3189  213B  318C   	fcall	_INSELECT_select
  4051                           
  4052                           ;ADC.h: 56: ANSA4 = 1;
  4053  0C23  0023               	movlb	3	; select bank3
  4054  0C24  160C               	bsf	12,4	;volatile
  4055                           
  4056                           ;ADC.h: 57: DELAY(100);
  4057  0C25  3064               	movlw	100
  4058  0C26  3189  21BB  318C   	fcall	_DELAY
  4059                           
  4060                           ;ADC.h: 58: byte * m = (byte*)&measured_adc_value;
  4061  0C29  305A               	movlw	(low (_measured_adc_value| 0))& (0+255)
  4062  0C2A  0020               	movlb	0	; select bank0
  4063  0C2B  00BA               	movwf	??_ADC_read
  4064  0C2C  083A               	movf	??_ADC_read,w
  4065  0C2D  00BC               	movwf	ADC_read@m
  4066                           
  4067                           ;ADC.h: 59: ADGO = 1;
  4068  0C2E  0021               	movlb	1	; select bank1
  4069  0C2F  149D               	bsf	29,1	;volatile
  4070  0C30                     l356:	
  4071                           ;ADC.h: 60: while(ADGO);
  4072                           
  4073  0C30  189D               	btfsc	29,1	;volatile
  4074  0C31  2C30               	goto	l356
  4075                           
  4076                           ;ADC.h: 62: *m = ADRESL;
  4077  0C32  081B               	movf	27,w	;volatile
  4078  0C33  0020               	movlb	0	; select bank0
  4079  0C34  00BA               	movwf	??_ADC_read
  4080  0C35  083C               	movf	ADC_read@m,w
  4081  0C36  0086               	movwf	6
  4082  0C37  0187               	clrf	7
  4083  0C38  083A               	movf	??_ADC_read,w
  4084  0C39  0081               	movwf	1
  4085                           
  4086                           ;ADC.h: 63: m++;
  4087  0C3A  3001               	movlw	1
  4088  0C3B  00BA               	movwf	??_ADC_read
  4089  0C3C  083A               	movf	??_ADC_read,w
  4090  0C3D  07BC               	addwf	ADC_read@m,f
  4091                           
  4092                           ;ADC.h: 64: *m = ADRESH;
  4093  0C3E  0021               	movlb	1	; select bank1
  4094  0C3F  081C               	movf	28,w	;volatile
  4095  0C40  0020               	movlb	0	; select bank0
  4096  0C41  00BA               	movwf	??_ADC_read
  4097  0C42  083C               	movf	ADC_read@m,w
  4098  0C43  0086               	movwf	6
  4099  0C44  0187               	clrf	7
  4100  0C45  083A               	movf	??_ADC_read,w
  4101  0C46  0081               	movwf	1
  4102                           
  4103                           ;ADC.h: 65: ADIF = 0;
  4104  0C47  1311               	bcf	17,6	;volatile
  4105                           
  4106                           ;ADC.h: 66: ANSA4 = 0;
  4107  0C48  0023               	movlb	3	; select bank3
  4108  0C49  120C               	bcf	12,4	;volatile
  4109  0C4A  0008               	return
  4110  0C4B                     __end_of_ADC_read:	
  4111                           
  4112                           	psect	text20
  4113  093B                     __ptext20:	
  4114 ;; *************** function _INSELECT_select *****************
  4115 ;; Defined at:
  4116 ;;		line 30 in file "INSELECT.h"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  input_number    1    wreg     unsigned char 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  input_number    1   25[BANK0 ] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4130 ;;      Params:         0       0       0       0
  4131 ;;      Locals:         0       1       0       0
  4132 ;;      Temps:          0       1       0       0
  4133 ;;      Totals:         0       2       0       0
  4134 ;;Total ram usage:        2 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:   11
  4137 ;; This function calls:
  4138 ;;		_LoadDataCenter
  4139 ;; This function is called by:
  4140 ;;		_ADC_read
  4141 ;;		_checkSensors
  4142 ;;		_main
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _INSELECT_select
  4148  093B                     _INSELECT_select:	
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _INSELECT_select: [wreg+status,2+status,0+pclath+cstack]
  4152                           ;INSELECT_select@input_number stored from wreg
  4153  093B  0020               	movlb	0	; select bank0
  4154  093C  00B9               	movwf	INSELECT_select@input_number
  4155                           
  4156                           ;INSELECT.h: 32: inselect =(inselect & 0xf0) |input_number;
  4157  093D  084E               	movf	_inselect,w
  4158  093E  39F0               	andlw	240
  4159  093F  0439               	iorwf	INSELECT_select@input_number,w
  4160  0940  00B8               	movwf	??_INSELECT_select
  4161  0941  0838               	movf	??_INSELECT_select,w
  4162  0942  00CE               	movwf	_inselect
  4163                           
  4164                           ;INSELECT.h: 33: LoadDataCenter(3, inselect);
  4165  0943  084E               	movf	_inselect,w
  4166  0944  00B8               	movwf	??_INSELECT_select
  4167  0945  0838               	movf	??_INSELECT_select,w
  4168  0946  00B3               	movwf	LoadDataCenter@center_data
  4169  0947  3003               	movlw	3
  4170  0948  318C  24EC         	fcall	_LoadDataCenter
  4171  094A  0008               	return
  4172  094B                     __end_of_INSELECT_select:	
  4173                           
  4174                           	psect	text21
  4175  08FF                     __ptext21:	
  4176 ;; *************** function _UART_init *****************
  4177 ;; Defined at:
  4178 ;;		line 34 in file "UART.h"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4192 ;;      Params:         0       0       0       0
  4193 ;;      Locals:         0       0       0       0
  4194 ;;      Temps:          0       0       0       0
  4195 ;;      Totals:         0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    7
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_main
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _UART_init
  4208  08FF                     _UART_init:	
  4209                           
  4210                           ;UART.h: 42: SYNC = 0 ;
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in _UART_init: [wreg]
  4214  08FF  0023               	movlb	3	; select bank3
  4215  0900  121E               	bcf	30,4	;volatile
  4216                           
  4217                           ;UART.h: 44: BRGH = 0;
  4218  0901  111E               	bcf	30,2	;volatile
  4219                           
  4220                           ;UART.h: 45: BRG16 = 0 ;
  4221  0902  119F               	bcf	31,3	;volatile
  4222                           
  4223                           ;UART.h: 46: SPBRG = 12;
  4224  0903  300C               	movlw	12
  4225  0904  009B               	movwf	27	;volatile
  4226                           
  4227                           ;UART.h: 48: CREN = 1 ;
  4228  0905  161D               	bsf	29,4	;volatile
  4229                           
  4230                           ;UART.h: 50: SPEN = 1 ;
  4231  0906  179D               	bsf	29,7	;volatile
  4232                           
  4233                           ;UART.h: 51: TXEN = 1 ;
  4234  0907  169E               	bsf	30,5	;volatile
  4235                           
  4236                           ;UART.h: 54: RCIE = 1;
  4237  0908  0021               	movlb	1	; select bank1
  4238  0909  1691               	bsf	17,5	;volatile
  4239                           
  4240                           ;UART.h: 55: RCREG;
  4241  090A  0023               	movlb	3	; select bank3
  4242  090B  0819               	movf	25,w	;volatile
  4243  090C  0008               	return
  4244  090D                     __end_of_UART_init:	
  4245                           
  4246                           	psect	text22
  4247  0D6C                     __ptext22:	
  4248 ;; *************** function _LCD_init *****************
  4249 ;; Defined at:
  4250 ;;		line 197 in file "LCD.h"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4264 ;;      Params:         0       0       0       0
  4265 ;;      Locals:         0       0       0       0
  4266 ;;      Temps:          0       0       1       0
  4267 ;;      Totals:         0       0       1       0
  4268 ;;Total ram usage:        1 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:   15
  4271 ;; This function calls:
  4272 ;;		_DELAY
  4273 ;;		_lcd_clear
  4274 ;;		_lcd_info
  4275 ;;		_shift_reg_set_pin_lcd
  4276 ;; This function is called by:
  4277 ;;		_main
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function _LCD_init
  4283  0D6C                     _LCD_init:	
  4284                           
  4285                           ;LCD.h: 199: shift_reg_set_pin_lcd(1, 0);
  4286                           
  4287                           ;incstack = 0
  4288                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  4289  0D6C  0020               	movlb	0	; select bank0
  4290  0D6D  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  4291  0D6E  3001               	movlw	1
  4292  0D6F  318B  2302  318D   	fcall	_shift_reg_set_pin_lcd
  4293                           
  4294                           ;LCD.h: 201: shift_reg_set_pin_lcd(2, 0);
  4295  0D72  0020               	movlb	0	; select bank0
  4296  0D73  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  4297  0D74  3002               	movlw	2
  4298  0D75  318B  2302  318D   	fcall	_shift_reg_set_pin_lcd
  4299                           
  4300                           ;LCD.h: 204: lcd_info(0x02, 2);
  4301  0D78  3002               	movlw	2
  4302  0D79  0021               	movlb	1	; select bank1
  4303  0D7A  00EB               	movwf	??_LCD_init^(0+128)
  4304  0D7B  086B               	movf	??_LCD_init^(0+128),w
  4305  0D7C  0020               	movlb	0	; select bank0
  4306  0D7D  00BC               	movwf	lcd_info@data_type
  4307  0D7E  3002               	movlw	2
  4308  0D7F  318F  278C  318D   	fcall	_lcd_info
  4309                           
  4310                           ;LCD.h: 205: DELAY(10);
  4311  0D82  300A               	movlw	10
  4312  0D83  3189  21BB  318D   	fcall	_DELAY
  4313                           
  4314                           ;LCD.h: 206: lcd_info(0x28, 2);
  4315  0D86  3002               	movlw	2
  4316  0D87  0021               	movlb	1	; select bank1
  4317  0D88  00EB               	movwf	??_LCD_init^(0+128)
  4318  0D89  086B               	movf	??_LCD_init^(0+128),w
  4319  0D8A  0020               	movlb	0	; select bank0
  4320  0D8B  00BC               	movwf	lcd_info@data_type
  4321  0D8C  3028               	movlw	40
  4322  0D8D  318F  278C  318D   	fcall	_lcd_info
  4323                           
  4324                           ;LCD.h: 207: DELAY(10);
  4325  0D90  300A               	movlw	10
  4326  0D91  3189  21BB  318D   	fcall	_DELAY
  4327                           
  4328                           ;LCD.h: 209: lcd_info(0x06, 2);
  4329  0D94  3002               	movlw	2
  4330  0D95  0021               	movlb	1	; select bank1
  4331  0D96  00EB               	movwf	??_LCD_init^(0+128)
  4332  0D97  086B               	movf	??_LCD_init^(0+128),w
  4333  0D98  0020               	movlb	0	; select bank0
  4334  0D99  00BC               	movwf	lcd_info@data_type
  4335  0D9A  3006               	movlw	6
  4336  0D9B  318F  278C  318D   	fcall	_lcd_info
  4337                           
  4338                           ;LCD.h: 211: lcd_info(0x0C, 2);
  4339  0D9E  3002               	movlw	2
  4340  0D9F  0021               	movlb	1	; select bank1
  4341  0DA0  00EB               	movwf	??_LCD_init^(0+128)
  4342  0DA1  086B               	movf	??_LCD_init^(0+128),w
  4343  0DA2  0020               	movlb	0	; select bank0
  4344  0DA3  00BC               	movwf	lcd_info@data_type
  4345  0DA4  300C               	movlw	12
  4346  0DA5  318F  278C  318D   	fcall	_lcd_info
  4347                           
  4348                           ;LCD.h: 213: lcd_clear();
  4349  0DA8  318A  2201  318D   	fcall	_lcd_clear
  4350                           
  4351                           ;LCD.h: 215: lcd_info(0x80, 2);
  4352  0DAB  3002               	movlw	2
  4353  0DAC  0021               	movlb	1	; select bank1
  4354  0DAD  00EB               	movwf	??_LCD_init^(0+128)
  4355  0DAE  086B               	movf	??_LCD_init^(0+128),w
  4356  0DAF  0020               	movlb	0	; select bank0
  4357  0DB0  00BC               	movwf	lcd_info@data_type
  4358  0DB1  3080               	movlw	128
  4359  0DB2  318F  278C  318D   	fcall	_lcd_info
  4360                           
  4361                           ;LCD.h: 216: DELAY(10);
  4362  0DB5  300A               	movlw	10
  4363  0DB6  3189  21BB         	fcall	_DELAY
  4364  0DB8  0008               	return
  4365  0DB9                     __end_of_LCD_init:	
  4366                           
  4367                           	psect	text23
  4368  0A01                     __ptext23:	
  4369 ;; *************** function _lcd_clear *****************
  4370 ;; Defined at:
  4371 ;;		line 149 in file "LCD.h"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4385 ;;      Params:         0       0       0       0
  4386 ;;      Locals:         0       0       0       0
  4387 ;;      Temps:          0       0       1       0
  4388 ;;      Totals:         0       0       1       0
  4389 ;;Total ram usage:        1 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:   14
  4392 ;; This function calls:
  4393 ;;		_lcd_goto
  4394 ;;		_lcd_info
  4395 ;; This function is called by:
  4396 ;;		_LCD_init
  4397 ;;		_checkSensors
  4398 ;;		_showAlarmMessage
  4399 ;;		_showPoem
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _lcd_clear
  4405  0A01                     _lcd_clear:	
  4406                           
  4407                           ;LCD.h: 152: _y = 1; _x = 1;
  4408                           
  4409                           ;incstack = 0
  4410                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4411  0A01  0020               	movlb	0	; select bank0
  4412  0A02  01DF               	clrf	__y
  4413  0A03  0ADF               	incf	__y,f
  4414  0A04  01DE               	clrf	__x
  4415  0A05  0ADE               	incf	__x,f
  4416                           
  4417                           ;LCD.h: 153: lcd_info(0x01, 2);
  4418  0A06  3002               	movlw	2
  4419  0A07  0021               	movlb	1	; select bank1
  4420  0A08  00EA               	movwf	??_lcd_clear^(0+128)
  4421  0A09  086A               	movf	??_lcd_clear^(0+128),w
  4422  0A0A  0020               	movlb	0	; select bank0
  4423  0A0B  00BC               	movwf	lcd_info@data_type
  4424  0A0C  3001               	movlw	1
  4425  0A0D  318F  278C  318A   	fcall	_lcd_info
  4426                           
  4427                           ;LCD.h: 154: lcd_goto(_y, _x);
  4428  0A10  0020               	movlb	0	; select bank0
  4429  0A11  085E               	movf	__x,w
  4430  0A12  0021               	movlb	1	; select bank1
  4431  0A13  00EA               	movwf	??_lcd_clear^(0+128)
  4432  0A14  086A               	movf	??_lcd_clear^(0+128),w
  4433  0A15  0020               	movlb	0	; select bank0
  4434  0A16  00C0               	movwf	lcd_goto@p_2
  4435  0A17  085F               	movf	__y,w
  4436  0A18  318A  22BD         	fcall	_lcd_goto
  4437  0A1A  0008               	return
  4438  0A1B                     __end_of_lcd_clear:	
  4439                           
  4440                           	psect	text24
  4441  0ABD                     __ptext24:	
  4442 ;; *************** function _lcd_goto *****************
  4443 ;; Defined at:
  4444 ;;		line 185 in file "LCD.h"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  p_1             1    wreg     unsigned char 
  4447 ;;  p_2             1   32[BANK0 ] unsigned char 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  p_1             1   34[BANK0 ] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, pclath, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4459 ;;      Params:         0       1       0       0
  4460 ;;      Locals:         0       1       0       0
  4461 ;;      Temps:          0       1       0       0
  4462 ;;      Totals:         0       3       0       0
  4463 ;;Total ram usage:        3 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:   13
  4466 ;; This function calls:
  4467 ;;		_lcd_info
  4468 ;; This function is called by:
  4469 ;;		_lcd_clear
  4470 ;;		_lcd_yaz
  4471 ;;		_disp_time_info
  4472 ;;		_main
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _lcd_goto
  4478  0ABD                     _lcd_goto:	
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4482                           ;lcd_goto@p_1 stored from wreg
  4483  0ABD  0020               	movlb	0	; select bank0
  4484  0ABE  00C2               	movwf	lcd_goto@p_1
  4485                           
  4486                           ;LCD.h: 187: _y = p_1;
  4487  0ABF  0842               	movf	lcd_goto@p_1,w
  4488  0AC0  00C1               	movwf	??_lcd_goto
  4489  0AC1  0841               	movf	??_lcd_goto,w
  4490  0AC2  00DF               	movwf	__y
  4491                           
  4492                           ;LCD.h: 188: _x = p_2;
  4493  0AC3  0840               	movf	lcd_goto@p_2,w
  4494  0AC4  00C1               	movwf	??_lcd_goto
  4495  0AC5  0841               	movf	??_lcd_goto,w
  4496  0AC6  00DE               	movwf	__x
  4497                           
  4498                           ;LCD.h: 189: if(p_1==1)
  4499  0AC7  0342               	decf	lcd_goto@p_1,w
  4500  0AC8  1D03               	btfss	3,2
  4501  0AC9  2AD3               	goto	l3952
  4502                           
  4503                           ;LCD.h: 190: {lcd_info(0x80+((p_2-1)), 2);
  4504  0ACA  3002               	movlw	2
  4505  0ACB  00C1               	movwf	??_lcd_goto
  4506  0ACC  0841               	movf	??_lcd_goto,w
  4507  0ACD  00BC               	movwf	lcd_info@data_type
  4508  0ACE  0840               	movf	lcd_goto@p_2,w
  4509  0ACF  3E7F               	addlw	127
  4510  0AD0  318F  278C         	fcall	_lcd_info
  4511                           
  4512                           ;LCD.h: 191: }else{
  4513  0AD2  0008               	return
  4514  0AD3                     l3952:	
  4515                           
  4516                           ;LCD.h: 192: lcd_info(0xC0+((p_2-1)), 2);
  4517  0AD3  3002               	movlw	2
  4518  0AD4  0020               	movlb	0	; select bank0
  4519  0AD5  00C1               	movwf	??_lcd_goto
  4520  0AD6  0841               	movf	??_lcd_goto,w
  4521  0AD7  00BC               	movwf	lcd_info@data_type
  4522  0AD8  0840               	movf	lcd_goto@p_2,w
  4523  0AD9  3EBF               	addlw	191
  4524  0ADA  318F  278C         	fcall	_lcd_info
  4525  0ADC  0008               	return
  4526  0ADD                     __end_of_lcd_goto:	
  4527                           
  4528                           	psect	text25
  4529  0F8C                     __ptext25:	
  4530 ;; *************** function _lcd_info *****************
  4531 ;; Defined at:
  4532 ;;		line 92 in file "LCD.h"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  c               1    wreg     unsigned char 
  4535 ;;  data_type       1   28[BANK0 ] unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  c               1   31[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4547 ;;      Params:         0       1       0       0
  4548 ;;      Locals:         0       1       0       0
  4549 ;;      Temps:          0       2       0       0
  4550 ;;      Totals:         0       4       0       0
  4551 ;;Total ram usage:        4 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:   12
  4554 ;; This function calls:
  4555 ;;		_DELAY
  4556 ;;		_LoadDataCenter
  4557 ;;		_shift_reg_set_pin_lcd
  4558 ;; This function is called by:
  4559 ;;		_lcd_clear
  4560 ;;		_lcd_yaz
  4561 ;;		_lcd_goto
  4562 ;;		_LCD_init
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function _lcd_info
  4568  0F8C                     _lcd_info:	
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _lcd_info: [wreg+status,2+status,0+pclath+cstack]
  4572                           ;lcd_info@c stored from wreg
  4573  0F8C  0020               	movlb	0	; select bank0
  4574  0F8D  00BF               	movwf	lcd_info@c
  4575                           
  4576                           ;LCD.h: 94: if(data_type == 2)saim =0;
  4577  0F8E  3002               	movlw	2
  4578  0F8F  063C               	xorwf	lcd_info@data_type,w
  4579  0F90  1D03               	btfss	3,2
  4580  0F91  2F95               	goto	l291
  4581  0F92  0021               	movlb	1	; select bank1
  4582  0F93  01BF               	clrf	_saim^(0+128)
  4583  0F94  2F98               	goto	l3908
  4584  0F95                     l291:	
  4585                           
  4586                           ;LCD.h: 95: else saim=1;
  4587  0F95  0021               	movlb	1	; select bank1
  4588  0F96  01BF               	clrf	_saim^(0+128)
  4589  0F97  0ABF               	incf	_saim^(0+128),f
  4590  0F98                     l3908:	
  4591                           
  4592                           ;LCD.h: 96: shift_reg_set_pin_lcd(1, saim);
  4593  0F98  083F               	movf	_saim^(0+128),w
  4594  0F99  0020               	movlb	0	; select bank0
  4595  0F9A  00BD               	movwf	??_lcd_info
  4596  0F9B  083D               	movf	??_lcd_info,w
  4597  0F9C  00B8               	movwf	shift_reg_set_pin_lcd@pin_value
  4598  0F9D  3001               	movlw	1
  4599  0F9E  318B  2302  318F   	fcall	_shift_reg_set_pin_lcd
  4600                           
  4601                           ;LCD.h: 99: shift_reg_set_pin_lcd(2, 1);
  4602  0FA1  0020               	movlb	0	; select bank0
  4603  0FA2  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  4604  0FA3  0AB8               	incf	shift_reg_set_pin_lcd@pin_value,f
  4605  0FA4  3002               	movlw	2
  4606  0FA5  318B  2302  318F   	fcall	_shift_reg_set_pin_lcd
  4607                           
  4608                           ;LCD.h: 103: _temp_ = (c&0xF0) >> 1 ;
  4609  0FA8  0020               	movlb	0	; select bank0
  4610  0FA9  363F               	lsrf	lcd_info@c,w
  4611  0FAA  3978               	andlw	120
  4612  0FAB  00BD               	movwf	??_lcd_info
  4613  0FAC  083D               	movf	??_lcd_info,w
  4614  0FAD  00C9               	movwf	__temp_
  4615                           
  4616                           ;LCD.h: 105: LCDData = LCDData & 0x87;
  4617  0FAE  0846               	movf	_LCDData,w
  4618  0FAF  3987               	andlw	135
  4619  0FB0  00BD               	movwf	??_lcd_info
  4620  0FB1  083D               	movf	??_lcd_info,w
  4621  0FB2  00C6               	movwf	_LCDData
  4622                           
  4623                           ;LCD.h: 106: LCDData |= _temp_;
  4624  0FB3  0849               	movf	__temp_,w
  4625  0FB4  00BD               	movwf	??_lcd_info
  4626  0FB5  083D               	movf	??_lcd_info,w
  4627  0FB6  04C6               	iorwf	_LCDData,f
  4628                           
  4629                           ;LCD.h: 112: LoadDataCenter(2, LCDData);
  4630  0FB7  0846               	movf	_LCDData,w
  4631  0FB8  00BD               	movwf	??_lcd_info
  4632  0FB9  083D               	movf	??_lcd_info,w
  4633  0FBA  00B3               	movwf	LoadDataCenter@center_data
  4634  0FBB  3002               	movlw	2
  4635  0FBC  318C  24EC  318F   	fcall	_LoadDataCenter
  4636                           
  4637                           ;LCD.h: 116: DELAY( 4 );
  4638  0FBF  3004               	movlw	4
  4639  0FC0  3189  21BB  318F   	fcall	_DELAY
  4640                           
  4641                           ;LCD.h: 117: shift_reg_set_pin_lcd(2, 0);
  4642  0FC3  0020               	movlb	0	; select bank0
  4643  0FC4  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  4644  0FC5  3002               	movlw	2
  4645  0FC6  318B  2302  318F   	fcall	_shift_reg_set_pin_lcd
  4646                           
  4647                           ;LCD.h: 120: DELAY(4);
  4648  0FC9  3004               	movlw	4
  4649  0FCA  3189  21BB  318F   	fcall	_DELAY
  4650                           
  4651                           ;LCD.h: 121: shift_reg_set_pin_lcd(2, 1);
  4652  0FCD  0020               	movlb	0	; select bank0
  4653  0FCE  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  4654  0FCF  0AB8               	incf	shift_reg_set_pin_lcd@pin_value,f
  4655  0FD0  3002               	movlw	2
  4656  0FD1  318B  2302  318F   	fcall	_shift_reg_set_pin_lcd
  4657                           
  4658                           ;LCD.h: 123: _temp_ = ((c & 0x0F)<<3) ;
  4659  0FD4  0020               	movlb	0	; select bank0
  4660  0FD5  083F               	movf	lcd_info@c,w
  4661  0FD6  390F               	andlw	15
  4662  0FD7  00BD               	movwf	??_lcd_info
  4663  0FD8  3002               	movlw	2
  4664  0FD9                     u4155:	
  4665  0FD9  35BD               	lslf	??_lcd_info,f
  4666  0FDA  3EFF               	addlw	-1
  4667  0FDB  1D03               	skipz
  4668  0FDC  2FD9               	goto	u4155
  4669  0FDD  353D               	lslf	??_lcd_info,w
  4670  0FDE  00BE               	movwf	??_lcd_info+1
  4671  0FDF  083E               	movf	??_lcd_info+1,w
  4672  0FE0  00C9               	movwf	__temp_
  4673                           
  4674                           ;LCD.h: 125: LCDData = LCDData & 0x87;
  4675  0FE1  0846               	movf	_LCDData,w
  4676  0FE2  3987               	andlw	135
  4677  0FE3  00BD               	movwf	??_lcd_info
  4678  0FE4  083D               	movf	??_lcd_info,w
  4679  0FE5  00C6               	movwf	_LCDData
  4680                           
  4681                           ;LCD.h: 126: LCDData |= _temp_;
  4682  0FE6  0849               	movf	__temp_,w
  4683  0FE7  00BD               	movwf	??_lcd_info
  4684  0FE8  083D               	movf	??_lcd_info,w
  4685  0FE9  04C6               	iorwf	_LCDData,f
  4686                           
  4687                           ;LCD.h: 132: LoadDataCenter(2, LCDData);
  4688  0FEA  0846               	movf	_LCDData,w
  4689  0FEB  00BD               	movwf	??_lcd_info
  4690  0FEC  083D               	movf	??_lcd_info,w
  4691  0FED  00B3               	movwf	LoadDataCenter@center_data
  4692  0FEE  3002               	movlw	2
  4693  0FEF  318C  24EC  318F   	fcall	_LoadDataCenter
  4694                           
  4695                           ;LCD.h: 142: DELAY( 4 );
  4696  0FF2  3004               	movlw	4
  4697  0FF3  3189  21BB  318F   	fcall	_DELAY
  4698                           
  4699                           ;LCD.h: 143: shift_reg_set_pin_lcd(2, 0);
  4700  0FF6  0020               	movlb	0	; select bank0
  4701  0FF7  01B8               	clrf	shift_reg_set_pin_lcd@pin_value
  4702  0FF8  3002               	movlw	2
  4703  0FF9  318B  2302  318F   	fcall	_shift_reg_set_pin_lcd
  4704                           
  4705                           ;LCD.h: 146: DELAY(10);
  4706  0FFC  300A               	movlw	10
  4707  0FFD  3189  21BB         	fcall	_DELAY
  4708  0FFF  0008               	return
  4709  1000                     __end_of_lcd_info:	
  4710                           
  4711                           	psect	text26
  4712  0B02                     __ptext26:	
  4713 ;; *************** function _shift_reg_set_pin_lcd *****************
  4714 ;; Defined at:
  4715 ;;		line 42 in file "LCD.h"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  pin_number      1    wreg     unsigned char 
  4718 ;;  pin_value       1   24[BANK0 ] unsigned char 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  pin_number      1   27[BANK0 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0, pclath, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4730 ;;      Params:         0       1       0       0
  4731 ;;      Locals:         0       1       0       0
  4732 ;;      Temps:          0       2       0       0
  4733 ;;      Totals:         0       4       0       0
  4734 ;;Total ram usage:        4 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:   11
  4737 ;; This function calls:
  4738 ;;		_LoadDataCenter
  4739 ;; This function is called by:
  4740 ;;		_lcd_info
  4741 ;;		_LCD_init
  4742 ;;		_checkSensors
  4743 ;;		_main
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           
  4748                           ;psect for function _shift_reg_set_pin_lcd
  4749  0B02                     _shift_reg_set_pin_lcd:	
  4750                           
  4751                           ;incstack = 0
  4752                           ; Regs used in _shift_reg_set_pin_lcd: [wreg+status,2+status,0+pclath+cstack]
  4753                           ;shift_reg_set_pin_lcd@pin_number stored from wreg
  4754  0B02  0020               	movlb	0	; select bank0
  4755  0B03  00BB               	movwf	shift_reg_set_pin_lcd@pin_number
  4756                           
  4757                           ;LCD.h: 45: if(pin_value)
  4758  0B04  0838               	movf	shift_reg_set_pin_lcd@pin_value,w
  4759  0B05  1903               	btfsc	3,2
  4760  0B06  2B13               	goto	l3900
  4761                           
  4762                           ;LCD.h: 46: {
  4763                           ;LCD.h: 47: LCDData |= 1 << (pin_number);
  4764  0B07  3001               	movlw	1
  4765  0B08  00B9               	movwf	??_shift_reg_set_pin_lcd
  4766  0B09  0A3B               	incf	shift_reg_set_pin_lcd@pin_number,w
  4767  0B0A  2B0C               	goto	u4124
  4768  0B0B                     u4125:	
  4769  0B0B  35B9               	lslf	??_shift_reg_set_pin_lcd,f
  4770  0B0C                     u4124:	
  4771  0B0C  0B89               	decfsz	9,f
  4772  0B0D  2B0B               	goto	u4125
  4773  0B0E  0839               	movf	??_shift_reg_set_pin_lcd,w
  4774  0B0F  00BA               	movwf	??_shift_reg_set_pin_lcd+1
  4775  0B10  083A               	movf	??_shift_reg_set_pin_lcd+1,w
  4776  0B11  04C6               	iorwf	_LCDData,f
  4777                           
  4778                           ;LCD.h: 48: }
  4779  0B12  2B1F               	goto	l3902
  4780  0B13                     l3900:	
  4781                           
  4782                           ;LCD.h: 49: else LCDData &= ~(1 << (pin_number));
  4783  0B13  3001               	movlw	1
  4784  0B14  00B9               	movwf	??_shift_reg_set_pin_lcd
  4785  0B15  0A3B               	incf	shift_reg_set_pin_lcd@pin_number,w
  4786  0B16  2B18               	goto	u4134
  4787  0B17                     u4135:	
  4788  0B17  35B9               	lslf	??_shift_reg_set_pin_lcd,f
  4789  0B18                     u4134:	
  4790  0B18  0B89               	decfsz	9,f
  4791  0B19  2B17               	goto	u4135
  4792  0B1A  0839               	movf	??_shift_reg_set_pin_lcd,w
  4793  0B1B  3AFF               	xorlw	255
  4794  0B1C  00BA               	movwf	??_shift_reg_set_pin_lcd+1
  4795  0B1D  083A               	movf	??_shift_reg_set_pin_lcd+1,w
  4796  0B1E  05C6               	andwf	_LCDData,f
  4797  0B1F                     l3902:	
  4798                           
  4799                           ;LCD.h: 51: LoadDataCenter(2, LCDData);
  4800  0B1F  0846               	movf	_LCDData,w
  4801  0B20  00B9               	movwf	??_shift_reg_set_pin_lcd
  4802  0B21  0839               	movf	??_shift_reg_set_pin_lcd,w
  4803  0B22  00B3               	movwf	LoadDataCenter@center_data
  4804  0B23  3002               	movlw	2
  4805  0B24  318C  24EC         	fcall	_LoadDataCenter
  4806  0B26  0008               	return
  4807  0B27                     __end_of_shift_reg_set_pin_lcd:	
  4808                           
  4809                           	psect	text27
  4810  0CEC                     __ptext27:	
  4811 ;; *************** function _LoadDataCenter *****************
  4812 ;; Defined at:
  4813 ;;		line 25 in file "LCD.h"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  center_no       1    wreg     unsigned char 
  4816 ;;  center_data     1   19[BANK0 ] unsigned char 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  center_no       1   22[BANK0 ] unsigned char 
  4819 ;;  index           1   23[BANK0 ] char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0, pclath, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4829 ;;      Params:         0       1       0       0
  4830 ;;      Locals:         0       2       0       0
  4831 ;;      Temps:          0       2       0       0
  4832 ;;      Totals:         0       5       0       0
  4833 ;;Total ram usage:        5 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:   10
  4836 ;; This function calls:
  4837 ;;		_PCF8574_set_pin
  4838 ;; This function is called by:
  4839 ;;		_shift_reg_set_pin_lcd
  4840 ;;		_lcd_info
  4841 ;;		_INSELECT_select
  4842 ;;		_checkSensors
  4843 ;;		_display_number
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _LoadDataCenter
  4849  0CEC                     _LoadDataCenter:	
  4850                           
  4851                           ;incstack = 0
  4852                           ; Regs used in _LoadDataCenter: [wreg+status,2+status,0+pclath+cstack]
  4853                           ;LoadDataCenter@center_no stored from wreg
  4854  0CEC  0020               	movlb	0	; select bank0
  4855  0CED  00B6               	movwf	LoadDataCenter@center_no
  4856                           
  4857                           ;LCD.h: 28: for(signed char index = 7; index != -1; index--)
  4858  0CEE  3007               	movlw	7
  4859  0CEF  00B4               	movwf	??_LoadDataCenter
  4860  0CF0  0834               	movf	??_LoadDataCenter,w
  4861  0CF1  00B7               	movwf	LoadDataCenter@index
  4862  0CF2  0A37               	incf	LoadDataCenter@index,w
  4863  0CF3  1903               	btfsc	3,2
  4864  0CF4  2D1A               	goto	l3886
  4865  0CF5                     l3880:	
  4866                           
  4867                           ;LCD.h: 29: {
  4868                           ;LCD.h: 30: PCF8574_set_pin(1, (center_data>>index) & 0x1);
  4869  0CF5  0833               	movf	LoadDataCenter@center_data,w
  4870  0CF6  00B4               	movwf	??_LoadDataCenter
  4871  0CF7  0A37               	incf	LoadDataCenter@index,w
  4872  0CF8  2CFA               	goto	u4084
  4873  0CF9                     u4085:	
  4874  0CF9  36B4               	lsrf	??_LoadDataCenter,f
  4875  0CFA                     u4084:	
  4876  0CFA  0B89               	decfsz	9,f
  4877  0CFB  2CF9               	goto	u4085
  4878  0CFC  0834               	movf	??_LoadDataCenter,w
  4879  0CFD  3901               	andlw	1
  4880  0CFE  00B5               	movwf	??_LoadDataCenter+1
  4881  0CFF  0835               	movf	??_LoadDataCenter+1,w
  4882  0D00  00AF               	movwf	PCF8574_set_pin@value
  4883  0D01  3001               	movlw	1
  4884  0D02  318B  2374  318C   	fcall	_PCF8574_set_pin
  4885                           
  4886                           ;LCD.h: 32: PCF8574_set_pin(0, 0x1);
  4887  0D05  0020               	movlb	0	; select bank0
  4888  0D06  01AF               	clrf	PCF8574_set_pin@value
  4889  0D07  0AAF               	incf	PCF8574_set_pin@value,f
  4890  0D08  3000               	movlw	0
  4891  0D09  318B  2374  318C   	fcall	_PCF8574_set_pin
  4892                           
  4893                           ;LCD.h: 34: PCF8574_set_pin(0, 0);
  4894  0D0C  0020               	movlb	0	; select bank0
  4895  0D0D  01AF               	clrf	PCF8574_set_pin@value
  4896  0D0E  3000               	movlw	0
  4897  0D0F  318B  2374  318C   	fcall	_PCF8574_set_pin
  4898  0D12  30FF               	movlw	255
  4899  0D13  0020               	movlb	0	; select bank0
  4900  0D14  00B4               	movwf	??_LoadDataCenter
  4901  0D15  0834               	movf	??_LoadDataCenter,w
  4902  0D16  07B7               	addwf	LoadDataCenter@index,f
  4903  0D17  0A37               	incf	LoadDataCenter@index,w
  4904  0D18  1D03               	btfss	3,2
  4905  0D19  2CF5               	goto	l3880
  4906  0D1A                     l3886:	
  4907                           
  4908                           ;LCD.h: 36: }
  4909                           ;LCD.h: 37: PCF8574_set_pin(center_no, 1);
  4910  0D1A  01AF               	clrf	PCF8574_set_pin@value
  4911  0D1B  0AAF               	incf	PCF8574_set_pin@value,f
  4912  0D1C  0836               	movf	LoadDataCenter@center_no,w
  4913  0D1D  318B  2374  318C   	fcall	_PCF8574_set_pin
  4914                           
  4915                           ;LCD.h: 38: PCF8574_set_pin(center_no, 0);
  4916  0D20  0020               	movlb	0	; select bank0
  4917  0D21  01AF               	clrf	PCF8574_set_pin@value
  4918  0D22  0836               	movf	LoadDataCenter@center_no,w
  4919  0D23  318B  2374         	fcall	_PCF8574_set_pin
  4920  0D25  0008               	return
  4921  0D26                     __end_of_LoadDataCenter:	
  4922                           
  4923                           	psect	text28
  4924  0B74                     __ptext28:	
  4925 ;; *************** function _PCF8574_set_pin *****************
  4926 ;; Defined at:
  4927 ;;		line 25 in file "PCF8574.h"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  pin_number      1    wreg     unsigned char 
  4930 ;;  value           1   15[BANK0 ] unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  pin_number      1   18[BANK0 ] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0, pclath, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4942 ;;      Params:         0       1       0       0
  4943 ;;      Locals:         0       1       0       0
  4944 ;;      Temps:          0       2       0       0
  4945 ;;      Totals:         0       4       0       0
  4946 ;;Total ram usage:        4 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    9
  4949 ;; This function calls:
  4950 ;;		_PCF8574_load_data
  4951 ;; This function is called by:
  4952 ;;		_LoadDataCenter
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           
  4957                           ;psect for function _PCF8574_set_pin
  4958  0B74                     _PCF8574_set_pin:	
  4959                           
  4960                           ;incstack = 0
  4961                           ; Regs used in _PCF8574_set_pin: [wreg+status,2+status,0+pclath+cstack]
  4962                           ;PCF8574_set_pin@pin_number stored from wreg
  4963  0B74  0020               	movlb	0	; select bank0
  4964  0B75  00B2               	movwf	PCF8574_set_pin@pin_number
  4965                           
  4966                           ;PCF8574.h: 27: if(value) PCF8574_value |= 1 <<pin_number;
  4967  0B76  082F               	movf	PCF8574_set_pin@value,w
  4968  0B77  1903               	btfsc	3,2
  4969  0B78  2B85               	goto	l3868
  4970  0B79  3001               	movlw	1
  4971  0B7A  00B0               	movwf	??_PCF8574_set_pin
  4972  0B7B  0A32               	incf	PCF8574_set_pin@pin_number,w
  4973  0B7C  2B7E               	goto	u4054
  4974  0B7D                     u4055:	
  4975  0B7D  35B0               	lslf	??_PCF8574_set_pin,f
  4976  0B7E                     u4054:	
  4977  0B7E  0B89               	decfsz	9,f
  4978  0B7F  2B7D               	goto	u4055
  4979  0B80  0830               	movf	??_PCF8574_set_pin,w
  4980  0B81  00B1               	movwf	??_PCF8574_set_pin+1
  4981  0B82  0831               	movf	??_PCF8574_set_pin+1,w
  4982  0B83  04C8               	iorwf	_PCF8574_value,f
  4983  0B84  2B91               	goto	l3870
  4984  0B85                     l3868:	
  4985                           
  4986                           ;PCF8574.h: 28: else PCF8574_value &= ~(1 << pin_number);
  4987  0B85  3001               	movlw	1
  4988  0B86  00B0               	movwf	??_PCF8574_set_pin
  4989  0B87  0A32               	incf	PCF8574_set_pin@pin_number,w
  4990  0B88  2B8A               	goto	u4064
  4991  0B89                     u4065:	
  4992  0B89  35B0               	lslf	??_PCF8574_set_pin,f
  4993  0B8A                     u4064:	
  4994  0B8A  0B89               	decfsz	9,f
  4995  0B8B  2B89               	goto	u4065
  4996  0B8C  0830               	movf	??_PCF8574_set_pin,w
  4997  0B8D  3AFF               	xorlw	255
  4998  0B8E  00B1               	movwf	??_PCF8574_set_pin+1
  4999  0B8F  0831               	movf	??_PCF8574_set_pin+1,w
  5000  0B90  05C8               	andwf	_PCF8574_value,f
  5001  0B91                     l3870:	
  5002                           
  5003                           ;PCF8574.h: 29: PCF8574_load_data(PCF8574_value);
  5004  0B91  0848               	movf	_PCF8574_value,w
  5005  0B92  3189  211C  318B   	fcall	_PCF8574_load_data
  5006                           
  5007                           ;PCF8574.h: 30: _delay((unsigned long)((20)*(8000000/4000000.0)));
  5008  0B95  300D               	movlw	13
  5009  0B96  0020               	movlb	0	; select bank0
  5010  0B97  00B0               	movwf	??_PCF8574_set_pin
  5011  0B98                     u5077:	
  5012  0B98  0BB0               	decfsz	??_PCF8574_set_pin,f
  5013  0B99  2B98               	goto	u5077
  5014  0B9A  0008               	return
  5015  0B9B                     __end_of_PCF8574_set_pin:	
  5016                           
  5017                           	psect	text29
  5018  091C                     __ptext29:	
  5019 ;; *************** function _PCF8574_load_data *****************
  5020 ;; Defined at:
  5021 ;;		line 16 in file "PCF8574.h"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  data            1    wreg     unsigned char 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  data            1    0[COMMON] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0, pclath, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5035 ;;      Params:         0       0       0       0
  5036 ;;      Locals:         0       0       0       0
  5037 ;;      Temps:          0       0       0       0
  5038 ;;      Totals:         0       0       0       0
  5039 ;;Total ram usage:        0 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    8
  5042 ;; This function calls:
  5043 ;;		_I2C_Start
  5044 ;;		_I2C_Stop
  5045 ;;		_I2C_data_send
  5046 ;; This function is called by:
  5047 ;;		_PCF8574_set_pin
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _PCF8574_load_data
  5053  091C                     _PCF8574_load_data:	
  5054                           
  5055                           ;PCF8574.h: 18: I2C_Start();
  5056                           
  5057                           ;incstack = 0
  5058                           ; Regs used in _PCF8574_load_data: [wreg+status,2+status,0+pclath+cstack]
  5059  091C  3188  203D  3189   	fcall	_I2C_Start
  5060                           
  5061                           ;PCF8574.h: 19: I2C_data_send(0x40);
  5062  091F  3040               	movlw	64
  5063  0920  3189  21E9  3189   	fcall	_I2C_data_send
  5064                           
  5065                           ;PCF8574.h: 21: I2C_data_send(PCF8574_value);
  5066  0923  0020               	movlb	0	; select bank0
  5067  0924  0848               	movf	_PCF8574_value,w
  5068  0925  3189  21E9  3189   	fcall	_I2C_data_send
  5069                           
  5070                           ;PCF8574.h: 23: I2C_Stop();
  5071  0928  3188  2044         	fcall	_I2C_Stop
  5072  092A  0008               	return
  5073  092B                     __end_of_PCF8574_load_data:	
  5074                           
  5075                           	psect	text30
  5076  08F1                     __ptext30:	
  5077 ;; *************** function _I2C_initialize *****************
  5078 ;; Defined at:
  5079 ;;		line 146 in file "I2C.h"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0, pclath, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5093 ;;      Params:         0       0       0       0
  5094 ;;      Locals:         0       0       0       0
  5095 ;;      Temps:          0       0       0       0
  5096 ;;      Totals:         0       0       0       0
  5097 ;;Total ram usage:        0 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    8
  5100 ;; This function calls:
  5101 ;;		_DELAY
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _I2C_initialize
  5109  08F1                     _I2C_initialize:	
  5110                           
  5111                           ;I2C.h: 156: SSPM3 = 1;
  5112                           
  5113                           ;incstack = 0
  5114                           ; Regs used in _I2C_initialize: [wreg+status,2+status,0+pclath+cstack]
  5115  08F1  0024               	movlb	4	; select bank4
  5116  08F2  1595               	bsf	21,3	;volatile
  5117                           
  5118                           ;I2C.h: 157: SSPM2 = 0;
  5119  08F3  1115               	bcf	21,2	;volatile
  5120                           
  5121                           ;I2C.h: 158: SSPM1 = 0;
  5122  08F4  1095               	bcf	21,1	;volatile
  5123                           
  5124                           ;I2C.h: 159: SSPM0 = 0;
  5125  08F5  1015               	bcf	21,0	;volatile
  5126                           
  5127                           ;I2C.h: 191: SSPADD = 39;
  5128  08F6  3027               	movlw	39
  5129  08F7  0092               	movwf	18	;volatile
  5130                           
  5131                           ;I2C.h: 197: SSPEN = 1 ;
  5132  08F8  1695               	bsf	21,5	;volatile
  5133                           
  5134                           ;I2C.h: 198: SSP1IF = 0;
  5135  08F9  0020               	movlb	0	; select bank0
  5136  08FA  1191               	bcf	17,3	;volatile
  5137                           
  5138                           ;I2C.h: 199: DELAY(5);
  5139  08FB  3005               	movlw	5
  5140  08FC  3189  21BB         	fcall	_DELAY
  5141  08FE  0008               	return
  5142  08FF                     __end_of_I2C_initialize:	
  5143                           
  5144                           	psect	text31
  5145  0A6B                     __ptext31:	
  5146 ;; *************** function _DS1307_time *****************
  5147 ;; Defined at:
  5148 ;;		line 62 in file "DS1307.h"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5162 ;;      Params:         0       0       0       0
  5163 ;;      Locals:         0       0       0       0
  5164 ;;      Temps:          0       1       0       0
  5165 ;;      Totals:         0       1       0       0
  5166 ;;Total ram usage:        1 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    9
  5169 ;; This function calls:
  5170 ;;		_DS1307_shared_get
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _DS1307_time
  5178  0A6B                     _DS1307_time:	
  5179                           
  5180                           ;DS1307.h: 64: DS1307_shared_get(0, zaman+3);
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _DS1307_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5184  0A6B  30C6               	movlw	(low ((_zaman| 0+3)))& (0+255)
  5185  0A6C  0020               	movlb	0	; select bank0
  5186  0A6D  00B9               	movwf	??_DS1307_time
  5187  0A6E  0839               	movf	??_DS1307_time,w
  5188  0A6F  00B1               	movwf	DS1307_shared_get@reg
  5189  0A70  3000               	movlw	0
  5190  0A71  318F  2721         	fcall	_DS1307_shared_get
  5191                           
  5192                           ;DS1307.h: 65: saat = zaman[3];
  5193  0A73  0021               	movlb	1	; select bank1
  5194  0A74  0846               	movf	(_zaman^(0+128)+3),w
  5195  0A75  0020               	movlb	0	; select bank0
  5196  0A76  00B9               	movwf	??_DS1307_time
  5197  0A77  0839               	movf	??_DS1307_time,w
  5198  0A78  0021               	movlb	1	; select bank1
  5199  0A79  00BE               	movwf	_saat^(0+128)
  5200                           
  5201                           ;DS1307.h: 66: dakika = zaman[4];
  5202  0A7A  0847               	movf	(_zaman^(0+128)+4),w
  5203  0A7B  0020               	movlb	0	; select bank0
  5204  0A7C  00B9               	movwf	??_DS1307_time
  5205  0A7D  0839               	movf	??_DS1307_time,w
  5206  0A7E  0021               	movlb	1	; select bank1
  5207  0A7F  00B5               	movwf	_dakika^(0+128)
  5208                           
  5209                           ;DS1307.h: 67: saniye = zaman[5];
  5210  0A80  0848               	movf	(_zaman^(0+128)+5),w
  5211  0A81  0020               	movlb	0	; select bank0
  5212  0A82  00B9               	movwf	??_DS1307_time
  5213  0A83  0839               	movf	??_DS1307_time,w
  5214  0A84  00D2               	movwf	_saniye
  5215  0A85  0008               	return
  5216  0A86                     __end_of_DS1307_time:	
  5217                           
  5218                           	psect	text32
  5219  0884                     __ptext32:	
  5220 ;; *************** function _DS1307_date *****************
  5221 ;; Defined at:
  5222 ;;		line 70 in file "DS1307.h"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5236 ;;      Params:         0       0       0       0
  5237 ;;      Locals:         0       0       0       0
  5238 ;;      Temps:          0       1       0       0
  5239 ;;      Totals:         0       1       0       0
  5240 ;;Total ram usage:        1 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    9
  5243 ;; This function calls:
  5244 ;;		_DS1307_shared_get
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           
  5251                           ;psect for function _DS1307_date
  5252  0884                     _DS1307_date:	
  5253                           
  5254                           ;DS1307.h: 72: DS1307_shared_get(4, zaman);
  5255                           
  5256                           ;incstack = 0
  5257                           ; Regs used in _DS1307_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5258  0884  30C3               	movlw	(low (_zaman| 0))& (0+255)
  5259  0885  0020               	movlb	0	; select bank0
  5260  0886  00B9               	movwf	??_DS1307_date
  5261  0887  0839               	movf	??_DS1307_date,w
  5262  0888  00B1               	movwf	DS1307_shared_get@reg
  5263  0889  3004               	movlw	4
  5264  088A  318F  2721         	fcall	_DS1307_shared_get
  5265  088C  0008               	return
  5266  088D                     __end_of_DS1307_date:	
  5267                           
  5268                           	psect	text33
  5269  0F21                     __ptext33:	
  5270 ;; *************** function _DS1307_shared_get *****************
  5271 ;; Defined at:
  5272 ;;		line 33 in file "DS1307.h"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  addr            1    wreg     unsigned char 
  5275 ;;  reg             1   17[BANK0 ] PTR unsigned char 
  5276 ;;		 -> zaman(6), 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  addr            1   22[BANK0 ] unsigned char 
  5279 ;;  k               1   23[BANK0 ] char 
  5280 ;;  den             1   24[BANK0 ] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5290 ;;      Params:         0       1       0       0
  5291 ;;      Locals:         0       3       0       0
  5292 ;;      Temps:          0       4       0       0
  5293 ;;      Totals:         0       8       0       0
  5294 ;;Total ram usage:        8 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    8
  5297 ;; This function calls:
  5298 ;;		_I2C_SendACK
  5299 ;;		_I2C_Start
  5300 ;;		_I2C_Stop
  5301 ;;		_I2C_data_receive
  5302 ;;		_I2C_data_send
  5303 ;;		___bmul
  5304 ;; This function is called by:
  5305 ;;		_DS1307_time
  5306 ;;		_DS1307_date
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _DS1307_shared_get
  5312  0F21                     _DS1307_shared_get:	
  5313                           
  5314                           ;incstack = 0
  5315                           ; Regs used in _DS1307_shared_get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5316                           ;DS1307_shared_get@addr stored from wreg
  5317  0F21  0020               	movlb	0	; select bank0
  5318  0F22  00B6               	movwf	DS1307_shared_get@addr
  5319                           
  5320                           ;DS1307.h: 36: I2C_Start();
  5321  0F23  3188  203D  318F   	fcall	_I2C_Start
  5322                           
  5323                           ;DS1307.h: 37: I2C_data_send(0b11010000);
  5324  0F26  30D0               	movlw	208
  5325  0F27  3189  21E9  318F   	fcall	_I2C_data_send
  5326                           
  5327                           ;DS1307.h: 38: I2C_data_send(addr);
  5328  0F2A  0020               	movlb	0	; select bank0
  5329  0F2B  0836               	movf	DS1307_shared_get@addr,w
  5330  0F2C  3189  21E9  318F   	fcall	_I2C_data_send
  5331                           
  5332                           ;DS1307.h: 40: I2C_Stop();
  5333  0F2F  3188  2044  318F   	fcall	_I2C_Stop
  5334                           
  5335                           ;DS1307.h: 42: I2C_Start();
  5336  0F32  3188  203D  318F   	fcall	_I2C_Start
  5337                           
  5338                           ;DS1307.h: 43: I2C_data_send(0b11010001);
  5339  0F35  30D1               	movlw	209
  5340  0F36  3189  21E9  318F   	fcall	_I2C_data_send
  5341                           
  5342                           ;DS1307.h: 44: byte den;
  5343                           ;DS1307.h: 45: for(signed char k=2; k !=-1; k--)
  5344  0F39  3002               	movlw	2
  5345  0F3A  0020               	movlb	0	; select bank0
  5346  0F3B  00B2               	movwf	??_DS1307_shared_get
  5347  0F3C  0832               	movf	??_DS1307_shared_get,w
  5348  0F3D  00B7               	movwf	DS1307_shared_get@k
  5349  0F3E  0A37               	incf	DS1307_shared_get@k,w
  5350  0F3F  1903               	btfsc	3,2
  5351  0F40  2F89               	goto	l4052
  5352  0F41                     l4034:	
  5353                           
  5354                           ;DS1307.h: 46: {
  5355                           ;DS1307.h: 47: den = I2C_data_receive();
  5356  0F41  3188  20B4  318F   	fcall	_I2C_data_receive
  5357  0F44  0020               	movlb	0	; select bank0
  5358  0F45  00B2               	movwf	??_DS1307_shared_get
  5359  0F46  0832               	movf	??_DS1307_shared_get,w
  5360  0F47  00B8               	movwf	DS1307_shared_get@den
  5361                           
  5362                           ;DS1307.h: 48: if(k == 0)
  5363  0F48  0837               	movf	DS1307_shared_get@k,w
  5364  0F49  1D03               	btfss	3,2
  5365  0F4A  2F5B               	goto	l4040
  5366                           
  5367                           ;DS1307.h: 49: den = ((den>>4)&0b11)*10 + (den&0xf);
  5368  0F4B  300F               	movlw	15
  5369  0F4C  0538               	andwf	DS1307_shared_get@den,w
  5370  0F4D  00B2               	movwf	??_DS1307_shared_get
  5371  0F4E  300A               	movlw	10
  5372  0F4F  00B3               	movwf	??_DS1307_shared_get+1
  5373  0F50  0833               	movf	??_DS1307_shared_get+1,w
  5374  0F51  00AD               	movwf	___bmul@multiplicand
  5375  0F52  0838               	movf	DS1307_shared_get@den,w
  5376  0F53  00B4               	movwf	??_DS1307_shared_get+2
  5377  0F54  3004               	movlw	4
  5378  0F55                     u4285:	
  5379  0F55  36B4               	lsrf	??_DS1307_shared_get+2,f
  5380  0F56  0B89               	decfsz	9,f
  5381  0F57  2F55               	goto	u4285
  5382  0F58  0834               	movf	??_DS1307_shared_get+2,w
  5383  0F59  3903               	andlw	3
  5384  0F5A  2F69               	goto	L6
  5385  0F5B                     l4040:	
  5386                           
  5387                           ;DS1307.h: 50: else den = (den >>4)*10 + (den&0xf);
  5388  0F5B  300F               	movlw	15
  5389  0F5C  0538               	andwf	DS1307_shared_get@den,w
  5390  0F5D  00B2               	movwf	??_DS1307_shared_get
  5391  0F5E  300A               	movlw	10
  5392  0F5F  00B3               	movwf	??_DS1307_shared_get+1
  5393  0F60  0833               	movf	??_DS1307_shared_get+1,w
  5394  0F61  00AD               	movwf	___bmul@multiplicand
  5395  0F62  0838               	movf	DS1307_shared_get@den,w
  5396  0F63  00B4               	movwf	??_DS1307_shared_get+2
  5397  0F64  3004               	movlw	4
  5398  0F65                     u4295:	
  5399  0F65  36B4               	lsrf	??_DS1307_shared_get+2,f
  5400  0F66  0B89               	decfsz	9,f
  5401  0F67  2F65               	goto	u4295
  5402  0F68  0834               	movf	??_DS1307_shared_get+2,w
  5403  0F69                     L6:	
  5404  0F69  3189  216D  318F   	fcall	___bmul
  5405  0F6C  0020               	movlb	0	; select bank0
  5406  0F6D  0732               	addwf	??_DS1307_shared_get,w
  5407  0F6E  00B5               	movwf	??_DS1307_shared_get+3
  5408  0F6F  0835               	movf	??_DS1307_shared_get+3,w
  5409  0F70  00B8               	movwf	DS1307_shared_get@den
  5410                           
  5411                           ;DS1307.h: 51: reg[k] = den;
  5412  0F71  0838               	movf	DS1307_shared_get@den,w
  5413  0F72  00B2               	movwf	??_DS1307_shared_get
  5414  0F73  0837               	movf	DS1307_shared_get@k,w
  5415  0F74  0731               	addwf	DS1307_shared_get@reg,w
  5416  0F75  00B3               	movwf	??_DS1307_shared_get+1
  5417  0F76  0833               	movf	??_DS1307_shared_get+1,w
  5418  0F77  0086               	movwf	6
  5419  0F78  0187               	clrf	7
  5420  0F79  0832               	movf	??_DS1307_shared_get,w
  5421  0F7A  0081               	movwf	1
  5422                           
  5423                           ;DS1307.h: 52: if(k!=0)
  5424  0F7B  0837               	movf	DS1307_shared_get@k,w
  5425  0F7C  1903               	btfsc	3,2
  5426  0F7D  2F81               	goto	l4048
  5427                           
  5428                           ;DS1307.h: 54: I2C_SendACK();
  5429  0F7E  3188  206B  318F   	fcall	_I2C_SendACK
  5430  0F81                     l4048:	
  5431  0F81  30FF               	movlw	255
  5432  0F82  0020               	movlb	0	; select bank0
  5433  0F83  00B2               	movwf	??_DS1307_shared_get
  5434  0F84  0832               	movf	??_DS1307_shared_get,w
  5435  0F85  07B7               	addwf	DS1307_shared_get@k,f
  5436  0F86  0A37               	incf	DS1307_shared_get@k,w
  5437  0F87  1D03               	btfss	3,2
  5438  0F88  2F41               	goto	l4034
  5439  0F89                     l4052:	
  5440                           
  5441                           ;DS1307.h: 55: }
  5442                           ;DS1307.h: 57: I2C_Stop();
  5443  0F89  3188  2044         	fcall	_I2C_Stop
  5444  0F8B  0008               	return
  5445  0F8C                     __end_of_DS1307_shared_get:	
  5446                           
  5447                           	psect	text34
  5448  096D                     __ptext34:	
  5449 ;; *************** function ___bmul *****************
  5450 ;; Defined at:
  5451 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  multiplier      1    wreg     unsigned char 
  5454 ;;  multiplicand    1   13[BANK0 ] unsigned char 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  multiplier      1   16[BANK0 ] unsigned char 
  5457 ;;  product         1   15[BANK0 ] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      unsigned char 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5467 ;;      Params:         0       1       0       0
  5468 ;;      Locals:         0       2       0       0
  5469 ;;      Temps:          0       1       0       0
  5470 ;;      Totals:         0       4       0       0
  5471 ;;Total ram usage:        4 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    7
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_DS1307_shared_get
  5478 ;;		_showAlarmMessage
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function ___bmul
  5484  096D                     ___bmul:	
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5488                           ;___bmul@multiplier stored from wreg
  5489  096D  0020               	movlb	0	; select bank0
  5490  096E  00B0               	movwf	___bmul@multiplier
  5491  096F  01AF               	clrf	___bmul@product
  5492  0970                     l4002:	
  5493  0970  1C30               	btfss	___bmul@multiplier,0
  5494  0971  2976               	goto	l4006
  5495  0972  082D               	movf	___bmul@multiplicand,w
  5496  0973  00AE               	movwf	??___bmul
  5497  0974  082E               	movf	??___bmul,w
  5498  0975  07AF               	addwf	___bmul@product,f
  5499  0976                     l4006:	
  5500  0976  1003               	clrc
  5501  0977  0DAD               	rlf	___bmul@multiplicand,f
  5502  0978  1003               	clrc
  5503  0979  0CB0               	rrf	___bmul@multiplier,f
  5504  097A  0830               	movf	___bmul@multiplier,w
  5505  097B  1D03               	btfss	3,2
  5506  097C  2970               	goto	l4002
  5507  097D  082F               	movf	___bmul@product,w
  5508  097E  0008               	return
  5509  097F                     __end_of___bmul:	
  5510                           
  5511                           	psect	text35
  5512  09E9                     __ptext35:	
  5513 ;; *************** function _I2C_data_send *****************
  5514 ;; Defined at:
  5515 ;;		line 234 in file "I2C.h"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  data            1    wreg     unsigned char 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  data            1   14[BANK0 ] unsigned char 
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5529 ;;      Params:         0       0       0       0
  5530 ;;      Locals:         0       1       0       0
  5531 ;;      Temps:          0       1       0       0
  5532 ;;      Totals:         0       2       0       0
  5533 ;;Total ram usage:        2 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    7
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_DS1307_shared_get
  5540 ;;		_PCF8574_load_data
  5541 ;;		_Generic_read_byte
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           
  5546                           ;psect for function _I2C_data_send
  5547  09E9                     _I2C_data_send:	
  5548                           
  5549                           ;incstack = 0
  5550                           ; Regs used in _I2C_data_send: [wreg+status,2+status,0]
  5551                           ;I2C_data_send@data stored from wreg
  5552  09E9  0020               	movlb	0	; select bank0
  5553  09EA  00AE               	movwf	I2C_data_send@data
  5554                           
  5555                           ;I2C.h: 282: SSP1IF = 0;
  5556  09EB  1191               	bcf	17,3	;volatile
  5557                           
  5558                           ;I2C.h: 285: SSPBUF = data ;
  5559  09EC  082E               	movf	I2C_data_send@data,w
  5560  09ED  0024               	movlb	4	; select bank4
  5561  09EE  0091               	movwf	17	;volatile
  5562  09EF                     l208:	
  5563                           ;I2C.h: 286: while (BF);
  5564                           
  5565  09EF  1C14               	btfss	20,0	;volatile
  5566  09F0  29FB               	goto	l211
  5567  09F1  29EF               	goto	l208
  5568  09F2                     l3850:	
  5569                           ;I2C.h: 301: while(SSP1IF ==0){unnecessary++; if(unnecessary == 200)break;};
  5570                           
  5571  09F2  3001               	movlw	1
  5572  09F3  0020               	movlb	0	; select bank0
  5573  09F4  00AD               	movwf	??_I2C_data_send
  5574  09F5  082D               	movf	??_I2C_data_send,w
  5575  09F6  07D8               	addwf	_unnecessary,f
  5576  09F7  30C8               	movlw	200
  5577  09F8  0658               	xorwf	_unnecessary,w
  5578  09F9  1903               	btfsc	3,2
  5579  09FA  29FE               	goto	l214
  5580  09FB                     l211:	
  5581  09FB  0020               	movlb	0	; select bank0
  5582  09FC  1D91               	btfss	17,3	;volatile
  5583  09FD  29F2               	goto	l3850
  5584  09FE                     l214:	
  5585                           
  5586                           ;I2C.h: 302: SSP1IF = 0;
  5587  09FE  1191               	bcf	17,3	;volatile
  5588                           
  5589                           ;I2C.h: 303: unnecessary = 0;
  5590  09FF  01D8               	clrf	_unnecessary
  5591  0A00  0008               	return
  5592  0A01                     __end_of_I2C_data_send:	
  5593                           
  5594                           	psect	text36
  5595  08B4                     __ptext36:	
  5596 ;; *************** function _I2C_data_receive *****************
  5597 ;; Defined at:
  5598 ;;		line 221 in file "I2C.h"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;		None
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      unsigned char 
  5605 ;; Registers used:
  5606 ;;		wreg
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5612 ;;      Params:         0       0       0       0
  5613 ;;      Locals:         0       0       0       0
  5614 ;;      Temps:          0       0       0       0
  5615 ;;      Totals:         0       0       0       0
  5616 ;;Total ram usage:        0 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    7
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_DS1307_shared_get
  5623 ;;		_Generic_read_byte
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _I2C_data_receive
  5629  08B4                     _I2C_data_receive:	
  5630                           
  5631                           ;I2C.h: 223: RCEN = 1;
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in _I2C_data_receive: [wreg]
  5635  08B4  0024               	movlb	4	; select bank4
  5636  08B5  1596               	bsf	22,3	;volatile
  5637  08B6                     l197:	
  5638                           ;I2C.h: 225: while(BF == 0 );
  5639                           
  5640  08B6  1C14               	btfss	20,0	;volatile
  5641  08B7  28B6               	goto	l197
  5642  08B8                     l200:	
  5643                           ;I2C.h: 226: while(SSP1IF==0);
  5644                           
  5645  08B8  0020               	movlb	0	; select bank0
  5646  08B9  1D91               	btfss	17,3	;volatile
  5647  08BA  28B8               	goto	l200
  5648                           
  5649                           ;I2C.h: 227: SSP1IF = 0;
  5650  08BB  1191               	bcf	17,3	;volatile
  5651                           
  5652                           ;I2C.h: 228: return SSPBUF;
  5653  08BC  0024               	movlb	4	; select bank4
  5654  08BD  0811               	movf	17,w	;volatile
  5655  08BE  0008               	return
  5656  08BF                     __end_of_I2C_data_receive:	
  5657                           
  5658                           	psect	text37
  5659  0844                     __ptext37:	
  5660 ;; *************** function _I2C_Stop *****************
  5661 ;; Defined at:
  5662 ;;		line 347 in file "I2C.h"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		None
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5676 ;;      Params:         0       0       0       0
  5677 ;;      Locals:         0       0       0       0
  5678 ;;      Temps:          0       0       0       0
  5679 ;;      Totals:         0       0       0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    7
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_DS1307_shared_get
  5687 ;;		_PCF8574_load_data
  5688 ;;		_Generic_read_byte
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           
  5693                           ;psect for function _I2C_Stop
  5694  0844                     _I2C_Stop:	
  5695                           
  5696                           ;I2C.h: 349: PEN = 1;
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _I2C_Stop: []
  5700  0844  0024               	movlb	4	; select bank4
  5701  0845  1516               	bsf	22,2	;volatile
  5702  0846                     l230:	
  5703                           ;I2C.h: 350: while(PEN);
  5704                           
  5705  0846  1916               	btfsc	22,2	;volatile
  5706  0847  2846               	goto	l230
  5707                           
  5708                           ;I2C.h: 352: SSP1IF = 0;
  5709  0848  0020               	movlb	0	; select bank0
  5710  0849  1191               	bcf	17,3	;volatile
  5711  084A  0008               	return
  5712  084B                     __end_of_I2C_Stop:	
  5713                           
  5714                           	psect	text38
  5715  083D                     __ptext38:	
  5716 ;; *************** function _I2C_Start *****************
  5717 ;; Defined at:
  5718 ;;		line 203 in file "I2C.h"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;		None
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      void 
  5725 ;; Registers used:
  5726 ;;		None
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5732 ;;      Params:         0       0       0       0
  5733 ;;      Locals:         0       0       0       0
  5734 ;;      Temps:          0       0       0       0
  5735 ;;      Totals:         0       0       0       0
  5736 ;;Total ram usage:        0 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    7
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_DS1307_shared_get
  5743 ;;		_PCF8574_load_data
  5744 ;;		_Generic_read_byte
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _I2C_Start
  5750  083D                     _I2C_Start:	
  5751                           
  5752                           ;I2C.h: 206: SEN = 1;
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _I2C_Start: []
  5756  083D  0024               	movlb	4	; select bank4
  5757  083E  1416               	bsf	22,0	;volatile
  5758  083F                     l191:	
  5759                           ;I2C.h: 209: while ( SEN);
  5760                           
  5761  083F  1816               	btfsc	22,0	;volatile
  5762  0840  283F               	goto	l191
  5763                           
  5764                           ;I2C.h: 210: SSP1IF = 0;
  5765  0841  0020               	movlb	0	; select bank0
  5766  0842  1191               	bcf	17,3	;volatile
  5767  0843  0008               	return
  5768  0844                     __end_of_I2C_Start:	
  5769                           
  5770                           	psect	text39
  5771  086B                     __ptext39:	
  5772 ;; *************** function _I2C_SendACK *****************
  5773 ;; Defined at:
  5774 ;;		line 310 in file "I2C.h"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		None
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5788 ;;      Params:         0       0       0       0
  5789 ;;      Locals:         0       0       0       0
  5790 ;;      Temps:          0       0       0       0
  5791 ;;      Totals:         0       0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    7
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_DS1307_shared_get
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _I2C_SendACK
  5804  086B                     _I2C_SendACK:	
  5805                           
  5806                           ;I2C.h: 317: ACKDT = 0 ;
  5807                           
  5808                           ;incstack = 0
  5809                           ; Regs used in _I2C_SendACK: []
  5810  086B  0024               	movlb	4	; select bank4
  5811  086C  1296               	bcf	22,5	;volatile
  5812                           
  5813                           ;I2C.h: 318: ACKEN = 1;
  5814  086D  1616               	bsf	22,4	;volatile
  5815  086E                     l218:	
  5816                           ;I2C.h: 319: while (ACKEN);
  5817                           
  5818  086E  1A16               	btfsc	22,4	;volatile
  5819  086F  286E               	goto	l218
  5820                           
  5821                           ;I2C.h: 320: SSP1IF = 0;
  5822  0870  0020               	movlb	0	; select bank0
  5823  0871  1191               	bcf	17,3	;volatile
  5824  0872  0008               	return
  5825  0873                     __end_of_I2C_SendACK:	
  5826                           
  5827                           	psect	text40
  5828  0751                     __ptext40:	
  5829 ;; *************** function _DHT11_get_data *****************
  5830 ;; Defined at:
  5831 ;;		line 27 in file "DHT11Sensor.h"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  a               1   19[BANK0 ] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5845 ;;      Params:         0       0       0       0
  5846 ;;      Locals:         0       1       0       0
  5847 ;;      Temps:          0       2       0       0
  5848 ;;      Totals:         0       3       0       0
  5849 ;;Total ram usage:        3 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    8
  5852 ;; This function calls:
  5853 ;;		_DELAY
  5854 ;; This function is called by:
  5855 ;;		_main
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function _DHT11_get_data
  5861  0751                     _DHT11_get_data:	
  5862                           
  5863                           ;DHT11Sensor.h: 29: for(byte a = 0 ; a < 5 ; a++) dht11_data[a] = 0;
  5864                           
  5865                           ;incstack = 0
  5866                           ; Regs used in _DHT11_get_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5867  0751  0020               	movlb	0	; select bank0
  5868  0752  01B3               	clrf	DHT11_get_data@a
  5869  0753  3005               	movlw	5
  5870  0754  0233               	subwf	DHT11_get_data@a,w
  5871  0755  1803               	btfsc	3,0
  5872  0756  2F64               	goto	l4456
  5873  0757                     l4450:	
  5874  0757  0833               	movf	DHT11_get_data@a,w
  5875  0758  3EA0               	addlw	(low (_dht11_data| 0))& (0+255)
  5876  0759  0086               	movwf	6
  5877  075A  0187               	clrf	7
  5878  075B  0181               	clrf	1
  5879  075C  3001               	movlw	1
  5880  075D  00B1               	movwf	??_DHT11_get_data
  5881  075E  0831               	movf	??_DHT11_get_data,w
  5882  075F  07B3               	addwf	DHT11_get_data@a,f
  5883  0760  3005               	movlw	5
  5884  0761  0233               	subwf	DHT11_get_data@a,w
  5885  0762  1C03               	skipc
  5886  0763  2F57               	goto	l4450
  5887  0764                     l4456:	
  5888                           
  5889                           ;DHT11Sensor.h: 30: temp = 0;
  5890  0764  0021               	movlb	1	; select bank1
  5891  0765  01C0               	clrf	_temp^(0+128)
  5892  0766  0021               	banksel	_byte_index	;# 
  5893  0767  3005               	movlw	5	;# 
  5894  0768  00B1               	movwf	_byte_index& (0+127)	;# 
  5895                           
  5896                           ;DHT11Sensor.h: 42: TRISA4 = 1;
  5897  0769  0021               	movlb	1	; select bank1
  5898  076A  160C               	bsf	12,4	;volatile
  5899                           
  5900                           ;DHT11Sensor.h: 43: DELAY(200);
  5901  076B  30C8               	movlw	200
  5902  076C  3189  21BB  3187   	fcall	_DELAY
  5903                           
  5904                           ;DHT11Sensor.h: 45: RA4 = 0;
  5905  076F  0020               	movlb	0	; select bank0
  5906  0770  120C               	bcf	12,4	;volatile
  5907                           
  5908                           ;DHT11Sensor.h: 46: TRISA4 = 0;
  5909  0771  0021               	movlb	1	; select bank1
  5910  0772  120C               	bcf	12,4	;volatile
  5911                           
  5912                           ;DHT11Sensor.h: 47: _delay((unsigned long)((20)*(8000000/4000.0)));
  5913  0773  3034               	movlw	52
  5914  0774  0020               	movlb	0	; select bank0
  5915  0775  00B2               	movwf	??_DHT11_get_data+1
  5916  0776  30F1               	movlw	241
  5917  0777  00B1               	movwf	??_DHT11_get_data
  5918  0778                     u5087:	
  5919  0778  0BB1               	decfsz	??_DHT11_get_data,f
  5920  0779  2F78               	goto	u5087
  5921  077A  0BB2               	decfsz	??_DHT11_get_data+1,f
  5922  077B  2F78               	goto	u5087
  5923  077C  3200               	nop2
  5924                           
  5925                           ;DHT11Sensor.h: 48: TRISA4 = 1;
  5926  077D  0021               	movlb	1	; select bank1
  5927  077E  160C               	bsf	12,4	;volatile
  5928                           
  5929                           ;DHT11Sensor.h: 49: _delay((unsigned long)((50)*(8000000/4000000.0)));
  5930  077F  3021               	movlw	33
  5931  0780  0020               	movlb	0	; select bank0
  5932  0781  00B1               	movwf	??_DHT11_get_data
  5933  0782                     u5097:	
  5934  0782  0BB1               	decfsz	??_DHT11_get_data,f
  5935  0783  2F82               	goto	u5097
  5936  0784  0020               	banksel	12	;# 
  5937  0785  168C               	bsf	12,5	;# 
  5938  0786  128C               	bcf	12,5	;# 
  5939  0787                     loop6:	
  5940                           
  5941                           ;# 
  5942  0787  1E0C               	btfss	12,4	;# 
  5943  0788  2F87               	goto	loop6	;# 
  5944  0789                     loop7:	
  5945                           
  5946                           ;# 
  5947  0789  1A0C               	btfsc	12,4	;# 
  5948  078A  2F89               	goto	loop7	;# 
  5949  078B                     main_loop:	
  5950                           
  5951                           ;# 
  5952  078B  0021               	banksel	_bit_index	;# 
  5953  078C  17B0               	bsf	_bit_index& (0+127),7	;# 
  5954  078D  0021               	banksel	_var	;# 
  5955  078E  3008               	movlw	8	;# 
  5956  078F  00C2               	movwf	_var& (0+127)	;# 
  5957  0790                     for1:	
  5958  0790                     loop1:	
  5959                           ;# 
  5960                           
  5961                           
  5962                           ;# 
  5963  0790  0021               	banksel	_low_time_count	; ;# 
  5964  0791  0ABC               	incf	_low_time_count& (0+127),f	; ;# 
  5965  0792  0020               	banksel	12	; ;# 
  5966  0793  1E0C               	btfss	12,4	; ;# 
  5967  0794  2F90               	goto	loop1	; ;# 
  5968  0795                     loop2:	
  5969                           
  5970                           ;# 
  5971  0795  0021               	banksel	_high_time_count	; ;# 
  5972  0796  0ABA               	incf	_high_time_count& (0+127),f	; ;# 
  5973  0797  0020               	banksel	12	; ;# 
  5974  0798  1A0C               	btfsc	12,4	; ;# 
  5975  0799  2F95               	goto	loop2	; ;# 
  5976  079A  0021               	banksel	_high_time_count	;# 
  5977  079B  083A               	movf	_high_time_count& (0+127),w	;# 
  5978  079C  0021               	banksel	_low_time_count	;# 
  5979  079D  023C               	subwf	_low_time_count& (0+127),w	;# 
  5980  079E  1803               	btfsc	3,0	; ;# 
  5981  079F  2FA7               	goto	devam	; ;# 
  5982  07A0  0020               	banksel	12	;# 
  5983  07A1  168C               	bsf	12,5	;# 
  5984  07A2  128C               	bcf	12,5	;# 
  5985  07A3  0021               	banksel	_bit_index	;# 
  5986  07A4  0830               	movf	_bit_index& (0+127),w	;# 
  5987  07A5  0021               	banksel	_temp	;# 
  5988  07A6  04C0               	iorwf	_temp& (0+127),f	;# 
  5989  07A7                     devam:	
  5990                           
  5991                           ;# 
  5992  07A7  0021               	banksel	_low_time_count	;# 
  5993  07A8  01BC               	clrf	_low_time_count& (0+127)	;# 
  5994  07A9  0021               	banksel	_high_time_count	;# 
  5995  07AA  01BA               	clrf	_high_time_count& (0+127)	;# 
  5996  07AB  0021               	banksel	_bit_index	;# 
  5997  07AC  1003               	bcf	3,0	;# 
  5998  07AD  0CB0               	rrf	_bit_index& (0+127),f	;# 
  5999  07AE  0021               	banksel	_var	;# 
  6000  07AF  0BC2               	decfsz	_var& (0+127),f	;# 
  6001  07B0  2F90               	goto	for1	;# 
  6002                           
  6003                           ;DHT11Sensor.h: 170: dht11_data[byte_index-1] = temp;
  6004  07B1  0021               	movlb	1	; select bank1
  6005  07B2  0840               	movf	_temp^(0+128),w
  6006  07B3  0020               	movlb	0	; select bank0
  6007  07B4  00B1               	movwf	??_DHT11_get_data
  6008  07B5  0021               	movlb	1	; select bank1
  6009  07B6  0831               	movf	_byte_index^(0+128),w
  6010  07B7  3EFF               	addlw	255
  6011  07B8  3EA0               	addlw	(low (_dht11_data| 0))& (0+255)
  6012  07B9  0086               	movwf	6
  6013  07BA  0187               	clrf	7
  6014  07BB  0020               	movlb	0	; select bank0
  6015  07BC  0831               	movf	??_DHT11_get_data,w
  6016  07BD  0081               	movwf	1
  6017  07BE  0021               	banksel	_temp	;# 
  6018  07BF  01C0               	clrf	_temp& (0+127)	;# 
  6019  07C0  0021               	banksel	_byte_index	;# 
  6020  07C1  0BB1               	decfsz	_byte_index& (0+127),f	;# 
  6021  07C2  2F8B               	goto	main_loop	; ;# 
  6022                           
  6023                           ;DHT11Sensor.h: 189: sicaklik = dht11_data[2];
  6024  07C3  0021               	movlb	1	; select bank1
  6025  07C4  0822               	movf	(_dht11_data^(0+128)+2),w
  6026  07C5  0020               	movlb	0	; select bank0
  6027  07C6  00B1               	movwf	??_DHT11_get_data
  6028  07C7  0831               	movf	??_DHT11_get_data,w
  6029  07C8  00D3               	movwf	_sicaklik
  6030                           
  6031                           ;DHT11Sensor.h: 190: nem = dht11_data[4];
  6032  07C9  0021               	movlb	1	; select bank1
  6033  07CA  0824               	movf	(_dht11_data^(0+128)+4),w
  6034  07CB  0020               	movlb	0	; select bank0
  6035  07CC  00B1               	movwf	??_DHT11_get_data
  6036  07CD  0831               	movf	??_DHT11_get_data,w
  6037  07CE  00D0               	movwf	_nem
  6038  07CF  0008               	return
  6039  07D0                     __end_of_DHT11_get_data:	
  6040                           
  6041                           	psect	text41
  6042  097F                     __ptext41:	
  6043 ;; *************** function _ADC_init *****************
  6044 ;; Defined at:
  6045 ;;		line 23 in file "ADC.h"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0, pclath, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6059 ;;      Params:         0       0       0       0
  6060 ;;      Locals:         0       0       0       0
  6061 ;;      Temps:          0       0       0       0
  6062 ;;      Totals:         0       0       0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    8
  6066 ;; This function calls:
  6067 ;;		_DELAY
  6068 ;; This function is called by:
  6069 ;;		_main
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _ADC_init
  6075  097F                     _ADC_init:	
  6076                           
  6077                           ;ADC.h: 32: CHS3 = 0;
  6078                           
  6079                           ;incstack = 0
  6080                           ; Regs used in _ADC_init: [wreg+status,2+status,0+pclath+cstack]
  6081  097F  0021               	movlb	1	; select bank1
  6082  0980  129D               	bcf	29,5	;volatile
  6083                           
  6084                           ;ADC.h: 33: CHS2 = 0;
  6085  0981  121D               	bcf	29,4	;volatile
  6086                           
  6087                           ;ADC.h: 34: CHS1 = 1;
  6088  0982  159D               	bsf	29,3	;volatile
  6089                           
  6090                           ;ADC.h: 35: CHS0 = 1;
  6091  0983  151D               	bsf	29,2	;volatile
  6092                           
  6093                           ;ADC.h: 38: ADFM = 1;
  6094  0984  179E               	bsf	30,7	;volatile
  6095                           
  6096                           ;ADC.h: 41: ADCS2 = 1;
  6097  0985  171E               	bsf	30,6	;volatile
  6098                           
  6099                           ;ADC.h: 42: ADCS1 = 1;
  6100  0986  169E               	bsf	30,5	;volatile
  6101                           
  6102                           ;ADC.h: 43: ADCS0 = 0;
  6103  0987  121E               	bcf	30,4	;volatile
  6104                           
  6105                           ;ADC.h: 44: DELAY(15);
  6106  0988  300F               	movlw	15
  6107  0989  3189  21BB  3189   	fcall	_DELAY
  6108                           
  6109                           ;ADC.h: 45: ADON = 1;
  6110  098C  0021               	movlb	1	; select bank1
  6111  098D  141D               	bsf	29,0	;volatile
  6112                           
  6113                           ;ADC.h: 46: DELAY(15);
  6114  098E  300F               	movlw	15
  6115  098F  3189  21BB         	fcall	_DELAY
  6116  0991  0008               	return
  6117  0992                     __end_of_ADC_init:	
  6118                           
  6119                           	psect	text42
  6120  09BB                     __ptext42:	
  6121 ;; *************** function _DELAY *****************
  6122 ;; Defined at:
  6123 ;;		line 14 in file "PoemCircuit.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  number          1    wreg     unsigned char 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  number          1   15[BANK0 ] unsigned char 
  6128 ;;  k               1   16[BANK0 ] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      void 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6138 ;;      Params:         0       0       0       0
  6139 ;;      Locals:         0       2       0       0
  6140 ;;      Temps:          0       2       0       0
  6141 ;;      Totals:         0       4       0       0
  6142 ;;Total ram usage:        4 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    7
  6145 ;; This function calls:
  6146 ;;		Nothing
  6147 ;; This function is called by:
  6148 ;;		_I2C_initialize
  6149 ;;		_lcd_info
  6150 ;;		_lcd_write
  6151 ;;		_LCD_init
  6152 ;;		_Generic_read_byte
  6153 ;;		_ADC_init
  6154 ;;		_ADC_read
  6155 ;;		_DHT11_get_data
  6156 ;;		_main
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function _DELAY
  6162  09BB                     _DELAY:	
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in _DELAY: [wreg+status,2+status,0]
  6166                           ;DELAY@number stored from wreg
  6167  09BB  0020               	movlb	0	; select bank0
  6168  09BC  00AF               	movwf	DELAY@number
  6169                           
  6170                           ;PoemCircuit.c: 16: for(byte k=0; k != number; k++)
  6171  09BD  01B0               	clrf	DELAY@k
  6172  09BE                     l3894:	
  6173  09BE  0830               	movf	DELAY@k,w
  6174  09BF  062F               	xorwf	DELAY@number,w
  6175  09C0  1903               	btfsc	3,2
  6176  09C1  0008               	return
  6177                           
  6178                           ;PoemCircuit.c: 17: _delay((unsigned long)((1)*(8000000/4000.0)));
  6179  09C2  3003               	movlw	3
  6180  09C3  00AE               	movwf	??_DELAY+1
  6181  09C4  3097               	movlw	151
  6182  09C5  00AD               	movwf	??_DELAY
  6183  09C6                     u5107:	
  6184  09C6  0BAD               	decfsz	??_DELAY,f
  6185  09C7  29C6               	goto	u5107
  6186  09C8  0BAE               	decfsz	??_DELAY+1,f
  6187  09C9  29C6               	goto	u5107
  6188  09CA  3200               	nop2
  6189  09CB  3001               	movlw	1
  6190  09CC  0020               	movlb	0	; select bank0
  6191  09CD  00AD               	movwf	??_DELAY
  6192  09CE  082D               	movf	??_DELAY,w
  6193  09CF  07B0               	addwf	DELAY@k,f
  6194  09D0  29BE               	goto	l3894
  6195  09D1                     __end_of_DELAY:	
  6196                           
  6197                           	psect	intentry
  6198  0004                     __pintentry:	
  6199 ;; *************** function _FNC *****************
  6200 ;; Defined at:
  6201 ;;		line 77 in file "INTERRUPT.h"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;		None
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  temp2           1   11[BANK0 ] unsigned char 
  6206 ;;  l               1   12[BANK0 ] PTR unsigned char 
  6207 ;;		 -> measured_adc_value(2), 
  6208 ;;  m_id            1    7[BANK0 ] unsigned char 
  6209 ;;  leng            1   10[BANK0 ] unsigned char 
  6210 ;;  message_coun    1    9[BANK0 ] unsigned char 
  6211 ;;  mes_id          1    8[BANK0 ] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6221 ;;      Params:         0       0       0       0
  6222 ;;      Locals:         0       6       0       0
  6223 ;;      Temps:          0       5       0       0
  6224 ;;      Totals:         0      11       0       0
  6225 ;;Total ram usage:       11 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    6
  6228 ;; This function calls:
  6229 ;;		_DS1307_set_shared
  6230 ;;		_EEPROM24C32_write_byte
  6231 ;;		_EEPROM24C64_write_byte
  6232 ;;		_EEPROM_WriteByte
  6233 ;;		_UART_byte_receive
  6234 ;;		_commondUART
  6235 ;;		_pinControl
  6236 ;;		_receiveStruct
  6237 ;;		_sendT
  6238 ;;		i1_ADC_read
  6239 ;;		i1_EEPROM24C32_read_byte
  6240 ;;		i1_EEPROM_ReadByte
  6241 ;;		i1_LoadDataCenter
  6242 ;;		i1___bmul
  6243 ;;		i1___wmul
  6244 ;;		i1_shift_reg_set_pin_lcd
  6245 ;; This function is called by:
  6246 ;;		Interrupt level 1
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250  0004                     _FNC:	
  6251                           
  6252                           ;incstack = 0
  6253 ;; hardware stack exceeded
  6254                           ; Regs used in _FNC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6255  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6256  0005  3180               	pagesel	$
  6257  0006  0020               	movlb	0	; select bank0
  6258  0007  087F               	movf	127,w
  6259  0008  00A6               	movwf	??_FNC+4
  6260                           
  6261                           ;INTERRUPT.h: 81: if(RCIF)
  6262  0009  1E91               	btfss	17,5	;volatile
  6263  000A  2C2E               	goto	i1l3700
  6264                           
  6265                           ;INTERRUPT.h: 82: {
  6266                           ;INTERRUPT.h: 83: komut = UART_byte_receive();
  6267  000B  3188  201D  3180   	fcall	_UART_byte_receive
  6268  000E  0020               	movlb	0	; select bank0
  6269  000F  00A2               	movwf	??_FNC
  6270  0010  0822               	movf	??_FNC,w
  6271  0011  00CF               	movwf	_komut
  6272                           
  6273                           ;INTERRUPT.h: 84: sendT();
  6274  0012  3188  2053  3180   	fcall	_sendT
  6275                           
  6276                           ;INTERRUPT.h: 85: current_alarm_count = EEPROM_ReadByte(0);
  6277  0015  3000               	movlw	0
  6278  0016  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  6279  0019  0020               	movlb	0	; select bank0
  6280  001A  00A2               	movwf	??_FNC
  6281  001B  0822               	movf	??_FNC,w
  6282  001C  00CA               	movwf	_current_alarm_count
  6283                           
  6284                           ;INTERRUPT.h: 86: if(komut == 'R')
  6285  001D  3052               	movlw	82
  6286  001E  064F               	xorwf	_komut,w
  6287  001F  1D03               	btfss	3,2
  6288  0020  2866               	goto	i1l3412
  6289                           
  6290                           ;INTERRUPT.h: 87: {
  6291                           ;INTERRUPT.h: 89: data_sent = current_alarm_count;
  6292  0021  084A               	movf	_current_alarm_count,w
  6293  0022  00A2               	movwf	??_FNC
  6294  0023  0822               	movf	??_FNC,w
  6295  0024  0021               	movlb	1	; select bank1
  6296  0025  00B6               	movwf	_data_sent^(0+128)
  6297                           
  6298                           ;INTERRUPT.h: 90: commondUART();
  6299  0026  3188  207B  3180   	fcall	_commondUART
  6300                           
  6301                           ;INTERRUPT.h: 93: UART_byte_receive();
  6302  0029  3188  201D  3180   	fcall	_UART_byte_receive
  6303                           
  6304                           ;INTERRUPT.h: 95: start = 1;
  6305  002C  0020               	movlb	0	; select bank0
  6306  002D  01D4               	clrf	_start
  6307  002E  0AD4               	incf	_start,f
  6308                           
  6309                           ;INTERRUPT.h: 96: global_index = 0;
  6310  002F  01CC               	clrf	_global_index
  6311                           
  6312                           ;INTERRUPT.h: 97: while( global_index != current_alarm_count )
  6313  0030  2861               	goto	i1l3410
  6314  0031                     i1l3396:	
  6315                           ;INTERRUPT.h: 98: {
  6316                           ;INTERRUPT.h: 99: while(EEPROM_ReadByte(start) ==0x00) start += 7;
  6317                           
  6318  0031  3007               	movlw	7
  6319  0032  0020               	movlb	0	; select bank0
  6320  0033  00A2               	movwf	??_FNC
  6321  0034  0822               	movf	??_FNC,w
  6322  0035  07D4               	addwf	_start,f
  6323  0036                     i1l3398:	
  6324  0036  0854               	movf	_start,w
  6325  0037  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  6326  003A  3A00               	xorlw	0
  6327  003B  1903               	skipnz
  6328  003C  2831               	goto	i1l3396
  6329                           
  6330                           ;INTERRUPT.h: 100: global_index2= 0;
  6331  003D  0020               	movlb	0	; select bank0
  6332  003E  01CD               	clrf	_global_index2
  6333  003F                     i1l3406:	
  6334                           ;INTERRUPT.h: 101: while( global_index2 != 7)
  6335                           
  6336  003F  3007               	movlw	7
  6337  0040  064D               	xorwf	_global_index2,w
  6338  0041  1903               	btfsc	3,2
  6339  0042  2859               	goto	i1l3408
  6340                           
  6341                           ;INTERRUPT.h: 102: {
  6342                           ;INTERRUPT.h: 105: data_sent = EEPROM_ReadByte(global_index2+start);
  6343  0043  084D               	movf	_global_index2,w
  6344  0044  0754               	addwf	_start,w
  6345  0045  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  6346  0048  0020               	movlb	0	; select bank0
  6347  0049  00A2               	movwf	??_FNC
  6348  004A  0822               	movf	??_FNC,w
  6349  004B  0021               	movlb	1	; select bank1
  6350  004C  00B6               	movwf	_data_sent^(0+128)
  6351                           
  6352                           ;INTERRUPT.h: 106: commondUART();
  6353  004D  3188  207B  3180   	fcall	_commondUART
  6354                           
  6355                           ;INTERRUPT.h: 107: UART_byte_receive();
  6356  0050  3188  201D  3180   	fcall	_UART_byte_receive
  6357                           
  6358                           ;INTERRUPT.h: 108: global_index2++;
  6359  0053  3001               	movlw	1
  6360  0054  0020               	movlb	0	; select bank0
  6361  0055  00A2               	movwf	??_FNC
  6362  0056  0822               	movf	??_FNC,w
  6363  0057  07CD               	addwf	_global_index2,f
  6364  0058  283F               	goto	i1l3406
  6365  0059                     i1l3408:	
  6366                           
  6367                           ;INTERRUPT.h: 109: }
  6368                           ;INTERRUPT.h: 110: start += 7;
  6369  0059  3007               	movlw	7
  6370  005A  00A2               	movwf	??_FNC
  6371  005B  0822               	movf	??_FNC,w
  6372  005C  07D4               	addwf	_start,f
  6373                           
  6374                           ;INTERRUPT.h: 111: global_index++;
  6375  005D  3001               	movlw	1
  6376  005E  00A2               	movwf	??_FNC
  6377  005F  0822               	movf	??_FNC,w
  6378  0060  07CC               	addwf	_global_index,f
  6379  0061                     i1l3410:	
  6380  0061  084C               	movf	_global_index,w
  6381  0062  064A               	xorwf	_current_alarm_count,w
  6382  0063  1903               	btfsc	3,2
  6383  0064  2C28               	goto	i1l3696
  6384  0065  2836               	goto	i1l3398
  6385  0066                     i1l3412:	
  6386                           ;INTERRUPT.h: 112: }
  6387                           ;INTERRUPT.h: 114: }
  6388                           
  6389                           
  6390                           ;INTERRUPT.h: 115: else if(komut == 'S')
  6391  0066  3053               	movlw	83
  6392  0067  064F               	xorwf	_komut,w
  6393  0068  1D03               	btfss	3,2
  6394  0069  2910               	goto	i1l3462
  6395                           
  6396                           ;INTERRUPT.h: 116: {
  6397                           ;INTERRUPT.h: 120: message_id = UART_byte_receive();
  6398  006A  3188  201D  3180   	fcall	_UART_byte_receive
  6399  006D  0020               	movlb	0	; select bank0
  6400  006E  00A2               	movwf	??_FNC
  6401  006F  0822               	movf	??_FNC,w
  6402  0070  00DD               	movwf	_message_id
  6403                           
  6404                           ;INTERRUPT.h: 125: sendT();
  6405  0071  3188  2053  3180   	fcall	_sendT
  6406                           
  6407                           ;INTERRUPT.h: 128: message_location = (message_id-1)*(320);
  6408  0074  0020               	movlb	0	; select bank0
  6409  0075  085D               	movf	_message_id,w
  6410  0076  3EFF               	addlw	255
  6411  0077  00F0               	movwf	i1___wmul@multiplier
  6412  0078  30FF               	movlw	255
  6413  0079  1803               	skipnc
  6414  007A  3000               	movlw	0
  6415  007B  00F1               	movwf	i1___wmul@multiplier+1
  6416  007C  3040               	movlw	64
  6417  007D  00F2               	movwf	i1___wmul@multiplicand
  6418  007E  3001               	movlw	1
  6419  007F  00F3               	movwf	i1___wmul@multiplicand+1
  6420  0080  318A  2250  3180   	fcall	i1___wmul
  6421  0083  0871               	movf	?i1___wmul+1,w
  6422  0084  0020               	movlb	0	; select bank0
  6423  0085  00C4               	movwf	_message_location+1
  6424  0086  0870               	movf	?i1___wmul,w
  6425  0087  00C3               	movwf	_message_location
  6426                           
  6427                           ;INTERRUPT.h: 129: byte message_count = EEPROM_ReadByte((message_id)*7) & 0xf;
  6428  0088  3007               	movlw	7
  6429  0089  00A2               	movwf	??_FNC
  6430  008A  0822               	movf	??_FNC,w
  6431  008B  00F0               	movwf	i1___bmul@multiplicand
  6432  008C  085D               	movf	_message_id,w
  6433  008D  3189  214B  3180   	fcall	i1___bmul
  6434  0090  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  6435  0093  390F               	andlw	15
  6436  0094  0020               	movlb	0	; select bank0
  6437  0095  00A3               	movwf	??_FNC+1
  6438  0096  0823               	movf	??_FNC+1,w
  6439  0097  00A9               	movwf	FNC@message_count
  6440                           
  6441                           ;INTERRUPT.h: 131: data_sent = message_count;
  6442  0098  0829               	movf	FNC@message_count,w
  6443  0099  00A2               	movwf	??_FNC
  6444  009A  0822               	movf	??_FNC,w
  6445  009B  0021               	movlb	1	; select bank1
  6446  009C  00B6               	movwf	_data_sent^(0+128)
  6447                           
  6448                           ;INTERRUPT.h: 132: commondUART();
  6449  009D  3188  207B  3180   	fcall	_commondUART
  6450                           
  6451                           ;INTERRUPT.h: 136: UART_byte_receive();
  6452  00A0  3188  201D  3180   	fcall	_UART_byte_receive
  6453                           
  6454                           ;INTERRUPT.h: 137: byte mes_id = 1;
  6455  00A3  0020               	movlb	0	; select bank0
  6456  00A4  01A8               	clrf	FNC@mes_id
  6457  00A5  0AA8               	incf	FNC@mes_id,f
  6458                           
  6459                           ;INTERRUPT.h: 138: byte leng;
  6460                           ;INTERRUPT.h: 139: for(global_index=0; global_index != message_count ; global_index++)
  6461  00A6  01CC               	clrf	_global_index
  6462  00A7  290B               	goto	i1l554
  6463  00A8                     i1l3432:	
  6464                           ;INTERRUPT.h: 140: {
  6465                           ;INTERRUPT.h: 141: while((leng = EEPROM24C32_read_byte(message_location)) == 0){message_
      +                          location +=64; mes_id++;}
  6466                           
  6467  00A8  3040               	movlw	64
  6468  00A9  07C3               	addwf	_message_location,f
  6469  00AA  3000               	movlw	0
  6470  00AB  3DC4               	addwfc	_message_location+1,f
  6471  00AC  3001               	movlw	1
  6472  00AD  00A2               	movwf	??_FNC
  6473  00AE  0822               	movf	??_FNC,w
  6474  00AF  07A8               	addwf	FNC@mes_id,f
  6475  00B0                     i1l3436:	
  6476  00B0  0844               	movf	_message_location+1,w
  6477  00B1  00FA               	movwf	i1EEPROM24C32_read_byte@address+1
  6478  00B2  0843               	movf	_message_location,w
  6479  00B3  00F9               	movwf	i1EEPROM24C32_read_byte@address
  6480  00B4  3188  2063  3180   	fcall	i1_EEPROM24C32_read_byte
  6481  00B7  0020               	movlb	0	; select bank0
  6482  00B8  00A2               	movwf	??_FNC
  6483  00B9  0822               	movf	??_FNC,w
  6484  00BA  00AA               	movwf	FNC@leng
  6485  00BB  082A               	movf	FNC@leng,w
  6486  00BC  1903               	btfsc	3,2
  6487  00BD  28A8               	goto	i1l3432
  6488                           
  6489                           ;INTERRUPT.h: 142: data_sent = mes_id;
  6490  00BE  0828               	movf	FNC@mes_id,w
  6491  00BF  00A2               	movwf	??_FNC
  6492  00C0  0822               	movf	??_FNC,w
  6493  00C1  0021               	movlb	1	; select bank1
  6494  00C2  00B6               	movwf	_data_sent^(0+128)
  6495                           
  6496                           ;INTERRUPT.h: 143: commondUART();
  6497  00C3  3188  207B  3180   	fcall	_commondUART
  6498                           
  6499                           ;INTERRUPT.h: 148: UART_byte_receive();
  6500  00C6  3188  201D  3180   	fcall	_UART_byte_receive
  6501                           
  6502                           ;INTERRUPT.h: 150: data_sent = leng;
  6503  00C9  0020               	movlb	0	; select bank0
  6504  00CA  082A               	movf	FNC@leng,w
  6505  00CB  00A2               	movwf	??_FNC
  6506  00CC  0822               	movf	??_FNC,w
  6507  00CD  0021               	movlb	1	; select bank1
  6508  00CE  00B6               	movwf	_data_sent^(0+128)
  6509                           
  6510                           ;INTERRUPT.h: 151: commondUART();
  6511  00CF  3188  207B  3180   	fcall	_commondUART
  6512                           
  6513                           ;INTERRUPT.h: 155: UART_byte_receive();
  6514  00D2  3188  201D  3180   	fcall	_UART_byte_receive
  6515                           
  6516                           ;INTERRUPT.h: 157: for(global_index2=1; global_index2 != leng+1; global_index2++)
  6517  00D5  0020               	movlb	0	; select bank0
  6518  00D6  01CD               	clrf	_global_index2
  6519  00D7  0ACD               	incf	_global_index2,f
  6520  00D8                     i1l3454:	
  6521  00D8  082A               	movf	FNC@leng,w
  6522  00D9  3E01               	addlw	1
  6523  00DA  00A2               	movwf	??_FNC
  6524  00DB  3000               	movlw	0
  6525  00DC  1803               	skipnc
  6526  00DD  3001               	movlw	1
  6527  00DE  00A3               	movwf	??_FNC+1
  6528  00DF  084D               	movf	_global_index2,w
  6529  00E0  0622               	xorwf	??_FNC,w
  6530  00E1  0423               	iorwf	??_FNC+1,w
  6531  00E2  1903               	btfsc	3,2
  6532  00E3  28FF               	goto	i1l3456
  6533                           
  6534                           ;INTERRUPT.h: 158: {
  6535                           ;INTERRUPT.h: 159: data_sent = EEPROM24C32_read_byte(message_location+global_index2);
  6536  00E4  084D               	movf	_global_index2,w
  6537  00E5  0743               	addwf	_message_location,w
  6538  00E6  00F9               	movwf	i1EEPROM24C32_read_byte@address
  6539  00E7  0844               	movf	_message_location+1,w
  6540  00E8  1803               	skipnc
  6541  00E9  0A44               	incf	_message_location+1,w
  6542  00EA  00FA               	movwf	i1EEPROM24C32_read_byte@address+1
  6543  00EB  3188  2063  3180   	fcall	i1_EEPROM24C32_read_byte
  6544  00EE  0020               	movlb	0	; select bank0
  6545  00EF  00A2               	movwf	??_FNC
  6546  00F0  0822               	movf	??_FNC,w
  6547  00F1  0021               	movlb	1	; select bank1
  6548  00F2  00B6               	movwf	_data_sent^(0+128)
  6549                           
  6550                           ;INTERRUPT.h: 160: commondUART();
  6551  00F3  3188  207B  3180   	fcall	_commondUART
  6552                           
  6553                           ;INTERRUPT.h: 164: UART_byte_receive();
  6554  00F6  3188  201D  3180   	fcall	_UART_byte_receive
  6555  00F9  3001               	movlw	1
  6556  00FA  0020               	movlb	0	; select bank0
  6557  00FB  00A2               	movwf	??_FNC
  6558  00FC  0822               	movf	??_FNC,w
  6559  00FD  07CD               	addwf	_global_index2,f
  6560  00FE  28D8               	goto	i1l3454
  6561  00FF                     i1l3456:	
  6562                           
  6563                           ;INTERRUPT.h: 165: }
  6564                           ;INTERRUPT.h: 166: message_location +=64; mes_id++;
  6565  00FF  3040               	movlw	64
  6566  0100  07C3               	addwf	_message_location,f
  6567  0101  3000               	movlw	0
  6568  0102  3DC4               	addwfc	_message_location+1,f
  6569  0103  3001               	movlw	1
  6570  0104  00A2               	movwf	??_FNC
  6571  0105  0822               	movf	??_FNC,w
  6572  0106  07A8               	addwf	FNC@mes_id,f
  6573  0107  3001               	movlw	1
  6574  0108  00A2               	movwf	??_FNC
  6575  0109  0822               	movf	??_FNC,w
  6576  010A  07CC               	addwf	_global_index,f
  6577  010B                     i1l554:	
  6578  010B  084C               	movf	_global_index,w
  6579  010C  0629               	xorwf	FNC@message_count,w
  6580  010D  1903               	btfsc	3,2
  6581  010E  2C28               	goto	i1l3696
  6582  010F  28B0               	goto	i1l3436
  6583  0110                     i1l3462:	
  6584                           ;INTERRUPT.h: 167: }
  6585                           ;INTERRUPT.h: 169: }
  6586                           
  6587                           
  6588                           ;INTERRUPT.h: 170: else if(komut == '#' || komut == 'U' || komut == 'N' || komut == 'M' 
      +                          || komut == 'A' || komut == 'P' || komut == 'L' )
  6589  0110  3023               	movlw	35
  6590  0111  064F               	xorwf	_komut,w
  6591  0112  1903               	btfsc	3,2
  6592  0113  292C               	goto	i1l3476
  6593  0114  3055               	movlw	85
  6594  0115  064F               	xorwf	_komut,w
  6595  0116  1903               	btfsc	3,2
  6596  0117  292C               	goto	i1l3476
  6597  0118  304E               	movlw	78
  6598  0119  064F               	xorwf	_komut,w
  6599  011A  1903               	btfsc	3,2
  6600  011B  292C               	goto	i1l3476
  6601  011C  304D               	movlw	77
  6602  011D  064F               	xorwf	_komut,w
  6603  011E  1903               	btfsc	3,2
  6604  011F  292C               	goto	i1l3476
  6605  0120  3041               	movlw	65
  6606  0121  064F               	xorwf	_komut,w
  6607  0122  1903               	btfsc	3,2
  6608  0123  292C               	goto	i1l3476
  6609  0124  3050               	movlw	80
  6610  0125  064F               	xorwf	_komut,w
  6611  0126  1903               	btfsc	3,2
  6612  0127  292C               	goto	i1l3476
  6613  0128  304C               	movlw	76
  6614  0129  064F               	xorwf	_komut,w
  6615  012A  1D03               	btfss	3,2
  6616  012B  2A99               	goto	i1l3568
  6617  012C                     i1l3476:	
  6618                           
  6619                           ;INTERRUPT.h: 171: {
  6620                           ;INTERRUPT.h: 178: if(komut=='M')
  6621  012C  304D               	movlw	77
  6622  012D  064F               	xorwf	_komut,w
  6623  012E  1D03               	btfss	3,2
  6624  012F  2977               	goto	i1l3488
  6625                           
  6626                           ;INTERRUPT.h: 179: {
  6627                           ;INTERRUPT.h: 181: message_id = UART_byte_receive();
  6628  0130  3188  201D  3180   	fcall	_UART_byte_receive
  6629  0133  0020               	movlb	0	; select bank0
  6630  0134  00A2               	movwf	??_FNC
  6631  0135  0822               	movf	??_FNC,w
  6632  0136  00DD               	movwf	_message_id
  6633                           
  6634                           ;INTERRUPT.h: 182: message_location = (message_id-1)*(320);
  6635  0137  085D               	movf	_message_id,w
  6636  0138  3EFF               	addlw	255
  6637  0139  00F0               	movwf	i1___wmul@multiplier
  6638  013A  30FF               	movlw	255
  6639  013B  1803               	skipnc
  6640  013C  3000               	movlw	0
  6641  013D  00F1               	movwf	i1___wmul@multiplier+1
  6642  013E  3040               	movlw	64
  6643  013F  00F2               	movwf	i1___wmul@multiplicand
  6644  0140  3001               	movlw	1
  6645  0141  00F3               	movwf	i1___wmul@multiplicand+1
  6646  0142  318A  2250  3180   	fcall	i1___wmul
  6647  0145  0871               	movf	?i1___wmul+1,w
  6648  0146  0020               	movlb	0	; select bank0
  6649  0147  00C4               	movwf	_message_location+1
  6650  0148  0870               	movf	?i1___wmul,w
  6651  0149  00C3               	movwf	_message_location
  6652  014A                     i1l3484:	
  6653                           ;INTERRUPT.h: 183: while(EEPROM24C32_read_byte(message_location) != 0)message_location +
      +                          = 64;
  6654                           
  6655  014A  0844               	movf	_message_location+1,w
  6656  014B  00FA               	movwf	i1EEPROM24C32_read_byte@address+1
  6657  014C  0843               	movf	_message_location,w
  6658  014D  00F9               	movwf	i1EEPROM24C32_read_byte@address
  6659  014E  3188  2063  3180   	fcall	i1_EEPROM24C32_read_byte
  6660  0151  3A00               	xorlw	0
  6661  0152  1903               	btfsc	3,2
  6662  0153  295A               	goto	i1l3486
  6663  0154  3040               	movlw	64
  6664  0155  0020               	movlb	0	; select bank0
  6665  0156  07C3               	addwf	_message_location,f
  6666  0157  3000               	movlw	0
  6667  0158  3DC4               	addwfc	_message_location+1,f
  6668  0159  294A               	goto	i1l3484
  6669  015A                     i1l3486:	
  6670                           
  6671                           ;INTERRUPT.h: 184: byte temp2 = (message_id)*7;
  6672  015A  3007               	movlw	7
  6673  015B  0020               	movlb	0	; select bank0
  6674  015C  00A2               	movwf	??_FNC
  6675  015D  0822               	movf	??_FNC,w
  6676  015E  00F0               	movwf	i1___bmul@multiplicand
  6677  015F  085D               	movf	_message_id,w
  6678  0160  3189  214B  3180   	fcall	i1___bmul
  6679  0163  0020               	movlb	0	; select bank0
  6680  0164  00A3               	movwf	??_FNC+1
  6681  0165  0823               	movf	??_FNC+1,w
  6682  0166  00AB               	movwf	FNC@temp2
  6683                           
  6684                           ;INTERRUPT.h: 186: EEPROM_WriteByte(temp2 , EEPROM_ReadByte(temp2)+1);
  6685  0167  082B               	movf	FNC@temp2,w
  6686  0168  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  6687  016B  3E01               	addlw	1
  6688  016C  0020               	movlb	0	; select bank0
  6689  016D  00A2               	movwf	??_FNC
  6690  016E  0822               	movf	??_FNC,w
  6691  016F  00F4               	movwf	EEPROM_WriteByte@value
  6692  0170  082B               	movf	FNC@temp2,w
  6693  0171  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  6694                           
  6695                           ;INTERRUPT.h: 188: sendT();
  6696  0174  3188  2053  3180   	fcall	_sendT
  6697  0177                     i1l3488:	
  6698                           
  6699                           ;INTERRUPT.h: 193: }
  6700                           ;INTERRUPT.h: 196: *(pp+1) = UART_byte_receive();
  6701  0177  3188  201D  3180   	fcall	_UART_byte_receive
  6702  017A  0020               	movlb	0	; select bank0
  6703  017B  00A2               	movwf	??_FNC
  6704  017C  0A61               	incf	_pp,w
  6705  017D  0086               	movwf	6
  6706  017E  0187               	clrf	7
  6707  017F  0822               	movf	??_FNC,w
  6708  0180  0081               	movwf	1
  6709                           
  6710                           ;INTERRUPT.h: 197: if(komut == 'P')EEPROM24C64_write_byte(0, received_data);
  6711  0181  3050               	movlw	80
  6712  0182  064F               	xorwf	_komut,w
  6713  0183  1D03               	btfss	3,2
  6714  0184  298F               	goto	i1l571
  6715  0185  3000               	movlw	0
  6716  0186  00F8               	movwf	EEPROM24C64_write_byte@address
  6717  0187  00F9               	movwf	EEPROM24C64_write_byte@address+1
  6718  0188  0851               	movf	_received_data,w
  6719  0189  00A2               	movwf	??_FNC
  6720  018A  0822               	movf	??_FNC,w
  6721  018B  00FA               	movwf	EEPROM24C64_write_byte@data
  6722  018C  3188  20CB  3180   	fcall	_EEPROM24C64_write_byte
  6723  018F                     i1l571:	
  6724                           
  6725                           ;INTERRUPT.h: 201: sendT();
  6726  018F  3188  2053  3180   	fcall	_sendT
  6727                           
  6728                           ;INTERRUPT.h: 202: received_data = UART_byte_receive();
  6729  0192  3188  201D  3180   	fcall	_UART_byte_receive
  6730  0195  0020               	movlb	0	; select bank0
  6731  0196  00A2               	movwf	??_FNC
  6732  0197  0822               	movf	??_FNC,w
  6733  0198  00D1               	movwf	_received_data
  6734                           
  6735                           ;INTERRUPT.h: 203: if(komut == 'P')EEPROM24C64_write_byte(1, received_data);
  6736  0199  3050               	movlw	80
  6737  019A  064F               	xorwf	_komut,w
  6738  019B  1D03               	btfss	3,2
  6739  019C  29A8               	goto	i1l3500
  6740  019D  3001               	movlw	1
  6741  019E  00F8               	movwf	EEPROM24C64_write_byte@address
  6742  019F  3000               	movlw	0
  6743  01A0  00F9               	movwf	EEPROM24C64_write_byte@address+1
  6744  01A1  0851               	movf	_received_data,w
  6745  01A2  00A2               	movwf	??_FNC
  6746  01A3  0822               	movf	??_FNC,w
  6747  01A4  00FA               	movwf	EEPROM24C64_write_byte@data
  6748  01A5  3188  20CB  3180   	fcall	_EEPROM24C64_write_byte
  6749  01A8                     i1l3500:	
  6750                           
  6751                           ;INTERRUPT.h: 204: *pp =received_data;
  6752  01A8  0020               	movlb	0	; select bank0
  6753  01A9  0851               	movf	_received_data,w
  6754  01AA  00A2               	movwf	??_FNC
  6755  01AB  0861               	movf	_pp,w
  6756  01AC  0086               	movwf	6
  6757  01AD  0187               	clrf	7
  6758  01AE  0822               	movf	??_FNC,w
  6759  01AF  0081               	movwf	1
  6760                           
  6761                           ;INTERRUPT.h: 205: if( komut == 'A')
  6762  01B0  3041               	movlw	65
  6763  01B1  064F               	xorwf	_komut,w
  6764  01B2  1D03               	btfss	3,2
  6765  01B3  29E3               	goto	i1l3516
  6766                           
  6767                           ;INTERRUPT.h: 206: {
  6768                           ;INTERRUPT.h: 207: eeprom_index= 1;
  6769  01B4  01CB               	clrf	_eeprom_index
  6770  01B5  0ACB               	incf	_eeprom_index,f
  6771                           
  6772                           ;INTERRUPT.h: 208: alarm_id = 1;
  6773  01B6  0021               	movlb	1	; select bank1
  6774  01B7  01E8               	clrf	_alarm_id^(0+128)
  6775  01B8  0AE8               	incf	_alarm_id^(0+128),f
  6776                           
  6777                           ;INTERRUPT.h: 209: current_alarm_count +=1;
  6778  01B9  3001               	movlw	1
  6779  01BA  0020               	movlb	0	; select bank0
  6780  01BB  00A2               	movwf	??_FNC
  6781  01BC  0822               	movf	??_FNC,w
  6782  01BD  07CA               	addwf	_current_alarm_count,f
  6783                           
  6784                           ;INTERRUPT.h: 210: EEPROM_WriteByte(0, current_alarm_count);
  6785  01BE  084A               	movf	_current_alarm_count,w
  6786  01BF  00A2               	movwf	??_FNC
  6787  01C0  0822               	movf	??_FNC,w
  6788  01C1  00F4               	movwf	EEPROM_WriteByte@value
  6789  01C2  3000               	movlw	0
  6790  01C3  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  6791  01C6                     i1l3512:	
  6792                           ;INTERRUPT.h: 211: while(EEPROM_ReadByte(eeprom_index) != 0){ eeprom_index += 7; alarm_i
      +                          d += 1;}
  6793                           
  6794  01C6  0020               	movlb	0	; select bank0
  6795  01C7  084B               	movf	_eeprom_index,w
  6796  01C8  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  6797  01CB  3A00               	xorlw	0
  6798  01CC  1903               	btfsc	3,2
  6799  01CD  29D9               	goto	i1l3514
  6800  01CE  3007               	movlw	7
  6801  01CF  0020               	movlb	0	; select bank0
  6802  01D0  00A2               	movwf	??_FNC
  6803  01D1  0822               	movf	??_FNC,w
  6804  01D2  07CB               	addwf	_eeprom_index,f
  6805  01D3  3001               	movlw	1
  6806  01D4  00A2               	movwf	??_FNC
  6807  01D5  0822               	movf	??_FNC,w
  6808  01D6  0021               	movlb	1	; select bank1
  6809  01D7  07E8               	addwf	_alarm_id^(0+128),f
  6810  01D8  29C6               	goto	i1l3512
  6811  01D9                     i1l3514:	
  6812                           
  6813                           ;INTERRUPT.h: 212: EEPROM_WriteByte(eeprom_index, alarm_id);
  6814  01D9  0021               	movlb	1	; select bank1
  6815  01DA  0868               	movf	_alarm_id^(0+128),w
  6816  01DB  0020               	movlb	0	; select bank0
  6817  01DC  00A2               	movwf	??_FNC
  6818  01DD  0822               	movf	??_FNC,w
  6819  01DE  00F4               	movwf	EEPROM_WriteByte@value
  6820  01DF  084B               	movf	_eeprom_index,w
  6821  01E0  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  6822  01E3                     i1l3516:	
  6823                           
  6824                           ;INTERRUPT.h: 213: }
  6825                           ;INTERRUPT.h: 215: if(komut=='M')
  6826  01E3  304D               	movlw	77
  6827  01E4  0020               	movlb	0	; select bank0
  6828  01E5  064F               	xorwf	_komut,w
  6829  01E6  1D03               	btfss	3,2
  6830  01E7  29F5               	goto	i1l577
  6831                           
  6832                           ;INTERRUPT.h: 216: {
  6833                           ;INTERRUPT.h: 217: EEPROM24C32_write_byte(message_location, byte_count);
  6834  01E8  0844               	movf	_message_location+1,w
  6835  01E9  00F9               	movwf	EEPROM24C32_write_byte@address+1
  6836  01EA  0843               	movf	_message_location,w
  6837  01EB  00F8               	movwf	EEPROM24C32_write_byte@address
  6838  01EC  0021               	movlb	1	; select bank1
  6839  01ED  0858               	movf	_byte_count^(0+128),w
  6840  01EE  0020               	movlb	0	; select bank0
  6841  01EF  00A2               	movwf	??_FNC
  6842  01F0  0822               	movf	??_FNC,w
  6843  01F1  00FA               	movwf	EEPROM24C32_write_byte@data
  6844  01F2  3188  20BF  3180   	fcall	_EEPROM24C32_write_byte
  6845  01F5                     i1l577:	
  6846                           
  6847                           ;INTERRUPT.h: 218: }
  6848                           ;INTERRUPT.h: 221: sendT();
  6849  01F5  3188  2053  3180   	fcall	_sendT
  6850                           
  6851                           ;INTERRUPT.h: 223: for(measured_adc_value=0; measured_adc_value != byte_count; measured_
      +                          adc_value++)
  6852  01F8  0020               	movlb	0	; select bank0
  6853  01F9  01DA               	clrf	_measured_adc_value
  6854  01FA  01DB               	clrf	_measured_adc_value+1
  6855  01FB                     i1l3554:	
  6856  01FB  0021               	movlb	1	; select bank1
  6857  01FC  0859               	movf	(_byte_count+1)^(0+128),w
  6858  01FD  0020               	movlb	0	; select bank0
  6859  01FE  065B               	xorwf	_measured_adc_value+1,w
  6860  01FF  1D03               	skipz
  6861  0200  2A05               	goto	u358_25
  6862  0201  0021               	movlb	1	; select bank1
  6863  0202  0858               	movf	_byte_count^(0+128),w
  6864  0203  0020               	movlb	0	; select bank0
  6865  0204  065A               	xorwf	_measured_adc_value,w
  6866  0205                     u358_25:	
  6867  0205  1903               	btfsc	3,2
  6868  0206  2A7D               	goto	i1l3556
  6869                           
  6870                           ;INTERRUPT.h: 224: {
  6871                           ;INTERRUPT.h: 225: received_data = UART_byte_receive();
  6872  0207  3188  201D  3180   	fcall	_UART_byte_receive
  6873  020A  0020               	movlb	0	; select bank0
  6874  020B  00A2               	movwf	??_FNC
  6875  020C  0822               	movf	??_FNC,w
  6876  020D  00D1               	movwf	_received_data
  6877                           
  6878                           ;INTERRUPT.h: 226: if(komut == 'P')EEPROM24C64_write_byte(measured_adc_value+2, received
      +                          _data);
  6879  020E  3050               	movlw	80
  6880  020F  064F               	xorwf	_komut,w
  6881  0210  1D03               	btfss	3,2
  6882  0211  2A20               	goto	i1l3528
  6883  0212  085A               	movf	_measured_adc_value,w
  6884  0213  3E02               	addlw	2
  6885  0214  00F8               	movwf	EEPROM24C64_write_byte@address
  6886  0215  3000               	movlw	0
  6887  0216  3D5B               	addwfc	_measured_adc_value+1,w
  6888  0217  00F9               	movwf	EEPROM24C64_write_byte@address+1
  6889  0218  0851               	movf	_received_data,w
  6890  0219  00A2               	movwf	??_FNC
  6891  021A  0822               	movf	??_FNC,w
  6892  021B  00FA               	movwf	EEPROM24C64_write_byte@data
  6893  021C  3188  20CB  3180   	fcall	_EEPROM24C64_write_byte
  6894  021F  2A74               	goto	i1l581
  6895  0220                     i1l3528:	
  6896                           
  6897                           ;INTERRUPT.h: 227: else if(komut == 'A') EEPROM_WriteByte(eeprom_index+measured_adc_valu
      +                          e+1, received_data);
  6898  0220  3041               	movlw	65
  6899  0221  0020               	movlb	0	; select bank0
  6900  0222  064F               	xorwf	_komut,w
  6901  0223  1D03               	btfss	3,2
  6902  0224  2A2D               	goto	i1l3532
  6903  0225  0851               	movf	_received_data,w
  6904  0226  00A2               	movwf	??_FNC
  6905  0227  0822               	movf	??_FNC,w
  6906  0228  00F4               	movwf	EEPROM_WriteByte@value
  6907  0229  084B               	movf	_eeprom_index,w
  6908  022A  075A               	addwf	_measured_adc_value,w
  6909  022B  3E01               	addlw	1
  6910  022C  2A71               	goto	L7
  6911  022D                     i1l3532:	
  6912                           
  6913                           ;INTERRUPT.h: 228: else if(komut == 'M') EEPROM24C32_write_byte(message_location+measure
      +                          d_adc_value+1, received_data);
  6914  022D  304D               	movlw	77
  6915  022E  0020               	movlb	0	; select bank0
  6916  022F  064F               	xorwf	_komut,w
  6917  0230  1D03               	btfss	3,2
  6918  0231  2A46               	goto	i1l3536
  6919  0232  085A               	movf	_measured_adc_value,w
  6920  0233  0743               	addwf	_message_location,w
  6921  0234  00A2               	movwf	??_FNC
  6922  0235  085B               	movf	_measured_adc_value+1,w
  6923  0236  3D44               	addwfc	_message_location+1,w
  6924  0237  00A3               	movwf	??_FNC+1
  6925  0238  0822               	movf	??_FNC,w
  6926  0239  3E01               	addlw	1
  6927  023A  00F8               	movwf	EEPROM24C32_write_byte@address
  6928  023B  3000               	movlw	0
  6929  023C  3D23               	addwfc	??_FNC+1,w
  6930  023D  00F9               	movwf	EEPROM24C32_write_byte@address+1
  6931  023E  0851               	movf	_received_data,w
  6932  023F  00A4               	movwf	??_FNC+2
  6933  0240  0824               	movf	??_FNC+2,w
  6934  0241  00FA               	movwf	EEPROM24C32_write_byte@data
  6935  0242  3188  20BF  3180   	fcall	_EEPROM24C32_write_byte
  6936  0245  2A74               	goto	i1l581
  6937  0246                     i1l3536:	
  6938                           
  6939                           ;INTERRUPT.h: 229: else if(komut == 'U' ||komut == 'N') time_array[measured_adc_value] =
      +                           received_data;
  6940  0246  3055               	movlw	85
  6941  0247  0020               	movlb	0	; select bank0
  6942  0248  064F               	xorwf	_komut,w
  6943  0249  1903               	btfsc	3,2
  6944  024A  2A4F               	goto	i1l3540
  6945  024B  304E               	movlw	78
  6946  024C  064F               	xorwf	_komut,w
  6947  024D  1D03               	btfss	3,2
  6948  024E  2A58               	goto	i1l3542
  6949  024F                     i1l3540:	
  6950  024F  0851               	movf	_received_data,w
  6951  0250  00A2               	movwf	??_FNC
  6952  0251  085A               	movf	_measured_adc_value,w
  6953  0252  3EA5               	addlw	(low (_time_array| 0))& (0+255)
  6954  0253  0086               	movwf	6
  6955  0254  0187               	clrf	7
  6956  0255  0822               	movf	??_FNC,w
  6957  0256  0081               	movwf	1
  6958  0257  2A74               	goto	i1l581
  6959  0258                     i1l3542:	
  6960                           
  6961                           ;INTERRUPT.h: 230: else if(komut == 'L') EEPROM_WriteByte(248+measured_adc_value, receiv
      +                          ed_data);
  6962  0258  304C               	movlw	76
  6963  0259  064F               	xorwf	_komut,w
  6964  025A  1D03               	btfss	3,2
  6965  025B  2A63               	goto	i1l3546
  6966  025C  0851               	movf	_received_data,w
  6967  025D  00A2               	movwf	??_FNC
  6968  025E  0822               	movf	??_FNC,w
  6969  025F  00F4               	movwf	EEPROM_WriteByte@value
  6970  0260  085A               	movf	_measured_adc_value,w
  6971  0261  3EF8               	addlw	248
  6972  0262  2A71               	goto	L7
  6973  0263                     i1l3546:	
  6974                           
  6975                           ;INTERRUPT.h: 231: else if(komut == '#')if(received_data != 0xff)EEPROM_WriteByte(232+me
      +                          asured_adc_value, received_data);
  6976  0263  3023               	movlw	35
  6977  0264  0020               	movlb	0	; select bank0
  6978  0265  064F               	xorwf	_komut,w
  6979  0266  1D03               	btfss	3,2
  6980  0267  2A74               	goto	i1l581
  6981  0268  0A51               	incf	_received_data,w
  6982  0269  1903               	btfsc	3,2
  6983  026A  2A74               	goto	i1l581
  6984  026B  0851               	movf	_received_data,w
  6985  026C  00A2               	movwf	??_FNC
  6986  026D  0822               	movf	??_FNC,w
  6987  026E  00F4               	movwf	EEPROM_WriteByte@value
  6988  026F  085A               	movf	_measured_adc_value,w
  6989  0270  3EE8               	addlw	232
  6990  0271                     L7:	
  6991  0271  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  6992  0274                     i1l581:	
  6993                           
  6994                           ;INTERRUPT.h: 234: sendT();
  6995  0274  3188  2053  3180   	fcall	_sendT
  6996  0277  3001               	movlw	1
  6997  0278  0020               	movlb	0	; select bank0
  6998  0279  07DA               	addwf	_measured_adc_value,f
  6999  027A  3000               	movlw	0
  7000  027B  3DDB               	addwfc	_measured_adc_value+1,f
  7001  027C  29FB               	goto	i1l3554
  7002  027D                     i1l3556:	
  7003                           
  7004                           ;INTERRUPT.h: 239: }
  7005                           ;INTERRUPT.h: 241: if(komut == 'U')DS1307_set_shared(0);
  7006  027D  3055               	movlw	85
  7007  027E  064F               	xorwf	_komut,w
  7008  027F  1D03               	btfss	3,2
  7009  0280  2A86               	goto	i1l3560
  7010  0281  3000               	movlw	0
  7011  0282  318B  2327  3180   	fcall	_DS1307_set_shared
  7012  0285  2C28               	goto	i1l3696
  7013  0286                     i1l3560:	
  7014                           
  7015                           ;INTERRUPT.h: 242: else if(komut == 'N') DS1307_set_shared(4);
  7016  0286  304E               	movlw	78
  7017  0287  0020               	movlb	0	; select bank0
  7018  0288  064F               	xorwf	_komut,w
  7019  0289  1D03               	btfss	3,2
  7020  028A  2A90               	goto	i1l3564
  7021  028B  3004               	movlw	4
  7022  028C  318B  2327  3180   	fcall	_DS1307_set_shared
  7023  028F  2C28               	goto	i1l3696
  7024  0290                     i1l3564:	
  7025                           
  7026                           ;INTERRUPT.h: 243: else if(komut == '#')
  7027  0290  3023               	movlw	35
  7028  0291  0020               	movlb	0	; select bank0
  7029  0292  064F               	xorwf	_komut,w
  7030  0293  1D03               	btfss	3,2
  7031  0294  2C28               	goto	i1l3696
  7032                           
  7033                           ;INTERRUPT.h: 244: EXTRA_INFO_SHOW = 1;
  7034  0295  0021               	movlb	1	; select bank1
  7035  0296  01AD               	clrf	_EXTRA_INFO_SHOW^(0+128)
  7036  0297  0AAD               	incf	_EXTRA_INFO_SHOW^(0+128),f
  7037                           
  7038                           ;INTERRUPT.h: 246: }
  7039  0298  2C28               	goto	i1l3696
  7040  0299                     i1l3568:	
  7041                           
  7042                           ;INTERRUPT.h: 247: else if(komut == 'C' )
  7043  0299  3043               	movlw	67
  7044  029A  0020               	movlb	0	; select bank0
  7045  029B  064F               	xorwf	_komut,w
  7046  029C  1D03               	btfss	3,2
  7047  029D  2ACC               	goto	i1l3594
  7048                           
  7049                           ;INTERRUPT.h: 248: {
  7050                           ;INTERRUPT.h: 250: for(global_index = 0; global_index !=248 ; global_index++)
  7051  029E  01CC               	clrf	_global_index
  7052  029F  30F8               	movlw	248
  7053  02A0  064C               	xorwf	_global_index,w
  7054  02A1  1903               	btfsc	3,2
  7055  02A2  2AB1               	goto	i1l3582
  7056  02A3                     i1l3576:	
  7057                           
  7058                           ;INTERRUPT.h: 251: EEPROM_WriteByte(global_index, 0);
  7059  02A3  01F4               	clrf	EEPROM_WriteByte@value
  7060  02A4  084C               	movf	_global_index,w
  7061  02A5  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  7062  02A8  3001               	movlw	1
  7063  02A9  0020               	movlb	0	; select bank0
  7064  02AA  00A2               	movwf	??_FNC
  7065  02AB  0822               	movf	??_FNC,w
  7066  02AC  07CC               	addwf	_global_index,f
  7067  02AD  30F8               	movlw	248
  7068  02AE  064C               	xorwf	_global_index,w
  7069  02AF  1D03               	btfss	3,2
  7070  02B0  2AA3               	goto	i1l3576
  7071  02B1                     i1l3582:	
  7072                           
  7073                           ;INTERRUPT.h: 252: for(global_index=0; global_index !=30; global_index++)
  7074  02B1  01CC               	clrf	_global_index
  7075  02B2                     L8:	
  7076  02B2  301E               	movlw	30
  7077  02B3  064C               	xorwf	_global_index,w
  7078  02B4  1903               	btfsc	3,2
  7079  02B5  2C28               	goto	i1l3696
  7080                           
  7081                           ;INTERRUPT.h: 253: EEPROM24C32_write_byte(global_index*64, 0);
  7082  02B6  084C               	movf	_global_index,w
  7083  02B7  00A2               	movwf	??_FNC
  7084  02B8  01A3               	clrf	??_FNC+1
  7085  02B9  3006               	movlw	6
  7086  02BA                     u366_25:	
  7087  02BA  35A2               	lslf	??_FNC,f
  7088  02BB  0DA3               	rlf	??_FNC+1,f
  7089  02BC  0B89               	decfsz	9,f
  7090  02BD  2ABA               	goto	u366_25
  7091  02BE  0822               	movf	??_FNC,w
  7092  02BF  00F8               	movwf	EEPROM24C32_write_byte@address
  7093  02C0  0823               	movf	??_FNC+1,w
  7094  02C1  00F9               	movwf	EEPROM24C32_write_byte@address+1
  7095  02C2  01FA               	clrf	EEPROM24C32_write_byte@data
  7096  02C3  3188  20BF  3180   	fcall	_EEPROM24C32_write_byte
  7097  02C6  3001               	movlw	1
  7098  02C7  0020               	movlb	0	; select bank0
  7099  02C8  00A2               	movwf	??_FNC
  7100  02C9  0822               	movf	??_FNC,w
  7101  02CA  07CC               	addwf	_global_index,f
  7102  02CB  2AB2               	goto	L8
  7103  02CC                     i1l3594:	
  7104                           ;INTERRUPT.h: 254: }
  7105                           
  7106                           
  7107                           ;INTERRUPT.h: 255: else if(komut == 'J')
  7108  02CC  304A               	movlw	74
  7109  02CD  064F               	xorwf	_komut,w
  7110  02CE  1D03               	btfss	3,2
  7111  02CF  2B2B               	goto	i1l3602
  7112                           
  7113                           ;INTERRUPT.h: 256: {
  7114                           ;INTERRUPT.h: 257: message_id = UART_byte_receive();
  7115  02D0  3188  201D  3180   	fcall	_UART_byte_receive
  7116  02D3  0020               	movlb	0	; select bank0
  7117  02D4  00A2               	movwf	??_FNC
  7118  02D5  0822               	movf	??_FNC,w
  7119  02D6  00DD               	movwf	_message_id
  7120                           
  7121                           ;INTERRUPT.h: 260: sendT();
  7122  02D7  3188  2053  3180   	fcall	_sendT
  7123                           
  7124                           ;INTERRUPT.h: 263: byte m_id = UART_byte_receive();
  7125  02DA  3188  201D  3180   	fcall	_UART_byte_receive
  7126  02DD  0020               	movlb	0	; select bank0
  7127  02DE  00A2               	movwf	??_FNC
  7128  02DF  0822               	movf	??_FNC,w
  7129  02E0  00A7               	movwf	FNC@m_id
  7130                           
  7131                           ;INTERRUPT.h: 264: sendT();
  7132  02E1  3188  2053  3180   	fcall	_sendT
  7133                           
  7134                           ;INTERRUPT.h: 267: message_location = (message_id-1)*(320)+(m_id-1)*64;
  7135  02E4  0020               	movlb	0	; select bank0
  7136  02E5  085D               	movf	_message_id,w
  7137  02E6  3EFF               	addlw	255
  7138  02E7  00F0               	movwf	i1___wmul@multiplier
  7139  02E8  30FF               	movlw	255
  7140  02E9  1803               	skipnc
  7141  02EA  3000               	movlw	0
  7142  02EB  00F1               	movwf	i1___wmul@multiplier+1
  7143  02EC  3040               	movlw	64
  7144  02ED  00F2               	movwf	i1___wmul@multiplicand
  7145  02EE  3001               	movlw	1
  7146  02EF  00F3               	movwf	i1___wmul@multiplicand+1
  7147  02F0  318A  2250  3180   	fcall	i1___wmul
  7148  02F3  0020               	movlb	0	; select bank0
  7149  02F4  0827               	movf	FNC@m_id,w
  7150  02F5  00A2               	movwf	??_FNC
  7151  02F6  01A3               	clrf	??_FNC+1
  7152  02F7  3006               	movlw	6
  7153  02F8                     u369_25:	
  7154  02F8  35A2               	lslf	??_FNC,f
  7155  02F9  0DA3               	rlf	??_FNC+1,f
  7156  02FA  0B89               	decfsz	9,f
  7157  02FB  2AF8               	goto	u369_25
  7158  02FC  0870               	movf	?i1___wmul,w
  7159  02FD  0722               	addwf	??_FNC,w
  7160  02FE  00A4               	movwf	??_FNC+2
  7161  02FF  0871               	movf	?i1___wmul+1,w
  7162  0300  3D23               	addwfc	??_FNC+1,w
  7163  0301  00A5               	movwf	??_FNC+3
  7164  0302  0824               	movf	??_FNC+2,w
  7165  0303  3EC0               	addlw	192
  7166  0304  00C3               	movwf	_message_location
  7167  0305  30FF               	movlw	255
  7168  0306  3D25               	addwfc	??_FNC+3,w
  7169  0307  00C4               	movwf	_message_location+1
  7170                           
  7171                           ;INTERRUPT.h: 268: start = (message_id)*7;
  7172  0308  3007               	movlw	7
  7173  0309  00A2               	movwf	??_FNC
  7174  030A  0822               	movf	??_FNC,w
  7175  030B  00F0               	movwf	i1___bmul@multiplicand
  7176  030C  085D               	movf	_message_id,w
  7177  030D  3189  214B  3180   	fcall	i1___bmul
  7178  0310  0020               	movlb	0	; select bank0
  7179  0311  00A3               	movwf	??_FNC+1
  7180  0312  0823               	movf	??_FNC+1,w
  7181  0313  00D4               	movwf	_start
  7182                           
  7183                           ;INTERRUPT.h: 269: EEPROM_WriteByte(start, EEPROM_ReadByte(start)-1);
  7184  0314  0854               	movf	_start,w
  7185  0315  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  7186  0318  3EFF               	addlw	255
  7187  0319  0020               	movlb	0	; select bank0
  7188  031A  00A2               	movwf	??_FNC
  7189  031B  0822               	movf	??_FNC,w
  7190  031C  00F4               	movwf	EEPROM_WriteByte@value
  7191  031D  0854               	movf	_start,w
  7192  031E  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  7193                           
  7194                           ;INTERRUPT.h: 270: EEPROM24C32_write_byte(message_location, 0);
  7195  0321  0020               	movlb	0	; select bank0
  7196  0322  0844               	movf	_message_location+1,w
  7197  0323  00F9               	movwf	EEPROM24C32_write_byte@address+1
  7198  0324  0843               	movf	_message_location,w
  7199  0325  00F8               	movwf	EEPROM24C32_write_byte@address
  7200  0326  01FA               	clrf	EEPROM24C32_write_byte@data
  7201  0327  3188  20BF  3180   	fcall	_EEPROM24C32_write_byte
  7202                           
  7203                           ;INTERRUPT.h: 272: }
  7204  032A  2C28               	goto	i1l3696
  7205  032B                     i1l3602:	
  7206                           
  7207                           ;INTERRUPT.h: 273: else if(komut == 'D')
  7208  032B  3044               	movlw	68
  7209  032C  0020               	movlb	0	; select bank0
  7210  032D  064F               	xorwf	_komut,w
  7211  032E  1D03               	btfss	3,2
  7212  032F  2B83               	goto	i1l3624
  7213                           
  7214                           ;INTERRUPT.h: 274: {
  7215                           ;INTERRUPT.h: 276: message_id = UART_byte_receive();
  7216  0330  3188  201D  3180   	fcall	_UART_byte_receive
  7217  0333  0020               	movlb	0	; select bank0
  7218  0334  00A2               	movwf	??_FNC
  7219  0335  0822               	movf	??_FNC,w
  7220  0336  00DD               	movwf	_message_id
  7221                           
  7222                           ;INTERRUPT.h: 278: message_location = (message_id-1)*(320);
  7223  0337  085D               	movf	_message_id,w
  7224  0338  3EFF               	addlw	255
  7225  0339  00F0               	movwf	i1___wmul@multiplier
  7226  033A  30FF               	movlw	255
  7227  033B  1803               	skipnc
  7228  033C  3000               	movlw	0
  7229  033D  00F1               	movwf	i1___wmul@multiplier+1
  7230  033E  3040               	movlw	64
  7231  033F  00F2               	movwf	i1___wmul@multiplicand
  7232  0340  3001               	movlw	1
  7233  0341  00F3               	movwf	i1___wmul@multiplicand+1
  7234  0342  318A  2250  3180   	fcall	i1___wmul
  7235  0345  0871               	movf	?i1___wmul+1,w
  7236  0346  0020               	movlb	0	; select bank0
  7237  0347  00C4               	movwf	_message_location+1
  7238  0348  0870               	movf	?i1___wmul,w
  7239  0349  00C3               	movwf	_message_location
  7240                           
  7241                           ;INTERRUPT.h: 279: EEPROM_WriteByte((message_id-1)*7+1, 0);
  7242  034A  01F4               	clrf	EEPROM_WriteByte@value
  7243  034B  3007               	movlw	7
  7244  034C  00A2               	movwf	??_FNC
  7245  034D  0822               	movf	??_FNC,w
  7246  034E  00F0               	movwf	i1___bmul@multiplicand
  7247  034F  085D               	movf	_message_id,w
  7248  0350  3EFF               	addlw	255
  7249  0351  3189  214B  3180   	fcall	i1___bmul
  7250  0354  3E01               	addlw	1
  7251  0355  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  7252                           
  7253                           ;INTERRUPT.h: 280: for(global_index = 0; global_index != 5;global_index++)
  7254  0358  0020               	movlb	0	; select bank0
  7255  0359  01CC               	clrf	_global_index
  7256  035A  3005               	movlw	5
  7257  035B  064C               	xorwf	_global_index,w
  7258  035C  1903               	btfsc	3,2
  7259  035D  2B79               	goto	i1l3622
  7260  035E                     i1l3616:	
  7261                           
  7262                           ;INTERRUPT.h: 281: {
  7263                           ;INTERRUPT.h: 282: EEPROM24C32_write_byte(message_location+global_index*64, 0);
  7264  035E  084C               	movf	_global_index,w
  7265  035F  00A2               	movwf	??_FNC
  7266  0360  01A3               	clrf	??_FNC+1
  7267  0361  3006               	movlw	6
  7268  0362                     u372_25:	
  7269  0362  35A2               	lslf	??_FNC,f
  7270  0363  0DA3               	rlf	??_FNC+1,f
  7271  0364  0B89               	decfsz	9,f
  7272  0365  2B62               	goto	u372_25
  7273  0366  0843               	movf	_message_location,w
  7274  0367  0722               	addwf	??_FNC,w
  7275  0368  00F8               	movwf	EEPROM24C32_write_byte@address
  7276  0369  0844               	movf	_message_location+1,w
  7277  036A  3D23               	addwfc	??_FNC+1,w
  7278  036B  00F9               	movwf	EEPROM24C32_write_byte@address+1
  7279  036C  01FA               	clrf	EEPROM24C32_write_byte@data
  7280  036D  3188  20BF  3180   	fcall	_EEPROM24C32_write_byte
  7281  0370  3001               	movlw	1
  7282  0371  0020               	movlb	0	; select bank0
  7283  0372  00A2               	movwf	??_FNC
  7284  0373  0822               	movf	??_FNC,w
  7285  0374  07CC               	addwf	_global_index,f
  7286  0375  3005               	movlw	5
  7287  0376  064C               	xorwf	_global_index,w
  7288  0377  1D03               	btfss	3,2
  7289  0378  2B5E               	goto	i1l3616
  7290  0379                     i1l3622:	
  7291                           
  7292                           ;INTERRUPT.h: 283: }
  7293                           ;INTERRUPT.h: 284: EEPROM_WriteByte(0, current_alarm_count-1);
  7294  0379  084A               	movf	_current_alarm_count,w
  7295  037A  3EFF               	addlw	255
  7296  037B  00A2               	movwf	??_FNC
  7297  037C  0822               	movf	??_FNC,w
  7298  037D  00F4               	movwf	EEPROM_WriteByte@value
  7299  037E  3000               	movlw	0
  7300  037F  3189  21A6  3180   	fcall	_EEPROM_WriteByte
  7301                           
  7302                           ;INTERRUPT.h: 285: }
  7303  0382  2C28               	goto	i1l3696
  7304  0383                     i1l3624:	
  7305                           
  7306                           ;INTERRUPT.h: 286: else if(komut=='V')
  7307  0383  3056               	movlw	86
  7308  0384  0020               	movlb	0	; select bank0
  7309  0385  064F               	xorwf	_komut,w
  7310  0386  1D03               	btfss	3,2
  7311  0387  2BAD               	goto	i1l3644
  7312                           
  7313                           ;INTERRUPT.h: 287: {
  7314                           ;INTERRUPT.h: 289: receiveStruct();
  7315  0388  3188  209F  3180   	fcall	_receiveStruct
  7316                           
  7317                           ;INTERRUPT.h: 291: ADC_read(received_data);
  7318  038B  0020               	movlb	0	; select bank0
  7319  038C  0851               	movf	_received_data,w
  7320  038D  318B  23EF  3180   	fcall	i1_ADC_read
  7321                           
  7322                           ;INTERRUPT.h: 292: byte * l = (byte *)&measured_adc_value;
  7323  0390  305A               	movlw	(low (_measured_adc_value| 0))& (0+255)
  7324  0391  0020               	movlb	0	; select bank0
  7325  0392  00A2               	movwf	??_FNC
  7326  0393  0822               	movf	??_FNC,w
  7327  0394  00AC               	movwf	FNC@l
  7328                           
  7329                           ;INTERRUPT.h: 293: data_sent = *l;
  7330  0395  082C               	movf	FNC@l,w
  7331  0396  0086               	movwf	6
  7332  0397  0187               	clrf	7
  7333  0398  0801               	movf	1,w
  7334  0399  00A2               	movwf	??_FNC
  7335  039A  0822               	movf	??_FNC,w
  7336  039B  0021               	movlb	1	; select bank1
  7337  039C  00B6               	movwf	_data_sent^(0+128)
  7338                           
  7339                           ;INTERRUPT.h: 294: commondUART();
  7340  039D  3188  207B  3180   	fcall	_commondUART
  7341                           
  7342                           ;INTERRUPT.h: 295: UART_byte_receive();
  7343  03A0  3188  201D  3180   	fcall	_UART_byte_receive
  7344                           
  7345                           ;INTERRUPT.h: 296: l++;
  7346  03A3  3001               	movlw	1
  7347  03A4  0020               	movlb	0	; select bank0
  7348  03A5  00A2               	movwf	??_FNC
  7349  03A6  0822               	movf	??_FNC,w
  7350  03A7  07AC               	addwf	FNC@l,f
  7351                           
  7352                           ;INTERRUPT.h: 297: data_sent = *l;
  7353  03A8  082C               	movf	FNC@l,w
  7354  03A9  0086               	movwf	6
  7355  03AA  0187               	clrf	7
  7356  03AB  0801               	movf	1,w
  7357  03AC  2C1E               	goto	L9
  7358  03AD                     i1l3644:	
  7359                           ;INTERRUPT.h: 301: }
  7360                           
  7361                           ;INTERRUPT.h: 299: UART_byte_receive();
  7362                           
  7363                           ;INTERRUPT.h: 298: commondUART();
  7364                           
  7365                           
  7366                           ;INTERRUPT.h: 302: else if(komut=='B')
  7367  03AD  3042               	movlw	66
  7368  03AE  0020               	movlb	0	; select bank0
  7369  03AF  064F               	xorwf	_komut,w
  7370  03B0  1D03               	btfss	3,2
  7371  03B1  2BC0               	goto	i1l3656
  7372                           
  7373                           ;INTERRUPT.h: 303: {
  7374                           ;INTERRUPT.h: 304: data_sent = sicaklik;
  7375  03B2  0853               	movf	_sicaklik,w
  7376  03B3  00A2               	movwf	??_FNC
  7377  03B4  0822               	movf	??_FNC,w
  7378  03B5  0021               	movlb	1	; select bank1
  7379  03B6  00B6               	movwf	_data_sent^(0+128)
  7380                           
  7381                           ;INTERRUPT.h: 305: commondUART();
  7382  03B7  3188  207B  3180   	fcall	_commondUART
  7383                           
  7384                           ;INTERRUPT.h: 306: UART_byte_receive();
  7385  03BA  3188  201D  3180   	fcall	_UART_byte_receive
  7386                           
  7387                           ;INTERRUPT.h: 308: data_sent = nem;
  7388  03BD  0020               	movlb	0	; select bank0
  7389  03BE  0850               	movf	_nem,w
  7390  03BF  2C1E               	goto	L9
  7391  03C0                     i1l3656:	
  7392                           ;INTERRUPT.h: 312: }
  7393                           
  7394                           ;INTERRUPT.h: 310: UART_byte_receive();
  7395                           
  7396                           ;INTERRUPT.h: 309: commondUART();
  7397                           
  7398                           
  7399                           ;INTERRUPT.h: 313: else if(komut == 'Y')
  7400  03C0  3059               	movlw	89
  7401  03C1  0020               	movlb	0	; select bank0
  7402  03C2  064F               	xorwf	_komut,w
  7403  03C3  1D03               	btfss	3,2
  7404  03C4  2BE0               	goto	i1l3670
  7405                           
  7406                           ;INTERRUPT.h: 314: {
  7407                           ;INTERRUPT.h: 315: for(eeprom_index=0; eeprom_index != 8;eeprom_index++)
  7408  03C5  01CB               	clrf	_eeprom_index
  7409  03C6                     L10:	
  7410  03C6  3008               	movlw	8
  7411  03C7  064B               	xorwf	_eeprom_index,w
  7412  03C8  1903               	btfsc	3,2
  7413  03C9  2C28               	goto	i1l3696
  7414                           
  7415                           ;INTERRUPT.h: 316: {
  7416                           ;INTERRUPT.h: 317: data_sent = EEPROM_ReadByte(248+eeprom_index);
  7417  03CA  084B               	movf	_eeprom_index,w
  7418  03CB  3EF8               	addlw	248
  7419  03CC  3188  20E3  3180   	fcall	i1_EEPROM_ReadByte
  7420  03CF  0020               	movlb	0	; select bank0
  7421  03D0  00A2               	movwf	??_FNC
  7422  03D1  0822               	movf	??_FNC,w
  7423  03D2  0021               	movlb	1	; select bank1
  7424  03D3  00B6               	movwf	_data_sent^(0+128)
  7425                           
  7426                           ;INTERRUPT.h: 318: commondUART();
  7427  03D4  3188  207B  3180   	fcall	_commondUART
  7428                           
  7429                           ;INTERRUPT.h: 319: UART_byte_receive();
  7430  03D7  3188  201D  3180   	fcall	_UART_byte_receive
  7431  03DA  3001               	movlw	1
  7432  03DB  0020               	movlb	0	; select bank0
  7433  03DC  00A2               	movwf	??_FNC
  7434  03DD  0822               	movf	??_FNC,w
  7435  03DE  07CB               	addwf	_eeprom_index,f
  7436  03DF  2BC6               	goto	L10
  7437  03E0                     i1l3670:	
  7438                           ;INTERRUPT.h: 320: }
  7439                           ;INTERRUPT.h: 321: }
  7440                           
  7441                           
  7442                           ;INTERRUPT.h: 322: else if( komut == '!')
  7443  03E0  3021               	movlw	33
  7444  03E1  064F               	xorwf	_komut,w
  7445  03E2  1D03               	btfss	3,2
  7446  03E3  2BFE               	goto	i1l3680
  7447                           
  7448                           ;INTERRUPT.h: 323: {
  7449                           ;INTERRUPT.h: 326: receiveStruct();
  7450  03E4  3188  209F  3180   	fcall	_receiveStruct
  7451                           
  7452                           ;INTERRUPT.h: 328: if(received_data == 1)LCD_LED_ON = 1;
  7453  03E7  0020               	movlb	0	; select bank0
  7454  03E8  0351               	decf	_received_data,w
  7455  03E9  1D03               	btfss	3,2
  7456  03EA  2BED               	goto	i1l3678
  7457  03EB  01C7               	clrf	_LCD_LED_ON
  7458  03EC  0AC7               	incf	_LCD_LED_ON,f
  7459  03ED                     i1l3678:	
  7460                           
  7461                           ;INTERRUPT.h: 329: shift_reg_set_pin_lcd((received_data >> 4)&0xf, received_data&0xf);
  7462  03ED  0851               	movf	_received_data,w
  7463  03EE  390F               	andlw	15
  7464  03EF  00A2               	movwf	??_FNC
  7465  03F0  0822               	movf	??_FNC,w
  7466  03F1  00FB               	movwf	i1shift_reg_set_pin_lcd@pin_value
  7467  03F2  0851               	movf	_received_data,w
  7468  03F3  00A3               	movwf	??_FNC+1
  7469  03F4  3004               	movlw	4
  7470  03F5                     u381_25:	
  7471  03F5  36A3               	lsrf	??_FNC+1,f
  7472  03F6  0B89               	decfsz	9,f
  7473  03F7  2BF5               	goto	u381_25
  7474  03F8  0823               	movf	??_FNC+1,w
  7475  03F9  390F               	andlw	15
  7476  03FA  318A  22DD  3180   	fcall	i1_shift_reg_set_pin_lcd
  7477                           
  7478                           ;INTERRUPT.h: 331: }
  7479  03FD  2C28               	goto	i1l3696
  7480  03FE                     i1l3680:	
  7481                           
  7482                           ;INTERRUPT.h: 332: else if(komut=='*')
  7483  03FE  302A               	movlw	42
  7484  03FF  0020               	movlb	0	; select bank0
  7485  0400  064F               	xorwf	_komut,w
  7486  0401  1D03               	btfss	3,2
  7487  0402  2C16               	goto	i1l3688
  7488                           
  7489                           ;INTERRUPT.h: 333: {
  7490                           ;INTERRUPT.h: 336: receiveStruct();
  7491  0403  3188  209F  3180   	fcall	_receiveStruct
  7492                           
  7493                           ;INTERRUPT.h: 337: PINS = received_data;
  7494  0406  0020               	movlb	0	; select bank0
  7495  0407  0851               	movf	_received_data,w
  7496  0408  00A2               	movwf	??_FNC
  7497  0409  0822               	movf	??_FNC,w
  7498  040A  0021               	movlb	1	; select bank1
  7499  040B  00AE               	movwf	_PINS^(0+128)
  7500                           
  7501                           ;INTERRUPT.h: 338: LoadDataCenter(6, received_data);
  7502  040C  0020               	movlb	0	; select bank0
  7503  040D  0851               	movf	_received_data,w
  7504  040E  00A2               	movwf	??_FNC
  7505  040F  0822               	movf	??_FNC,w
  7506  0410  00F6               	movwf	i1LoadDataCenter@center_data
  7507  0411  3006               	movlw	6
  7508  0412  318C  244B  3180   	fcall	i1_LoadDataCenter
  7509                           
  7510                           ;INTERRUPT.h: 339: }
  7511  0415  2C28               	goto	i1l3696
  7512  0416                     i1l3688:	
  7513                           
  7514                           ;INTERRUPT.h: 340: else if(komut=='-')
  7515  0416  302D               	movlw	45
  7516  0417  0020               	movlb	0	; select bank0
  7517  0418  064F               	xorwf	_komut,w
  7518  0419  1D03               	btfss	3,2
  7519  041A  2C28               	goto	i1l3696
  7520                           
  7521                           ;INTERRUPT.h: 341: {
  7522                           ;INTERRUPT.h: 342: data_sent = PINS;
  7523  041B  0021               	movlb	1	; select bank1
  7524  041C  082E               	movf	_PINS^(0+128),w
  7525  041D  0020               	movlb	0	; select bank0
  7526  041E                     L9:	
  7527  041E  00A2               	movwf	??_FNC
  7528  041F  0822               	movf	??_FNC,w
  7529  0420  0021               	movlb	1	; select bank1
  7530  0421  00B6               	movwf	_data_sent^(0+128)
  7531                           
  7532                           ;INTERRUPT.h: 343: commondUART();
  7533  0422  3188  207B  3180   	fcall	_commondUART
  7534                           
  7535                           ;INTERRUPT.h: 344: UART_byte_receive();
  7536  0425  3188  201D  3180   	fcall	_UART_byte_receive
  7537  0428                     i1l3696:	
  7538                           
  7539                           ;INTERRUPT.h: 345: }
  7540                           ;INTERRUPT.h: 359: UPDATE_NEAREST_ALARM = 1;
  7541  0428  0021               	movlb	1	; select bank1
  7542  0429  01AF               	clrf	_UPDATE_NEAREST_ALARM^(0+128)
  7543  042A  0AAF               	incf	_UPDATE_NEAREST_ALARM^(0+128),f
  7544                           
  7545                           ;INTERRUPT.h: 362: sendT();
  7546  042B  3188  2053  3180   	fcall	_sendT
  7547  042E                     i1l3700:	
  7548                           
  7549                           ;INTERRUPT.h: 363: }
  7550                           ;INTERRUPT.h: 366: if(IOCIF)
  7551  042E  1C0B               	btfss	11,0	;volatile
  7552  042F  2C33               	goto	i1l628
  7553                           
  7554                           ;INTERRUPT.h: 367: {
  7555                           ;INTERRUPT.h: 368: pinControl();
  7556  0430  318B  239B         	fcall	_pinControl
  7557                           
  7558                           ;INTERRUPT.h: 369: IOCIF = 0;
  7559  0432  100B               	bcf	11,0	;volatile
  7560  0433                     i1l628:	
  7561  0433  0020               	movlb	0	; select bank0
  7562  0434  0826               	movf	??_FNC+4,w
  7563  0435  00FF               	movwf	127
  7564  0436  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7565  0437  0009               	retfie
  7566  0438                     __end_of_FNC:	
  7567                           
  7568                           	psect	text44
  7569  0A50                     __ptext44:	
  7570 ;; *************** function i1___wmul *****************
  7571 ;; Defined at:
  7572 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  multiplier      2    0[COMMON] unsigned int 
  7575 ;;  multiplicand    2    2[COMMON] unsigned int 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  __wmul          2    4[COMMON] unsigned int 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  2    0[COMMON] unsigned int 
  7580 ;; Registers used:
  7581 ;;		wreg, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7587 ;;      Params:         4       0       0       0
  7588 ;;      Locals:         2       0       0       0
  7589 ;;      Temps:          0       0       0       0
  7590 ;;      Totals:         6       0       0       0
  7591 ;;Total ram usage:        6 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_FNC
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           
  7601                           ;psect for function i1___wmul
  7602  0A50                     i1___wmul:	
  7603                           
  7604                           ;incstack = 0
  7605                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7606  0A50  01F4               	clrf	i1___wmul@product
  7607  0A51  01F5               	clrf	i1___wmul@product+1
  7608  0A52                     i1l3350:	
  7609  0A52  1C70               	btfss	i1___wmul@multiplier,0
  7610  0A53  2A58               	goto	i1l744
  7611  0A54  0872               	movf	i1___wmul@multiplicand,w
  7612  0A55  07F4               	addwf	i1___wmul@product,f
  7613  0A56  0873               	movf	i1___wmul@multiplicand+1,w
  7614  0A57  3DF5               	addwfc	i1___wmul@product+1,f
  7615  0A58                     i1l744:	
  7616  0A58  3001               	movlw	1
  7617  0A59                     u322_25:	
  7618  0A59  35F2               	lslf	i1___wmul@multiplicand,f
  7619  0A5A  0DF3               	rlf	i1___wmul@multiplicand+1,f
  7620  0A5B  0B89               	decfsz	9,f
  7621  0A5C  2A59               	goto	u322_25
  7622  0A5D  3001               	movlw	1
  7623  0A5E                     u323_25:	
  7624  0A5E  36F1               	lsrf	i1___wmul@multiplier+1,f
  7625  0A5F  0CF0               	rrf	i1___wmul@multiplier,f
  7626  0A60  0B89               	decfsz	9,f
  7627  0A61  2A5E               	goto	u323_25
  7628  0A62  0870               	movf	i1___wmul@multiplier,w
  7629  0A63  0471               	iorwf	i1___wmul@multiplier+1,w
  7630  0A64  1D03               	btfss	3,2
  7631  0A65  2A52               	goto	i1l3350
  7632  0A66  0875               	movf	i1___wmul@product+1,w
  7633  0A67  00F1               	movwf	?i1___wmul+1
  7634  0A68  0874               	movf	i1___wmul@product,w
  7635  0A69  00F0               	movwf	?i1___wmul
  7636  0A6A  0008               	return
  7637  0A6B                     __end_ofi1___wmul:	
  7638                           
  7639                           	psect	text45
  7640  094B                     __ptext45:	
  7641 ;; *************** function i1___bmul *****************
  7642 ;; Defined at:
  7643 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  multiplier      1    wreg     unsigned char 
  7646 ;;  multiplicand    1    0[COMMON] unsigned char 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  multiplier      1    3[COMMON] unsigned char 
  7649 ;;  __bmul          1    2[COMMON] unsigned char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      unsigned char 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7659 ;;      Params:         1       0       0       0
  7660 ;;      Locals:         2       0       0       0
  7661 ;;      Temps:          1       0       0       0
  7662 ;;      Totals:         4       0       0       0
  7663 ;;Total ram usage:        4 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_FNC
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           
  7673                           ;psect for function i1___bmul
  7674  094B                     i1___bmul:	
  7675                           
  7676                           ;incstack = 0
  7677                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  7678                           ;i1___bmul@multiplier stored from wreg
  7679  094B  00F3               	movwf	i1___bmul@multiplier
  7680  094C  01F2               	clrf	i1___bmul@product
  7681  094D                     i1l3364:	
  7682  094D  1C73               	btfss	i1___bmul@multiplier,0
  7683  094E  2953               	goto	i1l3368
  7684  094F  0870               	movf	i1___bmul@multiplicand,w
  7685  0950  00F1               	movwf	??i1___bmul
  7686  0951  0871               	movf	??i1___bmul,w
  7687  0952  07F2               	addwf	i1___bmul@product,f
  7688  0953                     i1l3368:	
  7689  0953  1003               	clrc
  7690  0954  0DF0               	rlf	i1___bmul@multiplicand,f
  7691  0955  1003               	clrc
  7692  0956  0CF3               	rrf	i1___bmul@multiplier,f
  7693  0957  0873               	movf	i1___bmul@multiplier,w
  7694  0958  1D03               	btfss	3,2
  7695  0959  294D               	goto	i1l3364
  7696  095A  0872               	movf	i1___bmul@product,w
  7697  095B  0008               	return
  7698  095C                     __end_ofi1___bmul:	
  7699                           
  7700                           	psect	text46
  7701  08E3                     __ptext46:	
  7702 ;; *************** function i1_EEPROM_ReadByte *****************
  7703 ;; Defined at:
  7704 ;;		line 37 in file "EEPROM.h"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  address         1    wreg     unsigned char 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  address         1    0[COMMON] unsigned char 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      unsigned char 
  7711 ;; Registers used:
  7712 ;;		wreg
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7718 ;;      Params:         0       0       0       0
  7719 ;;      Locals:         1       0       0       0
  7720 ;;      Temps:          0       0       0       0
  7721 ;;      Totals:         1       0       0       0
  7722 ;;Total ram usage:        1 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_FNC
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function i1_EEPROM_ReadByte
  7733  08E3                     i1_EEPROM_ReadByte:	
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in i1_EEPROM_ReadByte: [wreg]
  7737                           ;i1EEPROM_ReadByte@address stored from wreg
  7738  08E3  00F0               	movwf	i1EEPROM_ReadByte@address
  7739                           
  7740                           ;EEPROM.h: 39: EEPGD = 0;
  7741  08E4  0023               	movlb	3	; select bank3
  7742  08E5  1395               	bcf	21,7	;volsfr
  7743                           
  7744                           ;EEPROM.h: 40: CFGS = 0;
  7745  08E6  1315               	bcf	21,6	;volsfr
  7746                           
  7747                           ;EEPROM.h: 41: EEADRL = address;
  7748  08E7  0870               	movf	i1EEPROM_ReadByte@address,w
  7749  08E8  0091               	movwf	17	;volatile
  7750                           
  7751                           ;EEPROM.h: 42: RD = 1;
  7752  08E9  1415               	bsf	21,0	;volsfr
  7753  08EA                     i1l342:	
  7754                           ;EEPROM.h: 43: while(RD);
  7755                           
  7756  08EA  1815               	btfsc	21,0	;volsfr
  7757  08EB  28EA               	goto	i1l342
  7758                           
  7759                           ;EEPROM.h: 44: EEIF = 0;
  7760  08EC  0020               	movlb	0	; select bank0
  7761  08ED  1212               	bcf	18,4	;volatile
  7762                           
  7763                           ;EEPROM.h: 45: return EEDATL;
  7764  08EE  0023               	movlb	3	; select bank3
  7765  08EF  0813               	movf	19,w	;volatile
  7766  08F0  0008               	return
  7767  08F1                     __end_ofi1_EEPROM_ReadByte:	
  7768                           
  7769                           	psect	text47
  7770  0863                     __ptext47:	
  7771 ;; *************** function i1_EEPROM24C32_read_byte *****************
  7772 ;; Defined at:
  7773 ;;		line 56 in file "EEPROM24C32.h"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  address         2    9[COMMON] unsigned int 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      unsigned char 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0, pclath, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7787 ;;      Params:         2       0       0       0
  7788 ;;      Locals:         0       0       0       0
  7789 ;;      Temps:          0       0       0       0
  7790 ;;      Totals:         2       0       0       0
  7791 ;;Total ram usage:        2 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    2
  7794 ;; This function calls:
  7795 ;;		i1_Generic_read_byte
  7796 ;; This function is called by:
  7797 ;;		_FNC
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           
  7802                           ;psect for function i1_EEPROM24C32_read_byte
  7803  0863                     i1_EEPROM24C32_read_byte:	
  7804                           
  7805                           ;EEPROM24C32.h: 58: return Generic_read_byte(0b10100000, address);
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in i1_EEPROM24C32_read_byte: [wreg+status,2+status,0+pclath+cstack]
  7809  0863  087A               	movf	i1EEPROM24C32_read_byte@address+1,w
  7810  0864  00F5               	movwf	i1Generic_read_byte@address+1
  7811  0865  0879               	movf	i1EEPROM24C32_read_byte@address,w
  7812  0866  00F4               	movwf	i1Generic_read_byte@address
  7813  0867  30A0               	movlw	160
  7814  0868  3187  27D0         	fcall	i1_Generic_read_byte
  7815  086A  0008               	return
  7816  086B                     __end_ofi1_EEPROM24C32_read_byte:	
  7817                           
  7818                           	psect	text48
  7819  07D0                     __ptext48:	
  7820 ;; *************** function i1_Generic_read_byte *****************
  7821 ;; Defined at:
  7822 ;;		line 29 in file "EEPROM24C32.h"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  dev_id          1    wreg     unsigned char 
  7825 ;;  address         2    4[COMMON] unsigned int 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  dev_id          1    8[COMMON] unsigned char 
  7828 ;;  Generic_read    1    7[COMMON] unsigned char 
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      unsigned char 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2, status,0, pclath, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7838 ;;      Params:         2       0       0       0
  7839 ;;      Locals:         2       0       0       0
  7840 ;;      Temps:          1       0       0       0
  7841 ;;      Totals:         5       0       0       0
  7842 ;;Total ram usage:        5 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    1
  7845 ;; This function calls:
  7846 ;;		i1_DELAY
  7847 ;;		i1_I2C_SendNACK
  7848 ;;		i1_I2C_Start
  7849 ;;		i1_I2C_Stop
  7850 ;;		i1_I2C_data_receive
  7851 ;;		i1_I2C_data_send
  7852 ;; This function is called by:
  7853 ;;		i1_EEPROM24C32_read_byte
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function i1_Generic_read_byte
  7859  07D0                     i1_Generic_read_byte:	
  7860                           
  7861                           ;incstack = 0
  7862                           ; Regs used in i1_Generic_read_byte: [wreg+status,2+status,0+pclath+cstack]
  7863                           ;i1Generic_read_byte@dev_id stored from wreg
  7864  07D0  00F8               	movwf	i1Generic_read_byte@dev_id
  7865                           
  7866                           ;EEPROM24C32.h: 31: byte received;
  7867                           ;EEPROM24C32.h: 33: I2C_Start();
  7868  07D1  3188  202F  3187   	fcall	i1_I2C_Start
  7869                           
  7870                           ;EEPROM24C32.h: 34: I2C_data_send(dev_id);
  7871  07D4  0878               	movf	i1Generic_read_byte@dev_id,w
  7872  07D5  3189  21D1  3187   	fcall	i1_I2C_data_send
  7873                           
  7874                           ;EEPROM24C32.h: 36: I2C_data_send(address>>8);
  7875  07D8  0875               	movf	i1Generic_read_byte@address+1,w
  7876  07D9  3189  21D1  3187   	fcall	i1_I2C_data_send
  7877                           
  7878                           ;EEPROM24C32.h: 37: I2C_data_send(address&0xff);
  7879  07DC  0874               	movf	i1Generic_read_byte@address,w
  7880  07DD  3189  21D1  3187   	fcall	i1_I2C_data_send
  7881                           
  7882                           ;EEPROM24C32.h: 39: I2C_Stop();
  7883  07E0  3188  2036  3187   	fcall	i1_I2C_Stop
  7884                           
  7885                           ;EEPROM24C32.h: 40: DELAY(5);
  7886  07E3  3005               	movlw	5
  7887  07E4  3189  2192  3187   	fcall	i1_DELAY
  7888                           
  7889                           ;EEPROM24C32.h: 41: I2C_Start();
  7890  07E7  3188  202F  3187   	fcall	i1_I2C_Start
  7891                           
  7892                           ;EEPROM24C32.h: 42: I2C_data_send(dev_id+1);
  7893  07EA  0878               	movf	i1Generic_read_byte@dev_id,w
  7894  07EB  3E01               	addlw	1
  7895  07EC  3189  21D1  3187   	fcall	i1_I2C_data_send
  7896                           
  7897                           ;EEPROM24C32.h: 43: received = I2C_data_receive();
  7898  07EF  3188  20A9  3187   	fcall	i1_I2C_data_receive
  7899  07F2  00F6               	movwf	??i1_Generic_read_byte
  7900  07F3  0876               	movf	??i1_Generic_read_byte,w
  7901  07F4  00F7               	movwf	i1Generic_read_byte@received
  7902                           
  7903                           ;EEPROM24C32.h: 45: I2C_SendNACK();
  7904  07F5  3188  205B  3187   	fcall	i1_I2C_SendNACK
  7905                           
  7906                           ;EEPROM24C32.h: 46: I2C_Stop();
  7907  07F8  3188  2036  3187   	fcall	i1_I2C_Stop
  7908                           
  7909                           ;EEPROM24C32.h: 47: DELAY(5);
  7910  07FB  3005               	movlw	5
  7911  07FC  3189  2192         	fcall	i1_DELAY
  7912                           
  7913                           ;EEPROM24C32.h: 48: return received;
  7914  07FE  0877               	movf	i1Generic_read_byte@received,w
  7915  07FF  0008               	return
  7916  0800                     __end_ofi1_Generic_read_byte:	
  7917                           
  7918                           	psect	text49
  7919  08A9                     __ptext49:	
  7920 ;; *************** function i1_I2C_data_receive *****************
  7921 ;; Defined at:
  7922 ;;		line 221 in file "I2C.h"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      unsigned char 
  7929 ;; Registers used:
  7930 ;;		wreg
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7936 ;;      Params:         0       0       0       0
  7937 ;;      Locals:         0       0       0       0
  7938 ;;      Temps:          0       0       0       0
  7939 ;;      Totals:         0       0       0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		i1_Generic_read_byte
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function i1_I2C_data_receive
  7951  08A9                     i1_I2C_data_receive:	
  7952                           
  7953                           ;I2C.h: 223: RCEN = 1;
  7954                           
  7955                           ;incstack = 0
  7956                           ; Regs used in i1_I2C_data_receive: [wreg]
  7957  08A9  0024               	movlb	4	; select bank4
  7958  08AA  1596               	bsf	22,3	;volatile
  7959  08AB                     i1l197:	
  7960                           ;I2C.h: 225: while(BF == 0 );
  7961                           
  7962  08AB  1C14               	btfss	20,0	;volatile
  7963  08AC  28AB               	goto	i1l197
  7964  08AD                     i1l200:	
  7965                           ;I2C.h: 226: while(SSP1IF==0);
  7966                           
  7967  08AD  0020               	movlb	0	; select bank0
  7968  08AE  1D91               	btfss	17,3	;volatile
  7969  08AF  28AD               	goto	i1l200
  7970                           
  7971                           ;I2C.h: 227: SSP1IF = 0;
  7972  08B0  1191               	bcf	17,3	;volatile
  7973                           
  7974                           ;I2C.h: 228: return SSPBUF;
  7975  08B1  0024               	movlb	4	; select bank4
  7976  08B2  0811               	movf	17,w	;volatile
  7977  08B3  0008               	return
  7978  08B4                     __end_ofi1_I2C_data_receive:	
  7979                           
  7980                           	psect	text50
  7981  085B                     __ptext50:	
  7982 ;; *************** function i1_I2C_SendNACK *****************
  7983 ;; Defined at:
  7984 ;;		line 323 in file "I2C.h"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		None
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7998 ;;      Params:         0       0       0       0
  7999 ;;      Locals:         0       0       0       0
  8000 ;;      Temps:          0       0       0       0
  8001 ;;      Totals:         0       0       0       0
  8002 ;;Total ram usage:        0 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		i1_Generic_read_byte
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function i1_I2C_SendNACK
  8013  085B                     i1_I2C_SendNACK:	
  8014                           
  8015                           ;I2C.h: 325: ACKDT = 1 ;
  8016                           
  8017                           ;incstack = 0
  8018                           ; Regs used in i1_I2C_SendNACK: []
  8019  085B  0024               	movlb	4	; select bank4
  8020  085C  1696               	bsf	22,5	;volatile
  8021                           
  8022                           ;I2C.h: 326: ACKEN = 1;
  8023  085D  1616               	bsf	22,4	;volatile
  8024  085E                     i1l224:	
  8025                           ;I2C.h: 327: while (ACKEN);
  8026                           
  8027  085E  1A16               	btfsc	22,4	;volatile
  8028  085F  285E               	goto	i1l224
  8029                           
  8030                           ;I2C.h: 328: SSP1IF = 0;
  8031  0860  0020               	movlb	0	; select bank0
  8032  0861  1191               	bcf	17,3	;volatile
  8033  0862  0008               	return
  8034  0863                     __end_ofi1_I2C_SendNACK:	
  8035                           
  8036                           	psect	text51
  8037  0BEF                     __ptext51:	
  8038 ;; *************** function i1_ADC_read *****************
  8039 ;; Defined at:
  8040 ;;		line 50 in file "ADC.h"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  pin             1    wreg     unsigned char 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  pin             1    0[BANK0 ] unsigned char 
  8045 ;;  ADC_read        1    1[BANK0 ] PTR unsigned char 
  8046 ;;		 -> measured_adc_value(2), 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8056 ;;      Params:         0       0       0       0
  8057 ;;      Locals:         0       2       0       0
  8058 ;;      Temps:          1       0       0       0
  8059 ;;      Totals:         1       2       0       0
  8060 ;;Total ram usage:        3 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    5
  8063 ;; This function calls:
  8064 ;;		i1_DELAY
  8065 ;;		i1_INSELECT_select
  8066 ;; This function is called by:
  8067 ;;		_FNC
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           
  8072                           ;psect for function i1_ADC_read
  8073  0BEF                     i1_ADC_read:	
  8074                           
  8075                           ;incstack = 0
  8076 ;; hardware stack exceeded
  8077                           ; Regs used in i1_ADC_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8078                           ;i1ADC_read@pin stored from wreg
  8079  0BEF  0020               	movlb	0	; select bank0
  8080  0BF0  00A0               	movwf	i1ADC_read@pin
  8081                           
  8082                           ;ADC.h: 54: INSELECT_select(pin);
  8083  0BF1  0820               	movf	i1ADC_read@pin,w
  8084  0BF2  3189  212B  318B   	fcall	i1_INSELECT_select
  8085                           
  8086                           ;ADC.h: 56: ANSA4 = 1;
  8087  0BF5  0023               	movlb	3	; select bank3
  8088  0BF6  160C               	bsf	12,4	;volatile
  8089                           
  8090                           ;ADC.h: 57: DELAY(100);
  8091  0BF7  3064               	movlw	100
  8092  0BF8  3189  2192  318B   	fcall	i1_DELAY
  8093                           
  8094                           ;ADC.h: 58: byte * m = (byte*)&measured_adc_value;
  8095  0BFB  305A               	movlw	(low (_measured_adc_value| 0))& (0+255)
  8096  0BFC  00FD               	movwf	??i1_ADC_read
  8097  0BFD  087D               	movf	??i1_ADC_read,w
  8098  0BFE  0020               	movlb	0	; select bank0
  8099  0BFF  00A1               	movwf	i1ADC_read@m
  8100                           
  8101                           ;ADC.h: 59: ADGO = 1;
  8102  0C00  0021               	movlb	1	; select bank1
  8103  0C01  149D               	bsf	29,1	;volatile
  8104  0C02                     i1l356:	
  8105                           ;ADC.h: 60: while(ADGO);
  8106                           
  8107  0C02  189D               	btfsc	29,1	;volatile
  8108  0C03  2C02               	goto	i1l356
  8109                           
  8110                           ;ADC.h: 62: *m = ADRESL;
  8111  0C04  081B               	movf	27,w	;volatile
  8112  0C05  00FD               	movwf	??i1_ADC_read
  8113  0C06  0020               	movlb	0	; select bank0
  8114  0C07  0821               	movf	i1ADC_read@m,w
  8115  0C08  0086               	movwf	6
  8116  0C09  0187               	clrf	7
  8117  0C0A  087D               	movf	??i1_ADC_read,w
  8118  0C0B  0081               	movwf	1
  8119                           
  8120                           ;ADC.h: 63: m++;
  8121  0C0C  3001               	movlw	1
  8122  0C0D  00FD               	movwf	??i1_ADC_read
  8123  0C0E  087D               	movf	??i1_ADC_read,w
  8124  0C0F  07A1               	addwf	i1ADC_read@m,f
  8125                           
  8126                           ;ADC.h: 64: *m = ADRESH;
  8127  0C10  0021               	movlb	1	; select bank1
  8128  0C11  081C               	movf	28,w	;volatile
  8129  0C12  00FD               	movwf	??i1_ADC_read
  8130  0C13  0020               	movlb	0	; select bank0
  8131  0C14  0821               	movf	i1ADC_read@m,w
  8132  0C15  0086               	movwf	6
  8133  0C16  0187               	clrf	7
  8134  0C17  087D               	movf	??i1_ADC_read,w
  8135  0C18  0081               	movwf	1
  8136                           
  8137                           ;ADC.h: 65: ADIF = 0;
  8138  0C19  1311               	bcf	17,6	;volatile
  8139                           
  8140                           ;ADC.h: 66: ANSA4 = 0;
  8141  0C1A  0023               	movlb	3	; select bank3
  8142  0C1B  120C               	bcf	12,4	;volatile
  8143  0C1C  0008               	return
  8144  0C1D                     __end_ofi1_ADC_read:	
  8145                           
  8146                           	psect	text52
  8147  089F                     __ptext52:	
  8148 ;; *************** function _receiveStruct *****************
  8149 ;; Defined at:
  8150 ;;		line 72 in file "INTERRUPT.h"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;		None
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, status,2, status,0, pclath, cstack
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8164 ;;      Params:         0       0       0       0
  8165 ;;      Locals:         0       0       0       0
  8166 ;;      Temps:          1       0       0       0
  8167 ;;      Totals:         1       0       0       0
  8168 ;;Total ram usage:        1 bytes
  8169 ;; Hardware stack levels used:    1
  8170 ;; Hardware stack levels required when called:    2
  8171 ;; This function calls:
  8172 ;;		_UART_byte_receive
  8173 ;;		_sendT
  8174 ;; This function is called by:
  8175 ;;		_FNC
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           
  8180                           ;psect for function _receiveStruct
  8181  089F                     _receiveStruct:	
  8182                           
  8183                           ;INTERRUPT.h: 74: received_data = UART_byte_receive();
  8184                           
  8185                           ;incstack = 0
  8186                           ; Regs used in _receiveStruct: [wreg+status,2+status,0+pclath+cstack]
  8187  089F  3188  201D  3188   	fcall	_UART_byte_receive
  8188  08A2  00F4               	movwf	??_receiveStruct
  8189  08A3  0874               	movf	??_receiveStruct,w
  8190  08A4  0020               	movlb	0	; select bank0
  8191  08A5  00D1               	movwf	_received_data
  8192                           
  8193                           ;INTERRUPT.h: 75: sendT();
  8194  08A6  3188  2053         	fcall	_sendT
  8195  08A8  0008               	return
  8196  08A9                     __end_of_receiveStruct:	
  8197                           
  8198                           	psect	text53
  8199  0853                     __ptext53:	
  8200 ;; *************** function _sendT *****************
  8201 ;; Defined at:
  8202 ;;		line 67 in file "INTERRUPT.h"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;		None
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      void 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0, pclath, cstack
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8216 ;;      Params:         0       0       0       0
  8217 ;;      Locals:         0       0       0       0
  8218 ;;      Temps:          0       0       0       0
  8219 ;;      Totals:         0       0       0       0
  8220 ;;Total ram usage:        0 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:    1
  8223 ;; This function calls:
  8224 ;;		_UART_byte_send
  8225 ;;		i1_DELAY
  8226 ;; This function is called by:
  8227 ;;		_receiveStruct
  8228 ;;		_FNC
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           
  8233                           ;psect for function _sendT
  8234  0853                     _sendT:	
  8235                           
  8236                           ;INTERRUPT.h: 69: UART_byte_send('T');
  8237                           
  8238                           ;incstack = 0
  8239                           ; Regs used in _sendT: [wreg+status,2+status,0+pclath+cstack]
  8240  0853  3054               	movlw	84
  8241  0854  3188  204B  3188   	fcall	_UART_byte_send
  8242                           
  8243                           ;INTERRUPT.h: 70: DELAY(2);
  8244  0857  3002               	movlw	2
  8245  0858  3189  2192         	fcall	i1_DELAY
  8246  085A  0008               	return
  8247  085B                     __end_of_sendT:	
  8248                           
  8249                           	psect	text54
  8250  081D                     __ptext54:	
  8251 ;; *************** function _UART_byte_receive *****************
  8252 ;; Defined at:
  8253 ;;		line 25 in file "UART.h"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;		None
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      unsigned char 
  8260 ;; Registers used:
  8261 ;;		wreg
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8267 ;;      Params:         0       0       0       0
  8268 ;;      Locals:         0       0       0       0
  8269 ;;      Temps:          0       0       0       0
  8270 ;;      Totals:         0       0       0       0
  8271 ;;Total ram usage:        0 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_receiveStruct
  8277 ;;		_FNC
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           
  8282                           ;psect for function _UART_byte_receive
  8283  081D                     _UART_byte_receive:	
  8284  081D                     i1l179:	
  8285                           ;UART.h: 27: while ( !RCIF ) ;
  8286                           
  8287                           ;incstack = 0
  8288                           ; Regs used in _UART_byte_receive: [wreg]
  8289                           
  8290  081D  0020               	movlb	0	; select bank0
  8291  081E  1E91               	btfss	17,5	;volatile
  8292  081F  281D               	goto	i1l179
  8293                           
  8294                           ;UART.h: 28: return RCREG ;
  8295  0820  0023               	movlb	3	; select bank3
  8296  0821  0819               	movf	25,w	;volatile
  8297  0822  0008               	return
  8298  0823                     __end_of_UART_byte_receive:	
  8299                           
  8300                           	psect	text55
  8301  0B9B                     __ptext55:	
  8302 ;; *************** function _pinControl *****************
  8303 ;; Defined at:
  8304 ;;		line 43 in file "INTERRUPT.h"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;		None
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		wreg, status,2, status,0, pclath, cstack
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8318 ;;      Params:         0       0       0       0
  8319 ;;      Locals:         0       0       0       0
  8320 ;;      Temps:          0       1       0       0
  8321 ;;      Totals:         0       1       0       0
  8322 ;;Total ram usage:        1 bytes
  8323 ;; Hardware stack levels used:    1
  8324 ;; Hardware stack levels required when called:    5
  8325 ;; This function calls:
  8326 ;;		i1_INSELECT_select
  8327 ;;		i1_shift_reg_set_pin_lcd
  8328 ;; This function is called by:
  8329 ;;		_FNC
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           
  8334                           ;psect for function _pinControl
  8335  0B9B                     _pinControl:	
  8336                           
  8337                           ;INTERRUPT.h: 45: INSELECT_select(3);
  8338                           
  8339                           ;incstack = 0
  8340 ;; hardware stack exceeded
  8341                           ; Regs used in _pinControl: [wreg+status,2+status,0+pclath+cstack]
  8342  0B9B  3003               	movlw	3
  8343  0B9C  3189  212B  318B   	fcall	i1_INSELECT_select
  8344                           
  8345                           ;INTERRUPT.h: 46: if(RA4) {shift_reg_set_pin_lcd(7, 0); }
  8346  0B9F  0020               	movlb	0	; select bank0
  8347  0BA0  1E0C               	btfss	12,4	;volatile
  8348  0BA1  2BA7               	goto	i1l526
  8349  0BA2  01FB               	clrf	i1shift_reg_set_pin_lcd@pin_value
  8350  0BA3  3007               	movlw	7
  8351  0BA4  318A  22DD  318B   	fcall	i1_shift_reg_set_pin_lcd
  8352  0BA7                     i1l526:	
  8353                           
  8354                           ;INTERRUPT.h: 48: INSELECT_select(2);
  8355  0BA7  3002               	movlw	2
  8356  0BA8  3189  212B  318B   	fcall	i1_INSELECT_select
  8357                           
  8358                           ;INTERRUPT.h: 49: if(RA4){DISPLAY_POEM = 1; }
  8359  0BAB  0020               	movlb	0	; select bank0
  8360  0BAC  1E0C               	btfss	12,4	;volatile
  8361  0BAD  2BB0               	goto	i1l3280
  8362  0BAE  01C5               	clrf	_DISPLAY_POEM
  8363  0BAF  0AC5               	incf	_DISPLAY_POEM,f
  8364  0BB0                     i1l3280:	
  8365                           
  8366                           ;INTERRUPT.h: 50: INSELECT_select(4);
  8367  0BB0  3004               	movlw	4
  8368  0BB1  3189  212B  318B   	fcall	i1_INSELECT_select
  8369                           
  8370                           ;INTERRUPT.h: 51: if(RA4){
  8371  0BB4  0020               	movlb	0	; select bank0
  8372  0BB5  1E0C               	btfss	12,4	;volatile
  8373  0BB6  0008               	return
  8374                           
  8375                           ;INTERRUPT.h: 53: LCD_LED_ON ^= 1;
  8376  0BB7  3001               	movlw	1
  8377  0BB8  00A1               	movwf	??_pinControl
  8378  0BB9  0821               	movf	??_pinControl,w
  8379  0BBA  06C7               	xorwf	_LCD_LED_ON,f
  8380                           
  8381                           ;INTERRUPT.h: 54: shift_reg_set_pin_lcd(0, LCD_LED_ON);
  8382  0BBB  0847               	movf	_LCD_LED_ON,w
  8383  0BBC  00A1               	movwf	??_pinControl
  8384  0BBD  0821               	movf	??_pinControl,w
  8385  0BBE  00FB               	movwf	i1shift_reg_set_pin_lcd@pin_value
  8386  0BBF  3000               	movlw	0
  8387  0BC0  318A  22DD         	fcall	i1_shift_reg_set_pin_lcd
  8388  0BC2  0008               	return
  8389  0BC3                     __end_of_pinControl:	
  8390                           
  8391                           	psect	text56
  8392  0ADD                     __ptext56:	
  8393 ;; *************** function i1_shift_reg_set_pin_lcd *****************
  8394 ;; Defined at:
  8395 ;;		line 42 in file "LCD.h"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;  pin_number      1    wreg     unsigned char 
  8398 ;;  pin_value       1   11[COMMON] unsigned char 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  pin_number      1    0[BANK0 ] unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0, pclath, cstack
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8410 ;;      Params:         1       0       0       0
  8411 ;;      Locals:         0       1       0       0
  8412 ;;      Temps:          2       0       0       0
  8413 ;;      Totals:         3       1       0       0
  8414 ;;Total ram usage:        4 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:    4
  8417 ;; This function calls:
  8418 ;;		i1_LoadDataCenter
  8419 ;; This function is called by:
  8420 ;;		_pinControl
  8421 ;;		_FNC
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           
  8426                           ;psect for function i1_shift_reg_set_pin_lcd
  8427  0ADD                     i1_shift_reg_set_pin_lcd:	
  8428                           
  8429                           ;incstack = 0
  8430                           ; Regs used in i1_shift_reg_set_pin_lcd: [wreg+status,2+status,0+pclath+cstack]
  8431                           ;i1shift_reg_set_pin_lcd@pin_number stored from wreg
  8432  0ADD  0020               	movlb	0	; select bank0
  8433  0ADE  00A0               	movwf	i1shift_reg_set_pin_lcd@pin_number
  8434                           
  8435                           ;LCD.h: 45: if(pin_value)
  8436  0ADF  087B               	movf	i1shift_reg_set_pin_lcd@pin_value,w
  8437  0AE0  1903               	btfsc	3,2
  8438  0AE1  2AEE               	goto	i1l2954
  8439                           
  8440                           ;LCD.h: 46: {
  8441                           ;LCD.h: 47: LCDData |= 1 << (pin_number);
  8442  0AE2  3001               	movlw	1
  8443  0AE3  00FC               	movwf	??i1_shift_reg_set_pin_lcd
  8444  0AE4  0A20               	incf	i1shift_reg_set_pin_lcd@pin_number,w
  8445  0AE5  2AE7               	goto	u281_24
  8446  0AE6                     u281_25:	
  8447  0AE6  35FC               	lslf	??i1_shift_reg_set_pin_lcd,f
  8448  0AE7                     u281_24:	
  8449  0AE7  0B89               	decfsz	9,f
  8450  0AE8  2AE6               	goto	u281_25
  8451  0AE9  087C               	movf	??i1_shift_reg_set_pin_lcd,w
  8452  0AEA  00FD               	movwf	??i1_shift_reg_set_pin_lcd+1
  8453  0AEB  087D               	movf	??i1_shift_reg_set_pin_lcd+1,w
  8454  0AEC  04C6               	iorwf	_LCDData,f
  8455                           
  8456                           ;LCD.h: 48: }
  8457  0AED  2AFA               	goto	i1l2956
  8458  0AEE                     i1l2954:	
  8459                           
  8460                           ;LCD.h: 49: else LCDData &= ~(1 << (pin_number));
  8461  0AEE  3001               	movlw	1
  8462  0AEF  00FC               	movwf	??i1_shift_reg_set_pin_lcd
  8463  0AF0  0A20               	incf	i1shift_reg_set_pin_lcd@pin_number,w
  8464  0AF1  2AF3               	goto	u282_24
  8465  0AF2                     u282_25:	
  8466  0AF2  35FC               	lslf	??i1_shift_reg_set_pin_lcd,f
  8467  0AF3                     u282_24:	
  8468  0AF3  0B89               	decfsz	9,f
  8469  0AF4  2AF2               	goto	u282_25
  8470  0AF5  087C               	movf	??i1_shift_reg_set_pin_lcd,w
  8471  0AF6  3AFF               	xorlw	255
  8472  0AF7  00FD               	movwf	??i1_shift_reg_set_pin_lcd+1
  8473  0AF8  087D               	movf	??i1_shift_reg_set_pin_lcd+1,w
  8474  0AF9  05C6               	andwf	_LCDData,f
  8475  0AFA                     i1l2956:	
  8476                           
  8477                           ;LCD.h: 51: LoadDataCenter(2, LCDData);
  8478  0AFA  0846               	movf	_LCDData,w
  8479  0AFB  00FC               	movwf	??i1_shift_reg_set_pin_lcd
  8480  0AFC  087C               	movf	??i1_shift_reg_set_pin_lcd,w
  8481  0AFD  00F6               	movwf	i1LoadDataCenter@center_data
  8482  0AFE  3002               	movlw	2
  8483  0AFF  318C  244B         	fcall	i1_LoadDataCenter
  8484  0B01  0008               	return
  8485  0B02                     __end_ofi1_shift_reg_set_pin_lcd:	
  8486                           
  8487                           	psect	text57
  8488  092B                     __ptext57:	
  8489 ;; *************** function i1_INSELECT_select *****************
  8490 ;; Defined at:
  8491 ;;		line 30 in file "INSELECT.h"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  input_number    1    wreg     unsigned char 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  input_number    1   12[COMMON] unsigned char 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0, pclath, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8505 ;;      Params:         0       0       0       0
  8506 ;;      Locals:         1       0       0       0
  8507 ;;      Temps:          1       0       0       0
  8508 ;;      Totals:         2       0       0       0
  8509 ;;Total ram usage:        2 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    4
  8512 ;; This function calls:
  8513 ;;		i1_LoadDataCenter
  8514 ;; This function is called by:
  8515 ;;		_pinControl
  8516 ;;		i1_ADC_read
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           
  8521                           ;psect for function i1_INSELECT_select
  8522  092B                     i1_INSELECT_select:	
  8523                           
  8524                           ;incstack = 0
  8525 ;; hardware stack exceeded
  8526                           ; Regs used in i1_INSELECT_select: [wreg+status,2+status,0+pclath+cstack]
  8527                           ;i1INSELECT_select@input_number stored from wreg
  8528  092B  00FC               	movwf	i1INSELECT_select@input_number
  8529                           
  8530                           ;INSELECT.h: 32: inselect =(inselect & 0xf0) |input_number;
  8531  092C  0020               	movlb	0	; select bank0
  8532  092D  084E               	movf	_inselect,w
  8533  092E  39F0               	andlw	240
  8534  092F  047C               	iorwf	i1INSELECT_select@input_number,w
  8535  0930  00FB               	movwf	??i1_INSELECT_select
  8536  0931  087B               	movf	??i1_INSELECT_select,w
  8537  0932  00CE               	movwf	_inselect
  8538                           
  8539                           ;INSELECT.h: 33: LoadDataCenter(3, inselect);
  8540  0933  084E               	movf	_inselect,w
  8541  0934  00FB               	movwf	??i1_INSELECT_select
  8542  0935  087B               	movf	??i1_INSELECT_select,w
  8543  0936  00F6               	movwf	i1LoadDataCenter@center_data
  8544  0937  3003               	movlw	3
  8545  0938  318C  244B         	fcall	i1_LoadDataCenter
  8546  093A  0008               	return
  8547  093B                     __end_ofi1_INSELECT_select:	
  8548                           
  8549                           	psect	text58
  8550  0C4B                     __ptext58:	
  8551 ;; *************** function i1_LoadDataCenter *****************
  8552 ;; Defined at:
  8553 ;;		line 25 in file "LCD.h"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  center_no       1    wreg     unsigned char 
  8556 ;;  center_data     1    6[COMMON] unsigned char 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  center_no       1    9[COMMON] unsigned char 
  8559 ;;  LoadDataCent    1   10[COMMON] char 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, pclath, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8569 ;;      Params:         1       0       0       0
  8570 ;;      Locals:         2       0       0       0
  8571 ;;      Temps:          2       0       0       0
  8572 ;;      Totals:         5       0       0       0
  8573 ;;Total ram usage:        5 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    3
  8576 ;; This function calls:
  8577 ;;		i1_PCF8574_set_pin
  8578 ;; This function is called by:
  8579 ;;		_FNC
  8580 ;;		i1_shift_reg_set_pin_lcd
  8581 ;;		i1_INSELECT_select
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           
  8586                           ;psect for function i1_LoadDataCenter
  8587  0C4B                     i1_LoadDataCenter:	
  8588                           
  8589                           ;incstack = 0
  8590                           ; Regs used in i1_LoadDataCenter: [wreg+status,2+status,0+pclath+cstack]
  8591                           ;i1LoadDataCenter@center_no stored from wreg
  8592  0C4B  00F9               	movwf	i1LoadDataCenter@center_no
  8593                           
  8594                           ;LCD.h: 28: for(signed char index = 7; index != -1; index--)
  8595  0C4C  3007               	movlw	7
  8596  0C4D  00F7               	movwf	??i1_LoadDataCenter
  8597  0C4E  0877               	movf	??i1_LoadDataCenter,w
  8598  0C4F  00FA               	movwf	i1LoadDataCenter@index
  8599  0C50  0A7A               	incf	i1LoadDataCenter@index,w
  8600  0C51  1903               	btfsc	3,2
  8601  0C52  2C75               	goto	i1l2714
  8602  0C53                     i1l2708:	
  8603                           
  8604                           ;LCD.h: 29: {
  8605                           ;LCD.h: 30: PCF8574_set_pin(1, (center_data>>index) & 0x1);
  8606  0C53  0876               	movf	i1LoadDataCenter@center_data,w
  8607  0C54  00F7               	movwf	??i1_LoadDataCenter
  8608  0C55  0A7A               	incf	i1LoadDataCenter@index,w
  8609  0C56  2C58               	goto	u240_24
  8610  0C57                     u240_25:	
  8611  0C57  36F7               	lsrf	??i1_LoadDataCenter,f
  8612  0C58                     u240_24:	
  8613  0C58  0B89               	decfsz	9,f
  8614  0C59  2C57               	goto	u240_25
  8615  0C5A  0877               	movf	??i1_LoadDataCenter,w
  8616  0C5B  3901               	andlw	1
  8617  0C5C  00F8               	movwf	??i1_LoadDataCenter+1
  8618  0C5D  0878               	movf	??i1_LoadDataCenter+1,w
  8619  0C5E  00F2               	movwf	i1PCF8574_set_pin@value
  8620  0C5F  3001               	movlw	1
  8621  0C60  318B  234D  318C   	fcall	i1_PCF8574_set_pin
  8622                           
  8623                           ;LCD.h: 32: PCF8574_set_pin(0, 0x1);
  8624  0C63  01F2               	clrf	i1PCF8574_set_pin@value
  8625  0C64  0AF2               	incf	i1PCF8574_set_pin@value,f
  8626  0C65  3000               	movlw	0
  8627  0C66  318B  234D  318C   	fcall	i1_PCF8574_set_pin
  8628                           
  8629                           ;LCD.h: 34: PCF8574_set_pin(0, 0);
  8630  0C69  01F2               	clrf	i1PCF8574_set_pin@value
  8631  0C6A  3000               	movlw	0
  8632  0C6B  318B  234D  318C   	fcall	i1_PCF8574_set_pin
  8633  0C6E  30FF               	movlw	255
  8634  0C6F  00F7               	movwf	??i1_LoadDataCenter
  8635  0C70  0877               	movf	??i1_LoadDataCenter,w
  8636  0C71  07FA               	addwf	i1LoadDataCenter@index,f
  8637  0C72  0A7A               	incf	i1LoadDataCenter@index,w
  8638  0C73  1D03               	btfss	3,2
  8639  0C74  2C53               	goto	i1l2708
  8640  0C75                     i1l2714:	
  8641                           
  8642                           ;LCD.h: 36: }
  8643                           ;LCD.h: 37: PCF8574_set_pin(center_no, 1);
  8644  0C75  01F2               	clrf	i1PCF8574_set_pin@value
  8645  0C76  0AF2               	incf	i1PCF8574_set_pin@value,f
  8646  0C77  0879               	movf	i1LoadDataCenter@center_no,w
  8647  0C78  318B  234D  318C   	fcall	i1_PCF8574_set_pin
  8648                           
  8649                           ;LCD.h: 38: PCF8574_set_pin(center_no, 0);
  8650  0C7B  01F2               	clrf	i1PCF8574_set_pin@value
  8651  0C7C  0879               	movf	i1LoadDataCenter@center_no,w
  8652  0C7D  318B  234D         	fcall	i1_PCF8574_set_pin
  8653  0C7F  0008               	return
  8654  0C80                     __end_ofi1_LoadDataCenter:	
  8655                           
  8656                           	psect	text59
  8657  0B4D                     __ptext59:	
  8658 ;; *************** function i1_PCF8574_set_pin *****************
  8659 ;; Defined at:
  8660 ;;		line 25 in file "PCF8574.h"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  pin_number      1    wreg     unsigned char 
  8663 ;;  value           1    2[COMMON] unsigned char 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  pin_number      1    5[COMMON] unsigned char 
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  1    wreg      void 
  8668 ;; Registers used:
  8669 ;;		wreg, status,2, status,0, pclath, cstack
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8675 ;;      Params:         1       0       0       0
  8676 ;;      Locals:         1       0       0       0
  8677 ;;      Temps:          2       0       0       0
  8678 ;;      Totals:         4       0       0       0
  8679 ;;Total ram usage:        4 bytes
  8680 ;; Hardware stack levels used:    1
  8681 ;; Hardware stack levels required when called:    2
  8682 ;; This function calls:
  8683 ;;		i1_PCF8574_load_data
  8684 ;; This function is called by:
  8685 ;;		i1_LoadDataCenter
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           
  8690                           ;psect for function i1_PCF8574_set_pin
  8691  0B4D                     i1_PCF8574_set_pin:	
  8692                           
  8693                           ;incstack = 0
  8694                           ; Regs used in i1_PCF8574_set_pin: [wreg+status,2+status,0+pclath+cstack]
  8695                           ;i1PCF8574_set_pin@pin_number stored from wreg
  8696  0B4D  00F5               	movwf	i1PCF8574_set_pin@pin_number
  8697                           
  8698                           ;PCF8574.h: 27: if(value) PCF8574_value |= 1 <<pin_number;
  8699  0B4E  0872               	movf	i1PCF8574_set_pin@value,w
  8700  0B4F  1903               	btfsc	3,2
  8701  0B50  2B5E               	goto	i1l2616
  8702  0B51  3001               	movlw	1
  8703  0B52  00F3               	movwf	??i1_PCF8574_set_pin
  8704  0B53  0A75               	incf	i1PCF8574_set_pin@pin_number,w
  8705  0B54  2B56               	goto	u227_24
  8706  0B55                     u227_25:	
  8707  0B55  35F3               	lslf	??i1_PCF8574_set_pin,f
  8708  0B56                     u227_24:	
  8709  0B56  0B89               	decfsz	9,f
  8710  0B57  2B55               	goto	u227_25
  8711  0B58  0873               	movf	??i1_PCF8574_set_pin,w
  8712  0B59  00F4               	movwf	??i1_PCF8574_set_pin+1
  8713  0B5A  0874               	movf	??i1_PCF8574_set_pin+1,w
  8714  0B5B  0020               	movlb	0	; select bank0
  8715  0B5C  04C8               	iorwf	_PCF8574_value,f
  8716  0B5D  2B6B               	goto	i1l2618
  8717  0B5E                     i1l2616:	
  8718                           
  8719                           ;PCF8574.h: 28: else PCF8574_value &= ~(1 << pin_number);
  8720  0B5E  3001               	movlw	1
  8721  0B5F  00F3               	movwf	??i1_PCF8574_set_pin
  8722  0B60  0A75               	incf	i1PCF8574_set_pin@pin_number,w
  8723  0B61  2B63               	goto	u228_24
  8724  0B62                     u228_25:	
  8725  0B62  35F3               	lslf	??i1_PCF8574_set_pin,f
  8726  0B63                     u228_24:	
  8727  0B63  0B89               	decfsz	9,f
  8728  0B64  2B62               	goto	u228_25
  8729  0B65  0873               	movf	??i1_PCF8574_set_pin,w
  8730  0B66  3AFF               	xorlw	255
  8731  0B67  00F4               	movwf	??i1_PCF8574_set_pin+1
  8732  0B68  0874               	movf	??i1_PCF8574_set_pin+1,w
  8733  0B69  0020               	movlb	0	; select bank0
  8734  0B6A  05C8               	andwf	_PCF8574_value,f
  8735  0B6B                     i1l2618:	
  8736                           
  8737                           ;PCF8574.h: 29: PCF8574_load_data(PCF8574_value);
  8738  0B6B  0848               	movf	_PCF8574_value,w
  8739  0B6C  3189  210D  318B   	fcall	i1_PCF8574_load_data
  8740                           
  8741                           ;PCF8574.h: 30: _delay((unsigned long)((20)*(8000000/4000000.0)));
  8742  0B6F  300D               	movlw	13
  8743  0B70  00F3               	movwf	??i1_PCF8574_set_pin
  8744  0B71                     u511_27:	
  8745  0B71  0BF3               	decfsz	??i1_PCF8574_set_pin,f
  8746  0B72  2B71               	goto	u511_27
  8747  0B73  0008               	return
  8748  0B74                     __end_ofi1_PCF8574_set_pin:	
  8749                           
  8750                           	psect	text60
  8751  090D                     __ptext60:	
  8752 ;; *************** function i1_PCF8574_load_data *****************
  8753 ;; Defined at:
  8754 ;;		line 16 in file "PCF8574.h"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  data            1    wreg     unsigned char 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  data            1  (no storage) unsigned char 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0, pclath, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8768 ;;      Params:         0       0       0       0
  8769 ;;      Locals:         0       0       0       0
  8770 ;;      Temps:          0       0       0       0
  8771 ;;      Totals:         0       0       0       0
  8772 ;;Total ram usage:        0 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:    1
  8775 ;; This function calls:
  8776 ;;		i1_I2C_Start
  8777 ;;		i1_I2C_Stop
  8778 ;;		i1_I2C_data_send
  8779 ;; This function is called by:
  8780 ;;		i1_PCF8574_set_pin
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function i1_PCF8574_load_data
  8786  090D                     i1_PCF8574_load_data:	
  8787                           
  8788                           ;PCF8574.h: 18: I2C_Start();
  8789                           
  8790                           ;incstack = 0
  8791                           ; Regs used in i1_PCF8574_load_data: [wreg+status,2+status,0+pclath+cstack]
  8792  090D  3188  202F  3189   	fcall	i1_I2C_Start
  8793                           
  8794                           ;PCF8574.h: 19: I2C_data_send(0x40);
  8795  0910  3040               	movlw	64
  8796  0911  3189  21D1  3189   	fcall	i1_I2C_data_send
  8797                           
  8798                           ;PCF8574.h: 21: I2C_data_send(PCF8574_value);
  8799  0914  0020               	movlb	0	; select bank0
  8800  0915  0848               	movf	_PCF8574_value,w
  8801  0916  3189  21D1  3189   	fcall	i1_I2C_data_send
  8802                           
  8803                           ;PCF8574.h: 23: I2C_Stop();
  8804  0919  3188  2036         	fcall	i1_I2C_Stop
  8805  091B  0008               	return
  8806  091C                     __end_ofi1_PCF8574_load_data:	
  8807                           
  8808                           	psect	text61
  8809  087B                     __ptext61:	
  8810 ;; *************** function _commondUART *****************
  8811 ;; Defined at:
  8812 ;;		line 60 in file "INTERRUPT.h"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;		None
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;		None
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, status,2, status,0, pclath, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8826 ;;      Params:         0       0       0       0
  8827 ;;      Locals:         0       0       0       0
  8828 ;;      Temps:          0       0       0       0
  8829 ;;      Totals:         0       0       0       0
  8830 ;;Total ram usage:        0 bytes
  8831 ;; Hardware stack levels used:    1
  8832 ;; Hardware stack levels required when called:    1
  8833 ;; This function calls:
  8834 ;;		_UART_byte_send
  8835 ;;		i1_DELAY
  8836 ;; This function is called by:
  8837 ;;		_FNC
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           
  8842                           ;psect for function _commondUART
  8843  087B                     _commondUART:	
  8844                           
  8845                           ;INTERRUPT.h: 62: UART_byte_send(data_sent);
  8846                           
  8847                           ;incstack = 0
  8848                           ; Regs used in _commondUART: [wreg+status,2+status,0+pclath+cstack]
  8849  087B  0021               	movlb	1	; select bank1
  8850  087C  0836               	movf	_data_sent^(0+128),w
  8851  087D  3188  204B  3188   	fcall	_UART_byte_send
  8852                           
  8853                           ;INTERRUPT.h: 63: DELAY(2);
  8854  0880  3002               	movlw	2
  8855  0881  3189  2192         	fcall	i1_DELAY
  8856  0883  0008               	return
  8857  0884                     __end_of_commondUART:	
  8858                           
  8859                           	psect	text62
  8860  084B                     __ptext62:	
  8861 ;; *************** function _UART_byte_send *****************
  8862 ;; Defined at:
  8863 ;;		line 17 in file "UART.h"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  data            1    wreg     unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  data            1    0[COMMON] unsigned char 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8877 ;;      Params:         0       0       0       0
  8878 ;;      Locals:         1       0       0       0
  8879 ;;      Temps:          0       0       0       0
  8880 ;;      Totals:         1       0       0       0
  8881 ;;Total ram usage:        1 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_commondUART
  8887 ;;		_sendT
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           
  8892                           ;psect for function _UART_byte_send
  8893  084B                     _UART_byte_send:	
  8894                           
  8895                           ;incstack = 0
  8896                           ; Regs used in _UART_byte_send: [wreg]
  8897                           ;UART_byte_send@data stored from wreg
  8898  084B  00F0               	movwf	UART_byte_send@data
  8899  084C                     i1l173:	
  8900                           ;UART.h: 19: while ( !TXIF ) ;
  8901                           
  8902  084C  0020               	movlb	0	; select bank0
  8903  084D  1E11               	btfss	17,4	;volatile
  8904  084E  284C               	goto	i1l173
  8905                           
  8906                           ;UART.h: 20: TXREG = data ;
  8907  084F  0870               	movf	UART_byte_send@data,w
  8908  0850  0023               	movlb	3	; select bank3
  8909  0851  009A               	movwf	26	;volatile
  8910  0852  0008               	return
  8911  0853                     __end_of_UART_byte_send:	
  8912                           
  8913                           	psect	text63
  8914  09A6                     __ptext63:	
  8915 ;; *************** function _EEPROM_WriteByte *****************
  8916 ;; Defined at:
  8917 ;;		line 15 in file "EEPROM.h"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  address         1    wreg     unsigned char 
  8920 ;;  value           1    4[COMMON] unsigned char 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  address         1    5[COMMON] unsigned char 
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      void 
  8925 ;; Registers used:
  8926 ;;		wreg
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8932 ;;      Params:         1       0       0       0
  8933 ;;      Locals:         1       0       0       0
  8934 ;;      Temps:          0       0       0       0
  8935 ;;      Totals:         2       0       0       0
  8936 ;;Total ram usage:        2 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; This function calls:
  8939 ;;		Nothing
  8940 ;; This function is called by:
  8941 ;;		_FNC
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function _EEPROM_WriteByte
  8947  09A6                     _EEPROM_WriteByte:	
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _EEPROM_WriteByte: [wreg]
  8951                           ;EEPROM_WriteByte@address stored from wreg
  8952  09A6  00F5               	movwf	EEPROM_WriteByte@address
  8953                           
  8954                           ;EEPROM.h: 17: EEPGD = 0;
  8955  09A7  0023               	movlb	3	; select bank3
  8956  09A8  1395               	bcf	21,7	;volsfr
  8957                           
  8958                           ;EEPROM.h: 18: CFGS = 0;
  8959  09A9  1315               	bcf	21,6	;volsfr
  8960                           
  8961                           ;EEPROM.h: 19: EEDATL = value;
  8962  09AA  0874               	movf	EEPROM_WriteByte@value,w
  8963  09AB  0093               	movwf	19	;volatile
  8964                           
  8965                           ;EEPROM.h: 20: EEADRL = address;
  8966  09AC  0875               	movf	EEPROM_WriteByte@address,w
  8967  09AD  0091               	movwf	17	;volatile
  8968                           
  8969                           ;EEPROM.h: 22: WREN = 1;
  8970  09AE  1515               	bsf	21,2	;volsfr
  8971                           
  8972                           ;EEPROM.h: 24: EECON2 = 0x55;
  8973  09AF  3055               	movlw	85
  8974  09B0  0096               	movwf	22	;volsfr
  8975                           
  8976                           ;EEPROM.h: 25: EECON2 = 0xaa;
  8977  09B1  30AA               	movlw	170
  8978  09B2  0096               	movwf	22	;volsfr
  8979                           
  8980                           ;EEPROM.h: 27: WR = 1;
  8981  09B3  1495               	bsf	21,1	;volsfr
  8982  09B4                     i1l336:	
  8983                           ;EEPROM.h: 29: while(WR);
  8984                           
  8985  09B4  1895               	btfsc	21,1	;volsfr
  8986  09B5  29B4               	goto	i1l336
  8987                           
  8988                           ;EEPROM.h: 33: EEIF = 0;
  8989  09B6  0020               	movlb	0	; select bank0
  8990  09B7  1212               	bcf	18,4	;volatile
  8991                           
  8992                           ;EEPROM.h: 34: WREN = 0;
  8993  09B8  0023               	movlb	3	; select bank3
  8994  09B9  1115               	bcf	21,2	;volsfr
  8995  09BA  0008               	return
  8996  09BB                     __end_of_EEPROM_WriteByte:	
  8997                           
  8998                           	psect	text64
  8999  08CB                     __ptext64:	
  9000 ;; *************** function _EEPROM24C64_write_byte *****************
  9001 ;; Defined at:
  9002 ;;		line 16 in file "EEPROM24C64.h"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  address         2    8[COMMON] unsigned int 
  9005 ;;  data            1   10[COMMON] unsigned char 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0, pclath, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9017 ;;      Params:         3       0       0       0
  9018 ;;      Locals:         0       0       0       0
  9019 ;;      Temps:          1       0       0       0
  9020 ;;      Totals:         4       0       0       0
  9021 ;;Total ram usage:        4 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:    2
  9024 ;; This function calls:
  9025 ;;		_Generic_write_byte
  9026 ;; This function is called by:
  9027 ;;		_FNC
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           
  9032                           ;psect for function _EEPROM24C64_write_byte
  9033  08CB                     _EEPROM24C64_write_byte:	
  9034                           
  9035                           ;EEPROM24C64.h: 18: Generic_write_byte(0b10101110, address, data);
  9036                           
  9037                           ;incstack = 0
  9038                           ; Regs used in _EEPROM24C64_write_byte: [wreg+status,2+status,0+pclath+cstack]
  9039  08CB  0879               	movf	EEPROM24C64_write_byte@address+1,w
  9040  08CC  00F5               	movwf	Generic_write_byte@address+1
  9041  08CD  0878               	movf	EEPROM24C64_write_byte@address,w
  9042  08CE  00F4               	movwf	Generic_write_byte@address
  9043  08CF  087A               	movf	EEPROM24C64_write_byte@data,w
  9044  08D0  00FB               	movwf	??_EEPROM24C64_write_byte
  9045  08D1  087B               	movf	??_EEPROM24C64_write_byte,w
  9046  08D2  00F6               	movwf	Generic_write_byte@data
  9047  08D3  30AE               	movlw	174
  9048  08D4  318A  2235         	fcall	_Generic_write_byte
  9049  08D6  0008               	return
  9050  08D7                     __end_of_EEPROM24C64_write_byte:	
  9051                           
  9052                           	psect	text65
  9053  08BF                     __ptext65:	
  9054 ;; *************** function _EEPROM24C32_write_byte *****************
  9055 ;; Defined at:
  9056 ;;		line 52 in file "EEPROM24C32.h"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  address         2    8[COMMON] unsigned int 
  9059 ;;  data            1   10[COMMON] unsigned char 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0, pclath, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9071 ;;      Params:         3       0       0       0
  9072 ;;      Locals:         0       0       0       0
  9073 ;;      Temps:          1       0       0       0
  9074 ;;      Totals:         4       0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    2
  9078 ;; This function calls:
  9079 ;;		_Generic_write_byte
  9080 ;; This function is called by:
  9081 ;;		_FNC
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           
  9086                           ;psect for function _EEPROM24C32_write_byte
  9087  08BF                     _EEPROM24C32_write_byte:	
  9088                           
  9089                           ;EEPROM24C32.h: 54: Generic_write_byte(0b10100000, address, data);
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _EEPROM24C32_write_byte: [wreg+status,2+status,0+pclath+cstack]
  9093  08BF  0879               	movf	EEPROM24C32_write_byte@address+1,w
  9094  08C0  00F5               	movwf	Generic_write_byte@address+1
  9095  08C1  0878               	movf	EEPROM24C32_write_byte@address,w
  9096  08C2  00F4               	movwf	Generic_write_byte@address
  9097  08C3  087A               	movf	EEPROM24C32_write_byte@data,w
  9098  08C4  00FB               	movwf	??_EEPROM24C32_write_byte
  9099  08C5  087B               	movf	??_EEPROM24C32_write_byte,w
  9100  08C6  00F6               	movwf	Generic_write_byte@data
  9101  08C7  30A0               	movlw	160
  9102  08C8  318A  2235         	fcall	_Generic_write_byte
  9103  08CA  0008               	return
  9104  08CB                     __end_of_EEPROM24C32_write_byte:	
  9105                           
  9106                           	psect	text66
  9107  0A35                     __ptext66:	
  9108 ;; *************** function _Generic_write_byte *****************
  9109 ;; Defined at:
  9110 ;;		line 15 in file "EEPROM24C32.h"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  dev_id          1    wreg     unsigned char 
  9113 ;;  address         2    4[COMMON] unsigned int 
  9114 ;;  data            1    6[COMMON] unsigned char 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  dev_id          1    7[COMMON] unsigned char 
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  1    wreg      void 
  9119 ;; Registers used:
  9120 ;;		wreg, status,2, status,0, pclath, cstack
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9126 ;;      Params:         3       0       0       0
  9127 ;;      Locals:         1       0       0       0
  9128 ;;      Temps:          0       0       0       0
  9129 ;;      Totals:         4       0       0       0
  9130 ;;Total ram usage:        4 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:    1
  9133 ;; This function calls:
  9134 ;;		i1_DELAY
  9135 ;;		i1_I2C_Start
  9136 ;;		i1_I2C_Stop
  9137 ;;		i1_I2C_data_send
  9138 ;; This function is called by:
  9139 ;;		_EEPROM24C32_write_byte
  9140 ;;		_EEPROM24C64_write_byte
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           
  9145                           ;psect for function _Generic_write_byte
  9146  0A35                     _Generic_write_byte:	
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in _Generic_write_byte: [wreg+status,2+status,0+pclath+cstack]
  9150                           ;Generic_write_byte@dev_id stored from wreg
  9151  0A35  00F7               	movwf	Generic_write_byte@dev_id
  9152                           
  9153                           ;EEPROM24C32.h: 17: I2C_Start();
  9154  0A36  3188  202F  318A   	fcall	i1_I2C_Start
  9155                           
  9156                           ;EEPROM24C32.h: 19: I2C_data_send(dev_id);
  9157  0A39  0877               	movf	Generic_write_byte@dev_id,w
  9158  0A3A  3189  21D1  318A   	fcall	i1_I2C_data_send
  9159                           
  9160                           ;EEPROM24C32.h: 20: I2C_data_send(address>>8);
  9161  0A3D  0875               	movf	Generic_write_byte@address+1,w
  9162  0A3E  3189  21D1  318A   	fcall	i1_I2C_data_send
  9163                           
  9164                           ;EEPROM24C32.h: 21: I2C_data_send(address&0x00ff);
  9165  0A41  0874               	movf	Generic_write_byte@address,w
  9166  0A42  3189  21D1  318A   	fcall	i1_I2C_data_send
  9167                           
  9168                           ;EEPROM24C32.h: 23: I2C_data_send(data);
  9169  0A45  0876               	movf	Generic_write_byte@data,w
  9170  0A46  3189  21D1  318A   	fcall	i1_I2C_data_send
  9171                           
  9172                           ;EEPROM24C32.h: 24: I2C_Stop();
  9173  0A49  3188  2036  318A   	fcall	i1_I2C_Stop
  9174                           
  9175                           ;EEPROM24C32.h: 25: DELAY(10);
  9176  0A4C  300A               	movlw	10
  9177  0A4D  3189  2192         	fcall	i1_DELAY
  9178  0A4F  0008               	return
  9179  0A50                     __end_of_Generic_write_byte:	
  9180                           
  9181                           	psect	text67
  9182  0992                     __ptext67:	
  9183 ;; *************** function i1_DELAY *****************
  9184 ;; Defined at:
  9185 ;;		line 14 in file "PoemCircuit.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  number          1    wreg     unsigned char 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  number          1    2[COMMON] unsigned char 
  9190 ;;  DELAY           1    3[COMMON] unsigned char 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  1    wreg      void 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9200 ;;      Params:         0       0       0       0
  9201 ;;      Locals:         2       0       0       0
  9202 ;;      Temps:          2       0       0       0
  9203 ;;      Totals:         4       0       0       0
  9204 ;;Total ram usage:        4 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_Generic_write_byte
  9210 ;;		_commondUART
  9211 ;;		_sendT
  9212 ;;		i1_Generic_read_byte
  9213 ;;		i1_ADC_read
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           
  9218                           ;psect for function i1_DELAY
  9219  0992                     i1_DELAY:	
  9220                           
  9221                           ;incstack = 0
  9222                           ; Regs used in i1_DELAY: [wreg+status,2+status,0]
  9223                           ;i1DELAY@number stored from wreg
  9224  0992  00F2               	movwf	i1DELAY@number
  9225                           
  9226                           ;PoemCircuit.c: 16: for(byte k=0; k != number; k++)
  9227  0993  01F3               	clrf	i1DELAY@k
  9228  0994                     i1l2692:	
  9229  0994  0873               	movf	i1DELAY@k,w
  9230  0995  0672               	xorwf	i1DELAY@number,w
  9231  0996  1903               	btfsc	3,2
  9232  0997  0008               	return
  9233                           
  9234                           ;PoemCircuit.c: 17: _delay((unsigned long)((1)*(8000000/4000.0)));
  9235  0998  3003               	movlw	3
  9236  0999  00F1               	movwf	??i1_DELAY+1
  9237  099A  3097               	movlw	151
  9238  099B  00F0               	movwf	??i1_DELAY
  9239  099C                     u512_27:	
  9240  099C  0BF0               	decfsz	??i1_DELAY,f
  9241  099D  299C               	goto	u512_27
  9242  099E  0BF1               	decfsz	??i1_DELAY+1,f
  9243  099F  299C               	goto	u512_27
  9244  09A0  3200               	nop2
  9245  09A1  3001               	movlw	1
  9246  09A2  00F0               	movwf	??i1_DELAY
  9247  09A3  0870               	movf	??i1_DELAY,w
  9248  09A4  07F3               	addwf	i1DELAY@k,f
  9249  09A5  2994               	goto	i1l2692
  9250  09A6                     __end_ofi1_DELAY:	
  9251                           
  9252                           	psect	text68
  9253  0B27                     __ptext68:	
  9254 ;; *************** function _DS1307_set_shared *****************
  9255 ;; Defined at:
  9256 ;;		line 76 in file "DS1307.h"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  addr            1    wreg     unsigned char 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;  addr            1    3[COMMON] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9270 ;;      Params:         0       0       0       0
  9271 ;;      Locals:         1       0       0       0
  9272 ;;      Temps:          1       0       0       0
  9273 ;;      Totals:         2       0       0       0
  9274 ;;Total ram usage:        2 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    1
  9277 ;; This function calls:
  9278 ;;		i1_I2C_Start
  9279 ;;		i1_I2C_Stop
  9280 ;;		i1_I2C_data_send
  9281 ;; This function is called by:
  9282 ;;		_FNC
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           
  9287                           ;psect for function _DS1307_set_shared
  9288  0B27                     _DS1307_set_shared:	
  9289                           
  9290                           ;incstack = 0
  9291                           ; Regs used in _DS1307_set_shared: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9292                           ;DS1307_set_shared@addr stored from wreg
  9293  0B27  00F3               	movwf	DS1307_set_shared@addr
  9294                           
  9295                           ;DS1307.h: 78: I2C_Start();
  9296  0B28  3188  202F  318B   	fcall	i1_I2C_Start
  9297                           
  9298                           ;DS1307.h: 79: I2C_data_send(0b11010000);
  9299  0B2B  30D0               	movlw	208
  9300  0B2C  3189  21D1  318B   	fcall	i1_I2C_data_send
  9301                           
  9302                           ;DS1307.h: 81: I2C_data_send(addr);
  9303  0B2F  0873               	movf	DS1307_set_shared@addr,w
  9304  0B30  3189  21D1  318B   	fcall	i1_I2C_data_send
  9305                           
  9306                           ;DS1307.h: 82: for(t_i = 0; t_i != 3; t_i++)
  9307  0B33  0020               	movlb	0	; select bank0
  9308  0B34  01D5               	clrf	_t_i
  9309  0B35  3003               	movlw	3
  9310  0B36  0655               	xorwf	_t_i,w
  9311  0B37  1903               	btfsc	3,2
  9312  0B38  2B4A               	goto	i1l3038
  9313  0B39                     i1l3032:	
  9314                           
  9315                           ;DS1307.h: 83: {
  9316                           ;DS1307.h: 84: I2C_data_send(time_array[t_i]);
  9317  0B39  0855               	movf	_t_i,w
  9318  0B3A  3EA5               	addlw	(low (_time_array| 0))& (0+255)
  9319  0B3B  0086               	movwf	6
  9320  0B3C  0187               	clrf	7
  9321  0B3D  0801               	movf	1,w
  9322  0B3E  3189  21D1  318B   	fcall	i1_I2C_data_send
  9323  0B41  3001               	movlw	1
  9324  0B42  00F2               	movwf	??_DS1307_set_shared
  9325  0B43  0872               	movf	??_DS1307_set_shared,w
  9326  0B44  0020               	movlb	0	; select bank0
  9327  0B45  07D5               	addwf	_t_i,f
  9328  0B46  3003               	movlw	3
  9329  0B47  0655               	xorwf	_t_i,w
  9330  0B48  1D03               	btfss	3,2
  9331  0B49  2B39               	goto	i1l3032
  9332  0B4A                     i1l3038:	
  9333                           
  9334                           ;DS1307.h: 87: }
  9335                           ;DS1307.h: 90: I2C_Stop();
  9336  0B4A  3188  2036         	fcall	i1_I2C_Stop
  9337  0B4C  0008               	return
  9338  0B4D                     __end_of_DS1307_set_shared:	
  9339                           
  9340                           	psect	text69
  9341  09D1                     __ptext69:	
  9342 ;; *************** function i1_I2C_data_send *****************
  9343 ;; Defined at:
  9344 ;;		line 234 in file "I2C.h"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  data            1    wreg     unsigned char 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  data            1    1[COMMON] unsigned char 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9358 ;;      Params:         0       0       0       0
  9359 ;;      Locals:         1       0       0       0
  9360 ;;      Temps:          1       0       0       0
  9361 ;;      Totals:         2       0       0       0
  9362 ;;Total ram usage:        2 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; This function calls:
  9365 ;;		Nothing
  9366 ;; This function is called by:
  9367 ;;		_DS1307_set_shared
  9368 ;;		_Generic_write_byte
  9369 ;;		i1_PCF8574_load_data
  9370 ;;		i1_Generic_read_byte
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           
  9375                           ;psect for function i1_I2C_data_send
  9376  09D1                     i1_I2C_data_send:	
  9377                           
  9378                           ;incstack = 0
  9379                           ; Regs used in i1_I2C_data_send: [wreg+status,2+status,0]
  9380                           ;i1I2C_data_send@data stored from wreg
  9381  09D1  00F1               	movwf	i1I2C_data_send@data
  9382                           
  9383                           ;I2C.h: 282: SSP1IF = 0;
  9384  09D2  0020               	movlb	0	; select bank0
  9385  09D3  1191               	bcf	17,3	;volatile
  9386                           
  9387                           ;I2C.h: 285: SSPBUF = data ;
  9388  09D4  0871               	movf	i1I2C_data_send@data,w
  9389  09D5  0024               	movlb	4	; select bank4
  9390  09D6  0091               	movwf	17	;volatile
  9391  09D7                     i1l208:	
  9392                           ;I2C.h: 286: while (BF);
  9393                           
  9394  09D7  1C14               	btfss	20,0	;volatile
  9395  09D8  29E3               	goto	i1l211
  9396  09D9  29D7               	goto	i1l208
  9397  09DA                     i1l2548:	
  9398                           ;I2C.h: 301: while(SSP1IF ==0){unnecessary++; if(unnecessary == 200)break;};
  9399                           
  9400  09DA  3001               	movlw	1
  9401  09DB  00F0               	movwf	??i1_I2C_data_send
  9402  09DC  0870               	movf	??i1_I2C_data_send,w
  9403  09DD  0020               	movlb	0	; select bank0
  9404  09DE  07D8               	addwf	_unnecessary,f
  9405  09DF  30C8               	movlw	200
  9406  09E0  0658               	xorwf	_unnecessary,w
  9407  09E1  1903               	btfsc	3,2
  9408  09E2  29E6               	goto	i1l214
  9409  09E3                     i1l211:	
  9410  09E3  0020               	movlb	0	; select bank0
  9411  09E4  1D91               	btfss	17,3	;volatile
  9412  09E5  29DA               	goto	i1l2548
  9413  09E6                     i1l214:	
  9414                           
  9415                           ;I2C.h: 302: SSP1IF = 0;
  9416  09E6  1191               	bcf	17,3	;volatile
  9417                           
  9418                           ;I2C.h: 303: unnecessary = 0;
  9419  09E7  01D8               	clrf	_unnecessary
  9420  09E8  0008               	return
  9421  09E9                     __end_ofi1_I2C_data_send:	
  9422                           
  9423                           	psect	text70
  9424  0836                     __ptext70:	
  9425 ;; *************** function i1_I2C_Stop *****************
  9426 ;; Defined at:
  9427 ;;		line 347 in file "I2C.h"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;		None
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;		None
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		None
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9441 ;;      Params:         0       0       0       0
  9442 ;;      Locals:         0       0       0       0
  9443 ;;      Temps:          0       0       0       0
  9444 ;;      Totals:         0       0       0       0
  9445 ;;Total ram usage:        0 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; This function calls:
  9448 ;;		Nothing
  9449 ;; This function is called by:
  9450 ;;		_DS1307_set_shared
  9451 ;;		_Generic_write_byte
  9452 ;;		i1_PCF8574_load_data
  9453 ;;		i1_Generic_read_byte
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           
  9458                           ;psect for function i1_I2C_Stop
  9459  0836                     i1_I2C_Stop:	
  9460                           
  9461                           ;I2C.h: 349: PEN = 1;
  9462                           
  9463                           ;incstack = 0
  9464                           ; Regs used in i1_I2C_Stop: []
  9465  0836  0024               	movlb	4	; select bank4
  9466  0837  1516               	bsf	22,2	;volatile
  9467  0838                     i1l230:	
  9468                           ;I2C.h: 350: while(PEN);
  9469                           
  9470  0838  1916               	btfsc	22,2	;volatile
  9471  0839  2838               	goto	i1l230
  9472                           
  9473                           ;I2C.h: 352: SSP1IF = 0;
  9474  083A  0020               	movlb	0	; select bank0
  9475  083B  1191               	bcf	17,3	;volatile
  9476  083C  0008               	return
  9477  083D                     __end_ofi1_I2C_Stop:	
  9478                           
  9479                           	psect	text71
  9480  082F                     __ptext71:	
  9481 ;; *************** function i1_I2C_Start *****************
  9482 ;; Defined at:
  9483 ;;		line 203 in file "I2C.h"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;		None
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;		None
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		None
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9497 ;;      Params:         0       0       0       0
  9498 ;;      Locals:         0       0       0       0
  9499 ;;      Temps:          0       0       0       0
  9500 ;;      Totals:         0       0       0       0
  9501 ;;Total ram usage:        0 bytes
  9502 ;; Hardware stack levels used:    1
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_DS1307_set_shared
  9507 ;;		_Generic_write_byte
  9508 ;;		i1_PCF8574_load_data
  9509 ;;		i1_Generic_read_byte
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           
  9514                           ;psect for function i1_I2C_Start
  9515  082F                     i1_I2C_Start:	
  9516                           
  9517                           ;I2C.h: 206: SEN = 1;
  9518                           
  9519                           ;incstack = 0
  9520                           ; Regs used in i1_I2C_Start: []
  9521  082F  0024               	movlb	4	; select bank4
  9522  0830  1416               	bsf	22,0	;volatile
  9523  0831                     i1l191:	
  9524                           ;I2C.h: 209: while ( SEN);
  9525                           
  9526  0831  1816               	btfsc	22,0	;volatile
  9527  0832  2831               	goto	i1l191
  9528                           
  9529                           ;I2C.h: 210: SSP1IF = 0;
  9530  0833  0020               	movlb	0	; select bank0
  9531  0834  1191               	bcf	17,3	;volatile
  9532  0835  0008               	return
  9533  0836                     __end_ofi1_I2C_Start:	
  9534  007E                     btemp	set	126	;btemp
  9535  007E                     int$flags	set	126
  9536  007E                     wtemp	set	126
  9537  007E                     wtemp0	set	126
  9538  0080                     wtemp1	set	128
  9539  0082                     wtemp2	set	130
  9540  0084                     wtemp3	set	132
  9541  0086                     wtemp4	set	134
  9542  0088                     wtemp5	set	136
  9543  007F                     wtemp6	set	127
  9544  007E                     ttemp	set	126
  9545  007E                     ttemp0	set	126
  9546  0081                     ttemp1	set	129
  9547  0084                     ttemp2	set	132
  9548  0087                     ttemp3	set	135
  9549  007F                     ttemp4	set	127
  9550  007E                     ltemp	set	126
  9551  007E                     ltemp0	set	126
  9552  0082                     ltemp1	set	130
  9553  0086                     ltemp2	set	134
  9554  0080                     ltemp3	set	128


Data Sizes:
    Strings     15
    Constant    0
    Data        17
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      67
    BANK1            80      6      80
    BANK2            80      9      41

Pointer List with Targets:

    FNC@l	PTR unsigned char  size(1) Largest target is 2
		 -> measured_adc_value(BANK0[2]), 

    pp	PTR unsigned char  size(1) Largest target is 2
		 -> byte_count(BANK1[2]), 

    poem_size_point	PTR unsigned char  size(1) Largest target is 2
		 -> poem_size(BANK1[2]), 

    compareAlarms@arr2	PTR unsigned char  size(1) Largest target is 5
		 -> closest_alarm(BANK1[5]), current_diff(BANK1[5]), global_diff(BANK1[5]), 

    compareAlarms@arr1	PTR unsigned char  size(1) Largest target is 6
		 -> current_diff(BANK1[5]), zaman(BANK1[6]), 

    threshold_point	PTR unsigned char  size(1) Largest target is 2
		 -> threshold(BANK1[2]), 

    ADC_read@m	PTR unsigned char  size(1) Largest target is 2
		 -> measured_adc_value(BANK0[2]), 

    lcd_write@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[7]), STR_1(CODE[8]), 

    DS1307_shared_get@reg	PTR unsigned char  size(1) Largest target is 6
		 -> zaman(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _FNC in COMMON

    _FNC->i1_ADC_read
    _FNC->i1_shift_reg_set_pin_lcd
    i1_EEPROM24C32_read_byte->i1_Generic_read_byte
    i1_Generic_read_byte->i1_DELAY
    i1_ADC_read->i1_INSELECT_select
    _sendT->i1_DELAY
    _pinControl->i1_shift_reg_set_pin_lcd
    i1_shift_reg_set_pin_lcd->i1_LoadDataCenter
    i1_INSELECT_select->i1_LoadDataCenter
    i1_LoadDataCenter->i1_PCF8574_set_pin
    i1_PCF8574_load_data->i1_I2C_data_send
    _commondUART->i1_DELAY
    _EEPROM_WriteByte->i1___bmul
    _EEPROM24C64_write_byte->_Generic_write_byte
    _EEPROM24C32_write_byte->_Generic_write_byte
    _Generic_write_byte->i1_DELAY
    _DS1307_set_shared->i1_I2C_data_send

Critical Paths under _main in BANK0

    _main->_lcd_goto
    _EEPROM24C64_read_byte->_Generic_read_byte
    _EEPROM24C32_read_byte->_Generic_read_byte
    _Generic_read_byte->_DELAY
    _findClosestAlarm->_compareAlarms
    _display_number->_LoadDataCenter
    _disp_time_info->_lcd_goto
    _lcd_yaz->_lcd_goto
    _ADC_read->_INSELECT_select
    _INSELECT_select->_LoadDataCenter
    _lcd_clear->_lcd_goto
    _lcd_goto->_lcd_info
    _lcd_info->_shift_reg_set_pin_lcd
    _shift_reg_set_pin_lcd->_LoadDataCenter
    _LoadDataCenter->_PCF8574_set_pin
    _PCF8574_load_data->_I2C_data_send
    _I2C_initialize->_DELAY
    _DS1307_time->_DS1307_shared_get
    _DS1307_date->_DS1307_shared_get
    _DS1307_shared_get->___bmul
    _DHT11_get_data->_DELAY
    _ADC_init->_DELAY

Critical Paths under _FNC in BANK0

    _FNC->_pinControl
    _FNC->i1_ADC_read
    _pinControl->i1_shift_reg_set_pin_lcd

Critical Paths under _main in BANK1

    _main->_checkSensors
    _showPoem->_lcd_yaz
    _showAlarmMessage->_lcd_yaz
    _disp_time_info->_lcd_yaz
    _checkSensors->_lcd_write
    _lcd_write->_lcd_yaz
    _LCD_init->_lcd_clear

Critical Paths under _FNC in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_showAlarmMessage

Critical Paths under _FNC in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  123854
                                              4 BANK2      5     5      0
                           _ADC_init
                              _DELAY
                     _DHT11_get_data
                        _DS1307_date
                        _DS1307_time
                    _EEPROM_ReadByte
                     _I2C_initialize
                    _INSELECT_select
                           _LCD_init
                          _UART_init
                            ___awdiv
                            ___awmod
                       _checkSensors
                      _compareAlarms
                     _disp_time_info
                     _display_number
                   _findClosestAlarm
                           _lcd_goto
                            _lcd_yaz
              _shift_reg_set_pin_lcd
                   _showAlarmMessage
                           _showPoem
 ---------------------------------------------------------------------------------
 (1) _showPoem                                             2     2      0   17776
                                              2 BANK1      2     2      0
                           _DELAY100
              _EEPROM24C64_read_byte
                          _lcd_clear
                            _lcd_yaz
 ---------------------------------------------------------------------------------
 (2) _EEPROM24C64_read_byte                                2     0      2     613
                                             22 BANK0      2     0      2
                  _Generic_read_byte
 ---------------------------------------------------------------------------------
 (1) _showAlarmMessage                                     6     6      0   18996
                                              2 BANK1      2     2      0
                                              0 BANK2      4     4      0
                           _DELAY100
              _EEPROM24C32_read_byte
                    _EEPROM_ReadByte
                             ___bmul
                             ___wmul
                          _lcd_clear
                            _lcd_yaz
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     506
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM24C32_read_byte                                2     0      2     638
                                             22 BANK0      2     0      2
                  _Generic_read_byte
 ---------------------------------------------------------------------------------
 (3) _Generic_read_byte                                    5     3      2     387
                                             17 BANK0      5     3      2
                              _DELAY
                       _I2C_SendNACK
                          _I2C_Start
                           _I2C_Stop
                   _I2C_data_receive
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (4) _I2C_SendNACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DELAY100                                             5     5      0      68
                                             13 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _findClosestAlarm                                    10    10      0    1080
                                             18 BANK0      9     9      0
                    _EEPROM_ReadByte
                      _compareAlarms
 ---------------------------------------------------------------------------------
 (2) _compareAlarms                                        5     4      1     601
                                             13 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _display_number                                       5     5      0    3121
                                             24 BANK0      5     5      0
                     _LoadDataCenter
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _disp_time_info                                       3     3      0   15049
                                              2 BANK1      3     3      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                            _lcd_yaz
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     953
                                             13 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     835
                                             13 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _checkSensors                                         3     3      0   31880
                                              5 BANK1      1     1      0
                                              0 BANK2      2     2      0
                           _ADC_read
                    _EEPROM_ReadByte
                    _INSELECT_select
                     _LoadDataCenter
                          _lcd_clear
                          _lcd_write
                            _lcd_yaz
              _shift_reg_set_pin_lcd
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            3     1      2    8826
                                              2 BANK1      3     1      2
                              _DELAY
                            _lcd_yaz
 ---------------------------------------------------------------------------------
 (2) _lcd_yaz                                              2     2      0    8563
                                              0 BANK1      2     2      0
                           _lcd_goto
                           _lcd_info
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      1     1      0      31
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             3     3      0    1389
                                             26 BANK0      3     3      0
                              _DELAY
                    _INSELECT_select
 ---------------------------------------------------------------------------------
 (2) _INSELECT_select                                      2     2      0    1222
                                             24 BANK0      2     2      0
                     _LoadDataCenter
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0   14715
                                              1 BANK1      1     1      0
                              _DELAY
                          _lcd_clear
                           _lcd_info
              _shift_reg_set_pin_lcd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0    8532
                                              0 BANK1      1     1      0
                           _lcd_goto
                           _lcd_info
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             3     2      1    4506
                                             32 BANK0      3     2      1
                            ___awdiv (ARG)
                           _lcd_info
 ---------------------------------------------------------------------------------
 (3) _lcd_info                                             4     3      1    4026
                                             28 BANK0      4     3      1
                              _DELAY
                     _LoadDataCenter
              _shift_reg_set_pin_lcd
 ---------------------------------------------------------------------------------
 (4) _shift_reg_set_pin_lcd                                4     3      1    2089
                                             24 BANK0      4     3      1
                     _LoadDataCenter
 ---------------------------------------------------------------------------------
 (5) _LoadDataCenter                                       5     4      1    1191
                                             19 BANK0      5     4      1
                    _PCF8574_set_pin
 ---------------------------------------------------------------------------------
 (6) _PCF8574_set_pin                                      4     3      1     449
                                             15 BANK0      4     3      1
                  _PCF8574_load_data
 ---------------------------------------------------------------------------------
 (7) _PCF8574_load_data                                    1     1      0      31
                          _I2C_Start
                           _I2C_Stop
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (1) _I2C_initialize                                       0     0      0      68
                              _DELAY
 ---------------------------------------------------------------------------------
 (1) _DS1307_time                                          1     1      0     999
                                             25 BANK0      1     1      0
                  _DS1307_shared_get
 ---------------------------------------------------------------------------------
 (1) _DS1307_date                                          1     1      0     999
                                             25 BANK0      1     1      0
                  _DS1307_shared_get
 ---------------------------------------------------------------------------------
 (2) _DS1307_shared_get                                    8     7      1     999
                                             17 BANK0      8     7      1
                        _I2C_SendACK
                          _I2C_Start
                           _I2C_Stop
                   _I2C_data_receive
                      _I2C_data_send
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     451
                                             13 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (8) _I2C_data_send                                        2     2      0      31
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2C_data_receive                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_SendACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_get_data                                       3     3      0     167
                                             17 BANK0      3     3      0
                              _DELAY
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0      68
                              _DELAY
 ---------------------------------------------------------------------------------
 (4) _DELAY                                                4     4      0      68
                                             13 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _FNC                                                11    11      0    6142
                                              2 BANK0     11    11      0
                  _DS1307_set_shared
             _EEPROM24C32_write_byte
             _EEPROM24C64_write_byte
                   _EEPROM_WriteByte
                  _UART_byte_receive
                        _commondUART
                         _pinControl
                      _receiveStruct
                              _sendT
                         i1_ADC_read
            i1_EEPROM24C32_read_byte
                  i1_EEPROM_ReadByte
                   i1_LoadDataCenter
                           i1___bmul
                           i1___wmul
            i1_shift_reg_set_pin_lcd
 ---------------------------------------------------------------------------------
 (12) i1___wmul                                            6     2      4     300
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (12) i1___bmul                                            4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (12) i1_EEPROM_ReadByte                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_EEPROM24C32_read_byte                             2     0      2     305
                                              9 COMMON     2     0      2
                i1_Generic_read_byte
 ---------------------------------------------------------------------------------
 (13) i1_Generic_read_byte                                 5     3      2     205
                                              4 COMMON     5     3      2
                            i1_DELAY
                     i1_I2C_SendNACK
                        i1_I2C_Start
                         i1_I2C_Stop
                 i1_I2C_data_receive
                    i1_I2C_data_send
 ---------------------------------------------------------------------------------
 (14) i1_I2C_data_receive                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_I2C_SendNACK                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_ADC_read                                          3     3      0     566
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            i1_DELAY
                  i1_INSELECT_select
 ---------------------------------------------------------------------------------
 (12) _receiveStruct                                       1     1      0      68
                                              4 COMMON     1     1      0
                  _UART_byte_receive
                              _sendT
 ---------------------------------------------------------------------------------
 (12) _sendT                                               0     0      0      68
                     _UART_byte_send
                            i1_DELAY
 ---------------------------------------------------------------------------------
 (13) _UART_byte_receive                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _pinControl                                          1     1      0    1026
                                              1 BANK0      1     1      0
                  i1_INSELECT_select
            i1_shift_reg_set_pin_lcd
 ---------------------------------------------------------------------------------
 (12) i1_shift_reg_set_pin_lcd                             4     3      1     574
                                             11 COMMON     3     2      1
                                              0 BANK0      1     1      0
                   i1_LoadDataCenter
 ---------------------------------------------------------------------------------
 (13) i1_INSELECT_select                                   2     2      0     452
                                             11 COMMON     2     2      0
                   i1_LoadDataCenter
 ---------------------------------------------------------------------------------
 (13) i1_LoadDataCenter                                    5     4      1     430
                                              6 COMMON     5     4      1
                  i1_PCF8574_set_pin
 ---------------------------------------------------------------------------------
 (14) i1_PCF8574_set_pin                                   4     3      1     218
                                              2 COMMON     4     3      1
                i1_PCF8574_load_data
 ---------------------------------------------------------------------------------
 (15) i1_PCF8574_load_data                                 1     1      0      22
                        i1_I2C_Start
                         i1_I2C_Stop
                    i1_I2C_data_send
 ---------------------------------------------------------------------------------
 (12) _commondUART                                         0     0      0      68
                     _UART_byte_send
                            i1_DELAY
 ---------------------------------------------------------------------------------
 (13) _UART_byte_send                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EEPROM_WriteByte                                    2     1      1     574
                                              4 COMMON     2     1      1
                  i1_EEPROM_ReadByte (ARG)
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (12) _EEPROM24C64_write_byte                              4     1      3     730
                                              8 COMMON     4     1      3
                 _Generic_write_byte
 ---------------------------------------------------------------------------------
 (12) _EEPROM24C32_write_byte                              4     1      3     942
                                              8 COMMON     4     1      3
                 _Generic_write_byte
 ---------------------------------------------------------------------------------
 (13) _Generic_write_byte                                  4     1      3     368
                                              4 COMMON     4     1      3
                            i1_DELAY
                        i1_I2C_Start
                         i1_I2C_Stop
                    i1_I2C_data_send
 ---------------------------------------------------------------------------------
 (14) i1_DELAY                                             4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _DS1307_set_shared                                   2     2      0      44
                                              2 COMMON     2     2      0
                        i1_I2C_Start
                         i1_I2C_Stop
                    i1_I2C_data_send
 ---------------------------------------------------------------------------------
 (16) i1_I2C_data_send                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (16) i1_I2C_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_I2C_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
     _DELAY
   _DELAY
   _DHT11_get_data
     _DELAY
   _DS1307_date
     _DS1307_shared_get
       _I2C_SendACK
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
       ___bmul
   _DS1307_time
     _DS1307_shared_get
       _I2C_SendACK
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
       ___bmul
   _EEPROM_ReadByte
   _I2C_initialize
     _DELAY
   _INSELECT_select
     _LoadDataCenter
       _PCF8574_set_pin
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
   _LCD_init
     _DELAY
     _lcd_clear
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_info
       _DELAY
       _LoadDataCenter
         _PCF8574_set_pin
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
       _shift_reg_set_pin_lcd
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
     _shift_reg_set_pin_lcd
       _LoadDataCenter
         _PCF8574_set_pin
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
   _UART_init
   ___awdiv
   ___awmod
   _checkSensors
     _ADC_read
       _DELAY
       _INSELECT_select
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
     _EEPROM_ReadByte
     _INSELECT_select
       _LoadDataCenter
         _PCF8574_set_pin
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
     _LoadDataCenter
       _PCF8574_set_pin
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
     _lcd_clear
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_write
       _DELAY
       _lcd_yaz
         _lcd_goto
           ___awdiv (ARG)
           _lcd_info (ARG)
             _DELAY
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
             _shift_reg_set_pin_lcd
               _LoadDataCenter
                 _PCF8574_set_pin
                   _PCF8574_load_data
                     _I2C_Start
                     _I2C_Stop
                     _I2C_data_send
         _lcd_info
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
     _lcd_yaz
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _shift_reg_set_pin_lcd
       _LoadDataCenter
         _PCF8574_set_pin
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
   _compareAlarms
   _disp_time_info
     ___awdiv
     ___awmod
     _lcd_goto
       ___awdiv (ARG)
       _lcd_info (ARG)
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_yaz
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
   _display_number
     _LoadDataCenter
       _PCF8574_set_pin
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
     ___awdiv
     ___awmod
   _findClosestAlarm
     _EEPROM_ReadByte
     _compareAlarms
   _lcd_goto
     ___awdiv (ARG)
     _lcd_info (ARG)
       _DELAY
       _LoadDataCenter
         _PCF8574_set_pin
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
       _shift_reg_set_pin_lcd
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
   _lcd_yaz
     _lcd_goto
       ___awdiv (ARG)
       _lcd_info (ARG)
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_info
       _DELAY
       _LoadDataCenter
         _PCF8574_set_pin
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
       _shift_reg_set_pin_lcd
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
   _shift_reg_set_pin_lcd
     _LoadDataCenter
       _PCF8574_set_pin
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
   _showAlarmMessage
     _DELAY100
     _EEPROM24C32_read_byte
       _Generic_read_byte
         _DELAY
         _I2C_SendNACK
         _I2C_Start
         _I2C_Stop
         _I2C_data_receive
         _I2C_data_send
     _EEPROM_ReadByte
     ___bmul
     ___wmul
     _lcd_clear
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_yaz
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
   _showPoem
     _DELAY100
     _EEPROM24C64_read_byte
       _Generic_read_byte
         _DELAY
         _I2C_SendNACK
         _I2C_Start
         _I2C_Stop
         _I2C_data_receive
         _I2C_data_send
     _lcd_clear
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_yaz
       _lcd_goto
         ___awdiv (ARG)
         _lcd_info (ARG)
           _DELAY
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
           _shift_reg_set_pin_lcd
             _LoadDataCenter
               _PCF8574_set_pin
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
       _lcd_info
         _DELAY
         _LoadDataCenter
           _PCF8574_set_pin
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
         _shift_reg_set_pin_lcd
           _LoadDataCenter
             _PCF8574_set_pin
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send

 _FNC (ROOT)
   _DS1307_set_shared
     i1_I2C_Start
     i1_I2C_Stop
     i1_I2C_data_send
   _EEPROM24C32_write_byte
     _Generic_write_byte
       i1_DELAY
       i1_I2C_Start
       i1_I2C_Stop
       i1_I2C_data_send
   _EEPROM24C64_write_byte
     _Generic_write_byte
       i1_DELAY
       i1_I2C_Start
       i1_I2C_Stop
       i1_I2C_data_send
   _EEPROM_WriteByte
     i1_EEPROM_ReadByte (ARG)
     i1___bmul (ARG)
   _UART_byte_receive
   _commondUART
     _UART_byte_send
     i1_DELAY
   _pinControl
     i1_INSELECT_select
       i1_LoadDataCenter
         i1_PCF8574_set_pin
           i1_PCF8574_load_data
             i1_I2C_Start
             i1_I2C_Stop
             i1_I2C_data_send
     i1_shift_reg_set_pin_lcd
       i1_LoadDataCenter
         i1_PCF8574_set_pin
           i1_PCF8574_load_data
             i1_I2C_Start
             i1_I2C_Stop
             i1_I2C_data_send
   _receiveStruct
     _UART_byte_receive
     _sendT
       _UART_byte_send
       i1_DELAY
   _sendT
     _UART_byte_send
     i1_DELAY
   i1_ADC_read
     i1_DELAY
     i1_INSELECT_select
       i1_LoadDataCenter
         i1_PCF8574_set_pin
           i1_PCF8574_load_data
             i1_I2C_Start
             i1_I2C_Stop
             i1_I2C_data_send
   i1_EEPROM24C32_read_byte
     i1_Generic_read_byte
       i1_DELAY
       i1_I2C_SendNACK
       i1_I2C_Start
       i1_I2C_Stop
       i1_I2C_data_receive
       i1_I2C_data_send
   i1_EEPROM_ReadByte
   i1_LoadDataCenter
     i1_PCF8574_set_pin
       i1_PCF8574_load_data
         i1_I2C_Start
         i1_I2C_Stop
         i1_I2C_data_send
   i1___bmul
   i1___wmul
   i1_shift_reg_set_pin_lcd
     i1_LoadDataCenter
       i1_PCF8574_set_pin
         i1_PCF8574_load_data
           i1_I2C_Start
           i1_I2C_Stop
           i1_I2C_data_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     23      43       6       83.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      6      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      9      29      10       51.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      CA      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Sep 14 00:10:55 2019

                                _j 00BB                     ___bmul@product 002F  
             __end_of_checkSensors 062C                 __size_of_I2C_Start 0007  
                               _BF 10A0                                 _RD 0CA8  
                               _WR 0CA9                       ___awdiv@sign 0033  
                     ?_commondUART 0070                                 __x 005E  
                               __y 005F                                 _kk 0138  
                               _pp 0061                ___wmul@multiplicand 002F  
                 i1___wmul@product 0074    __end_ofi1_EEPROM24C32_read_byte 086B  
                      ?i1_I2C_Stop 0070          PCF8574_set_pin@pin_number 0032  
                              l200 08B8                                l211 09FB  
                              l230 0846                                l214 09FE  
                              l208 09EF                                l224 0876  
                              l218 086E                                l342 0966  
                              l191 083F                                l370 058B  
                              l291 0F95                                l356 0C30  
                              l197 08B6                                l389 0713  
                              l744 0AAA                                l657 056E  
                              _GIE 005F                                _FNC 0004  
                              _RA4 0064                                _PEN 10B2  
                              _SEN 10B0                        _unnecessary 0058  
                      ?i1_ADC_read 0070                                _den 00B7  
                              _nem 0050                                _t_i 0055  
                              _poe 00AA                                for1 0790  
        __size_of_showAlarmMessage 0085                                _var 00C2  
           __end_of_display_number 0E08               __size_of_I2C_SendACK 0008  
                      lcd_goto@p_1 0042                        lcd_goto@p_2 0040  
                     ___awmod@sign 0033                                wreg 0009  
                   ?_compareAlarms 002D         __end_of_Generic_write_byte 0A50  
                  ?_disp_time_info 0070          __size_ofi1_LoadDataCenter 0035  
           i1PCF8574_set_pin@value 0072                               FNC@l 002C  
                             ?_FNC 0070                       ?i1_I2C_Start 0070  
                  __end_ofi1_DELAY 09A6          __size_of_findClosestAlarm 00A0  
                             l4002 0970                               l4020 0A1E  
                             l4006 0976                               l4110 0C87  
                             l4040 0F5B                               l4034 0F41  
                             l4210 0D3E                               l4202 0D38  
                             l4052 0F89                               l4300 0607  
                             l4212 0D4A                               l4220 0D5F  
                             l4126 0CAB                               l4118 0C99  
                             l4134 0AA4                               l4048 0F81  
                             l4304 0611                               l4160 0E1E  
                             l4224 0D67                               l4216 0D56  
                             l4128 0CB3                               l4400 0666  
                             l4066 0A86                               l4170 0E26  
                             l4154 0E13                               l4172 0E32  
                             l4332 073F                               l4324 06FD  
                             l4340 06F6                               l4182 0E4D  
                             l4422 06BA                               l4406 067C  
                             l4334 0715                               l4360 0F05  
                             l4416 069A                               l4424 06C7  
                             l4336 0746                               l4440 0EB1  
                             l4450 0757                               l4274 0593  
                             l4186 0E55                               l4178 0E44  
                             l4442 0E82                               l3900 0B13  
                             l4364 0F12                               l3902 0B1F  
                             l4198 0D31                               l4606 0537  
                             l4456 0764                               l4368 0F1B  
                             l4624 054C                               l4632 0581  
                             l4616 0541                               l4560 04AF  
                             l3850 09F2                               l4482 0DBF  
                             l4386 0643                               l3908 0F98  
                             l4396 065B                               l4388 064C  
                             l4580 04F9                               l4572 04D7  
                             l3870 0B91                               l3880 0CF5  
                             l3952 0AD3                               l4592 0524  
                             l4586 051A                               l3868 0B85  
                             l3894 09BE                               l3886 0D1A  
                             l3968 0BE5                               _ADIF 008E  
                             _ADFM 04F7                               _ADGO 04E9  
                             _ADON 04E8                               _CHS0 04EA  
                             _CHS1 04EB                               _CHS2 04EC  
                             _CFGS 0CAE                               _CHS3 04ED  
                             _EEIF 0094                               STR_1 0800  
                             STR_2 0808                               _BRGH 0CF2  
                             _CREN 0CEC                               u4124 0B0C  
                             u4125 0B0B                               u4054 0B7E  
                             u4134 0B18                               u4055 0B7D  
                             u4135 0B17                               u4064 0B8A  
                             u4065 0B89                               u5107 09C6  
                             u4155 0FD9                               u4084 0CFA  
                             u4085 0CF9                               u4405 0AAB  
                             u4415 0AB0                               u4505 0E45  
                             u5067 0A28                               _PEIE 005E  
                             u4285 0F55                               u5077 0B98  
                             u5087 0778                               u4295 0F65  
                             u5097 0782                               u4465 0E29  
                             u4635 05C4                               _RCIE 048D  
                             u4644 05F3                               _RCEN 10B3  
                             _RCIF 008D                               u4645 05F2  
                             u4485 0E33                               u4565 0D41  
                             u4495 0E3D                               u4585 0D50  
                             _SCS0 04C8                               u4595 0D57  
                             _SCS1 04C9                               u4865 0E8E  
                  DHT11_get_data@a 0033                               _PINS 00AE  
                             _SPEN 0CEF                               _WREN 0CAA  
                             _TXEN 0CF5                               _TXIF 008C  
                             _SYNC 0CF4            ??_EEPROM24C64_read_byte 0038  
         __size_ofi1_I2C_data_send 0018                  i1_EEPROM_ReadByte 08E3  
                             _main 046D                               _saat 00BE  
                ??_INSELECT_select 0038                               _nisa 00A8  
                             _saim 00BF                               _temp 00C0  
                             devam 07A7                      _global_index2 004D  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                   __end_of_DELAY100 0A35  
                 __end_of_I2C_Stop 084B                               loop1 0790  
                             loop2 0795                               loop6 0787  
                             loop7 0789              __size_of_I2C_SendNACK 0008  
               ?i1_EEPROM_ReadByte 0070                               ltemp 007E  
            ??i1_Generic_read_byte 0076                               start 0438  
                             ttemp 007E                   __end_of_ADC_init 0992  
                             wtemp 007E                   __end_of_ADC_read 0C4B  
         __size_of_EEPROM_ReadByte 0011                   ??_I2C_initialize 0031  
                  ?_LoadDataCenter 0033                  ___bmul@multiplier 0030  
               UART_byte_send@data 0070                    _EXTRA_INFO_SHOW 00AD  
                            ??_FNC 0022                ??i1_EEPROM_ReadByte 0070  
       __size_ofi1_INSELECT_select 0010                   __end_of_LCD_init 0DB9  
                            _ADCS0 04F4                              _ADCS1 04F5  
                            _ADCS2 04F6                              ?_main 0070  
                            _ACKEN 10B4                              _ACKDT 10B5  
                  __end_of___awdiv 0E5A                              _BRG16 0CFB  
                  __end_of___awmod 0D6C                              _DELAY 09BB  
                            _ANSA4 0C64                              _EEPGD 0CAF  
                  ___awdiv@divisor 002D                              _IOCAN 0392  
                            _IOCAP 0391                              _IRCF0 04CB  
                            _IRCF1 04CC                              _IRCF2 04CD  
                            _IRCF3 04CE                              _IOCIE 005B  
                            _IOCIF 0058                              i1l200 08AD  
                            i1l211 09E3                              i1l230 0838  
                            i1l214 09E6                              i1l208 09D7  
                            i1l224 085E                              i1l173 084C  
                            i1l342 08EA                              i1l191 0831  
                            i1l336 09B4                              i1l179 081D  
                            i1l356 0C02                              i1l197 08AB  
                            i1l526 0BA7                              i1l554 010B  
                            i1l571 018F                              i1l628 0433  
                            i1l581 0274                              i1l744 0A58  
                            i1l577 01F5                    ___awdiv@counter 0032  
                            _RCREG 0199    __size_of_EEPROM24C32_write_byte 000C  
                            _SPBRG 019B                              _SSPM0 10A8  
                            _SSPM1 10A9                              _SSPM2 10AA  
                            _SSPM3 10AB                              _TRISA 008C  
                            _SSPEN 10AD                              _TXREG 019A  
                  ?_display_number 0070          LoadDataCenter@center_data 0033  
                  __end_of_lcd_yaz 0BEF                   ?_PCF8574_set_pin 002F  
               __size_of_UART_init 000E                              _count 00B2  
                     _I2C_SendNACK 0873                              _sendT 0853  
                            _komut 004F          __end_ofi1_EEPROM_ReadByte 08F1  
             PCF8574_set_pin@value 002F                              _tempo 00C1  
                            _zaman 00C3                              _start 0054  
                            main@k 0147                  __end_of_I2C_Start 0844  
                 __end_ofi1___bmul 095C                   __end_ofi1___wmul 0A6B  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
            EEPROM_WriteByte@value 0074        i1PCF8574_set_pin@pin_number 0075  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                 ??_DHT11_get_data 0031                i1___wmul@multiplier 0070  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                i1I2C_data_send@data 0071  
              __size_ofi1_I2C_Stop 0007                __size_ofi1_ADC_read 002E  
                  __initialization 043A                       __end_of_main 058B  
         i1EEPROM_ReadByte@address 0070        findClosestAlarm@alarm_count 0036  
                           DELAY@k 0030                             ??_main 0144  
                           ?_DELAY 0070                    ??_compareAlarms 002E  
      __end_ofi1_PCF8574_load_data 091C          __size_of_I2C_data_receive 000B  
                        ??i1_DELAY 0070           ?i1_shift_reg_set_pin_lcd 007B  
                        DELAY100@k 0031                             _ADRESH 009C  
                           _ADRESL 009B                             _EEADRL 0191  
                           _EEDATL 0193                             ?_sendT 0070  
                           _EECON2 0196                   ___awdiv@dividend 002F  
                           _ANSELA 018C                             _IOCAP3 1C8B  
                           i1l3032 0B39                             i1l3038 0B4A  
                           i1l3410 0061                             i1l3500 01A8  
                           i1l3412 0066                             i1l3350 0A52  
                           i1l3406 003F                             i1l2616 0B5E  
                           i1l3280 0BB0                             i1l3512 01C6  
                           i1l3432 00A8                             i1l3408 0059  
                           i1l2618 0B6B                             i1l2714 0C75  
                           i1l3602 032B                             i1l3514 01D9  
                           i1l2548 09DA                             i1l2708 0C53  
                           i1l3364 094D                             i1l3540 024F  
                           i1l3532 022D                             i1l3516 01E3  
                           i1l3436 00B0                             i1l3700 042E  
                           i1l3622 0379                             i1l3542 0258  
                           i1l3454 00D8                             i1l3462 0110  
                           i1l3368 0953                             i1l3616 035E  
                           i1l3624 0383                             i1l3560 0286  
                           i1l3536 0246                             i1l3528 0220  
                           i1l3456 00FF                             i1l3546 0263  
                           i1l3554 01FB                             i1l2692 0994  
                           i1l3644 03AD                             i1l3564 0290  
                           i1l3556 027D                             i1l3484 014A  
                           i1l3476 012C                             i1l3396 0031  
                           i1l3670 03E0                             i1l3582 02B1  
                           i1l3486 015A                             i1l3398 0036  
                   i1_I2C_SendNACK 085B                             i1l3680 03FE  
                           i1l3656 03C0                             i1l3576 02A3  
                           i1l3488 0177                             i1l3568 0299  
                           i1l2954 0AEE                             i1l3594 02CC  
                           i1l2956 0AFA                             i1l3678 03ED  
                           i1l3688 0416                             i1l3696 0428  
                           u240_24 0C58                             u240_25 0C57  
          ??_shift_reg_set_pin_lcd 0039                             u322_25 0A59  
                           u227_24 0B56                             u227_25 0B55  
                           u323_25 0A5E                             u228_24 0B63  
                           u228_25 0B62                             u511_27 0B71  
                           u512_27 099C                             u281_24 0AE7  
                           u281_25 0AE6                             u282_24 0AF3  
                           u282_25 0AF2                             u372_25 0362  
                           u381_25 03F5                             u366_25 02BA  
                           u358_25 0205                             u369_25 02F8  
   __size_of_EEPROM24C32_read_byte 0009                             _SSP1IF 008B  
                           _SPLLEN 04CF                             _SSPADD 0212  
                           _TRISA4 0464      __end_of_EEPROM24C32_read_byte 0896  
                           _SSPBUF 0211             _EEPROM24C32_write_byte 08BF  
                        ADC_read@m 003C   __size_ofi1_EEPROM24C32_read_byte 0008  
      i1LoadDataCenter@center_data 0076              __size_of_checkSensors 00A1  
           __size_of_I2C_data_send 0018                  ??i1_I2C_data_send 0070  
                 __end_of_lcd_info 1000                   __end_of_lcd_goto 0ADD  
                           ___bmul 096D                             ___wmul 0AA1  
                __end_of_UART_init 090D                          ??___awdiv 0031  
                           _dakika 00B5                          ??___awmod 0031  
                           __temp_ 0049                  _DS1307_shared_get 0F21  
                ??_EEPROM_ReadByte 002D                             _passed 00BD  
                 ___awdiv@quotient 0034                             _saniye 0052  
                  ___awmod@divisor 002D                             _tempor 0056  
                  ___awmod@counter 0032           __end_of_EEPROM_WriteByte 09BB  
               ?_DS1307_shared_get 0031                          ??_lcd_yaz 00EA  
             __size_of_commondUART 0009                  showAlarmMessage@j 0143  
                showAlarmMessage@l 0142           ??_EEPROM24C64_write_byte 007B  
                 _showAlarmMessage 06CC              PCF8574_load_data@data 0070  
                _DS1307_set_shared 0B27                          ?_DELAY100 0070  
                        ?_I2C_Stop 0070                   __end_of_showPoem 0EB7  
                        ?_ADC_init 0070                          ?_ADC_read 0070  
              ??_DS1307_shared_get 0032                   i1_LoadDataCenter 0C4B  
               ?_DS1307_set_shared 0070             __end_ofi1_I2C_SendNACK 0863  
       __size_ofi1_EEPROM_ReadByte 000E                   _findClosestAlarm 062C  
                        FNC@mes_id 0028                       _checkSensors 058B  
       __end_ofi1_I2C_data_receive 08B4               __size_ofi1_I2C_Start 0007  
          __end_of__initialization 0469                ??_DS1307_set_shared 0072  
    i1INSELECT_select@input_number 007C                          ?_LCD_init 0070  
                    __end_of_DELAY 09D1                ___bmul@multiplicand 002D  
                   __pcstackCOMMON 0070                         _dht11_data 00A0  
        __end_of_DS1307_shared_get 0F8C                       __pidataBANK0 0818  
                     __pidataBANK1 08D7                display_number@digit 003C  
               _measured_adc_value 005A                      __end_of_sendT 085B  
        Generic_read_byte@received 0034                          ?i1___bmul 0070  
                findClosestAlarm@j 003A                  findClosestAlarm@k 0039  
    EEPROM24C32_write_byte@address 0078          __end_of_DS1307_set_shared 0B4D  
                     ??i1_I2C_Stop 0070    __end_ofi1_shift_reg_set_pin_lcd 0B02  
                        ?i1___wmul 0070                            ??_DELAY 002D  
                 ??_disp_time_info 00EC               findClosestAlarm@none 0034  
                     ??i1_ADC_read 007D                         ??_DELAY100 002D  
                    _I2C_data_send 09E9                    _data_time_array 0130  
                       ??_I2C_Stop 002D                  compareAlarms@arr1 0030  
                compareAlarms@arr2 002D                    _INSELECT_select 093B  
                    i1DELAY@number 0072                 __size_of_lcd_clear 001A  
                       ??_ADC_init 0031                         ??_ADC_read 003A  
                 i1___bmul@product 0072                 __size_of_lcd_write 001B  
                  ?i1_I2C_SendNACK 0070                      i1ADC_read@pin 0020  
                          ??_sendT 0074                            FNC@m_id 0027  
                          FNC@leng 002A                         __pbssBANK0 0043  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                    ??_DS1307_date 0039                      ??_DS1307_time 0039  
                 ??_LoadDataCenter 0034     __size_of_EEPROM24C64_read_byte 0009  
    __end_of_EEPROM24C64_read_byte 089F                         ??_LCD_init 00EB  
               _Generic_write_byte 0A35                 __end_ofi1_I2C_Stop 083D  
                       __pmaintext 046D                 __end_ofi1_ADC_read 0C1D  
                     _DISPLAY_POEM 0045                            ?___bmul 002D  
                          ?___wmul 002D             __size_of_receiveStruct 000A  
              ?_Generic_write_byte 0074                         __pintentry 0004  
                 ??_display_number 0038            __size_of_UART_byte_send 0008  
                    ??_I2C_SendACK 002D                         ??i1___bmul 0071  
                       ??i1___wmul 0074    shift_reg_set_pin_lcd@pin_number 003B  
i1shift_reg_set_pin_lcd@pin_number 0020                  _UART_byte_receive 081D  
                          _LCDData 0046                     ?_I2C_data_send 0070  
                 _I2C_data_receive 08B4                            i1_DELAY 0992  
  __size_of_EEPROM24C64_write_byte 000C     i1EEPROM24C32_read_byte@address 0079  
               ?_UART_byte_receive 0070               ??_Generic_write_byte 0077  
                          _RXDTSEL 08EF                          ?_lcd_info 003C  
                        ?_lcd_goto 0040        __end_ofi1_Generic_read_byte 0800  
                   _low_time_count 00BC                  _PCF8574_load_data 091C  
      i1Generic_read_byte@received 0077         EEPROM24C64_write_byte@data 007A  
              ??_UART_byte_receive 0070     shift_reg_set_pin_lcd@pin_value 0038  
        showAlarmMessage@mes_count 0140                 ?_PCF8574_load_data 0070  
          i1_EEPROM24C32_read_byte 0863                          _I2C_Start 083D  
                        _ALARM_SET 00AC                __end_of_DS1307_date 088D  
                __end_of_lcd_clear 0A1B                __end_of_DS1307_time 0A86  
              ??_PCF8574_load_data 002F         __size_of_DS1307_shared_get 006B  
                        ?_showPoem 0070                    __size_of___bmul 0012  
                          ___awdiv 0E08                            ___awmod 0D26  
                __end_of_lcd_write 0AA1                         _byte_count 00D8  
                       _byte_index 00B1                    __size_of___wmul 001C  
                   compareAlarms@j 0031          __end_of_UART_byte_receive 0823  
          __end_of_INSELECT_select 094B                   _message_location 0043  
              LoadDataCenter@index 0037                            __ptext1 0E5A  
                          __ptext2 0896                            __ptext3 06CC  
                          __ptext4 0AA1                            __ptext5 088D  
                          __ptext6 0CB5                            __ptext7 0873  
                          __ptext8 0A1B                            __ptext9 062C  
       __size_of_DS1307_set_shared 0026              DS1307_set_shared@addr 0073  
                          _lcd_yaz 0BC3                         _pinControl 0B9B  
                     __size_of_FNC 0434             EEPROM_ReadByte@address 002D  
                       _message_id 005D                   ___awmod@dividend 002F  
              i1___bmul@multiplier 0073                __end_of_I2C_SendACK 0873  
        __end_of_PCF8574_load_data 092B                      _receiveStruct 089F  
                    _received_data 0051            EEPROM_WriteByte@address 0075  
                          clrloop0 082A                         ??_lcd_info 003D  
                       ??_lcd_goto 0041                         _extra_info 0120  
                  i1_I2C_data_send 09D1               end_of_initialization 0469  
                i1_PCF8574_set_pin 0B4D            ?_EEPROM24C32_write_byte 0078  
                     _eeprom_index 004B                 showAlarmMessage@kk 0141  
                          init_ram 0823                 ?i1_PCF8574_set_pin 0072  
                          initloop 0824     __size_of_shift_reg_set_pin_lcd 0025  
    __end_of_shift_reg_set_pin_lcd 0B27                         ?_I2C_Start 0070  
         __size_of_PCF8574_set_pin 0027                    _EEPROM_ReadByte 095C  
           _EEPROM24C64_write_byte 08CB           __end_of_showAlarmMessage 0751  
                 FNC@message_count 0029   __size_ofi1_shift_reg_set_pin_lcd 0025  
              ??i1_PCF8574_set_pin 0073           __end_ofi1_LoadDataCenter 0C80  
                       ??_showPoem 00EC           __end_of_findClosestAlarm 06CC  
                     __pstringtext 0800                         _time_array 00A5  
                       _time_index 0057              i1___wmul@multiplicand 0072  
                  ??_I2C_data_send 002D                          _UART_init 08FF  
               DS1307_shared_get@k 0037                  ?_EEPROM_WriteByte 0074  
          __size_of_I2C_initialize 000E                 ??_EEPROM_WriteByte 0075  
            __end_of_compareAlarms 0CB5                     ?_receiveStruct 0070  
        __end_ofi1_PCF8574_set_pin 0B74     __end_of_EEPROM24C32_write_byte 08CB  
                __size_of_DELAY100 001A                  __size_of_I2C_Stop 0007  
                __size_of_ADC_init 0013                  __size_of_ADC_read 002E  
        ??i1_EEPROM24C32_read_byte 007B       __size_ofi1_PCF8574_load_data 000F  
                      _DS1307_date 0884                     DELAY100@number 0030  
                      _DS1307_time 0A6B                       _global_index 004C  
            _EEPROM24C32_read_byte 088D                         lcd_write@s 00EC  
                __size_of_LCD_init 004D                 i1_I2C_data_receive 08A9  
                   __end_of___bmul 097F                      ??_commondUART 0074  
          __size_of_DHT11_get_data 007F                     _UART_byte_send 084B  
                   __end_of___wmul 0ABD         __size_of_UART_byte_receive 0006  
                 ?_INSELECT_select 0070                         ?_UART_init 0070  
                      _I2C_SendACK 086B               display_number@number 003B  
                      ?_pinControl 0070                  lcd_info@data_type 003C  
              ?i1_I2C_data_receive 0070                   ??i1_I2C_SendNACK 0070  
          __end_ofi1_I2C_data_send 09E9                  __size_ofi1___bmul 0011  
              start_initialization 043A                  __size_ofi1___wmul 001B  
                      __end_of_FNC 0438              findClosestAlarm@k_265 0037  
       __size_of_PCF8574_load_data 000F                 _closes_alarm_index 005C  
                    ??i1_I2C_Start 0070            __end_of_EEPROM_ReadByte 096D  
            findClosestAlarm@valid 0033                        i1ADC_read@m 0021  
            findClosestAlarm@start 0038               ??i1_I2C_data_receive 0070  
                      ??_I2C_Start 002D           __end_of_I2C_data_receive 08BF  
                _Generic_read_byte 0CB5                           ??___bmul 002E  
           __end_of_UART_byte_send 0853                 ?_Generic_read_byte 0031  
                         ??___wmul 0031                  ??_PCF8574_set_pin 0030  
                      __pdataBANK0 005E                        __pdataBANK1 00DE  
              ??_Generic_read_byte 0033      EEPROM24C64_write_byte@address 0078  
                         FNC@temp2 002B            LoadDataCenter@center_no 0036  
                  ??_receiveStruct 0074                           ?i1_DELAY 0070  
              __end_of_commondUART 0884                          ___latbits 0001  
                    __pcstackBANK0 0020                      __pcstackBANK1 00EA  
                    __pcstackBANK2 0140         __size_ofi1_PCF8574_set_pin 0027  
                    ?_I2C_SendNACK 0070                  __size_of_lcd_info 0074  
                __size_of_lcd_goto 0020          i1LoadDataCenter@center_no 0079  
        __end_of_Generic_read_byte 0CEC                       _current_diff 00CE  
          i1_shift_reg_set_pin_lcd 0ADD             ?_EEPROM24C32_read_byte 0036  
              __end_ofi1_I2C_Start 0836                __size_of_pinControl 0028  
                        _data_sent 00B6       EEPROM24C64_read_byte@address 0036  
            _EEPROM24C64_read_byte 0896                          _bit_index 00B0  
                  ?_UART_byte_send 0070             Generic_write_byte@data 0076  
                         ?___awdiv 002D                           ?___awmod 002D  
 i1shift_reg_set_pin_lcd@pin_value 007B                  __size_of_showPoem 005D  
                        _lcd_clear 0A01                        ??_UART_init 002D  
         Generic_write_byte@dev_id 0077                     _I2C_initialize 08F1  
                        _lcd_write 0A86                           ?_lcd_yaz 0070  
                   __size_of_DELAY 0016            _closest_alarm_start_loc 00E9  
                 ?i1_I2C_data_send 0070                           _DELAY100 0A1B  
                         _I2C_Stop 0844                           i1DELAY@k 0073  
                         _ADC_init 097F                           _ADC_read 0C1D  
                   ??_I2C_SendNACK 002D        __size_of_Generic_write_byte 001B  
                   __size_of_sendT 0008                   ?_EEPROM_ReadByte 0070  
       EEPROM24C32_write_byte@data 007A            __size_of_disp_time_info 006A  
                    _PCF8574_value 0048            ?_EEPROM24C64_write_byte 0078  
                  disp_time_info@k 00EE                     ___wmul@product 0031  
                         _LCD_init 0D6C                          clear_ram0 0829  
            i1___bmul@multiplicand 0070       __size_ofi1_Generic_read_byte 0030  
                ?_showAlarmMessage 0070                          _poem_size 00DA  
               ??_showAlarmMessage 00EC                  ?i1_LoadDataCenter 0076  
        findClosestAlarm@alarm_id4 0035                     _DHT11_get_data 0751  
          __size_of_LoadDataCenter 003A                i1_PCF8574_load_data 090D  
           __end_of_I2C_initialize 08FF                  ?_findClosestAlarm 0070  
                      _commondUART 087B                         ?_lcd_clear 0070  
                        _threshold 00DC                 ??i1_LoadDataCenter 0077  
                  _what_to_display 0059                           i1___bmul 094B  
               ??_findClosestAlarm 0032                         ?_lcd_write 00EC  
                ___wmul@multiplier 002D                           i1___wmul 0A50  
                        lcd_info@c 003F                  I2C_data_send@data 002E  
                      DELAY@number 002F                        _global_diff 00D3  
                 __size_ofi1_DELAY 0014                        ADC_read@pin 003B  
          __size_of_display_number 004F     __end_of_EEPROM24C64_write_byte 08D7  
                      i1_I2C_Start 082F               ?i1_PCF8574_load_data 0070  
                    ?_checkSensors 0070          ??i1_shift_reg_set_pin_lcd 007C  
                     ?_DS1307_date 0070          __size_of_EEPROM_WriteByte 0015  
                     ?_DS1307_time 0070         __size_of_Generic_read_byte 0037  
           ?_EEPROM24C64_read_byte 0036              _shift_reg_set_pin_lcd 0B02  
           __end_of_DHT11_get_data 07D0                   __size_of___awdiv 0052  
                 __size_of___awmod 0046                    ?_I2C_initialize 0070  
                _global_diff_index 00B8                  _global_diff_value 00B9  
                     ?_I2C_SendACK 0070                    _high_time_count 00BA  
                     ??_pinControl 0021              __end_of_I2C_data_send 0A01  
                 __size_of_lcd_yaz 002C           Generic_read_byte@address 0031  
                         _alarm_id 00E8                           __ptext10 0C80  
                         __ptext11 0DB9                           __ptext20 093B  
                         __ptext12 0EB7                           __ptext21 08FF  
                         __ptext13 0D26                           __ptext30 08F1  
                         __ptext22 0D6C                           __ptext14 0E08  
                         __ptext31 0A6B                           __ptext23 0A01  
                         __ptext15 058B                           __ptext40 0751  
                         __ptext32 0884                           __ptext24 0ABD  
                         __ptext16 0A86                           __ptext41 097F  
                         __ptext33 0F21                           __ptext25 0F8C  
                         __ptext17 0BC3                           __ptext50 085B  
                         __ptext42 09BB                           __ptext34 096D  
                         __ptext26 0B02                           __ptext18 095C  
                         __ptext51 0BEF                           __ptext35 09E9  
                         __ptext27 0CEC                           __ptext19 0C1D  
                         __ptext60 090D                           __ptext52 089F  
                         __ptext44 0A50                           __ptext36 08B4  
                         __ptext28 0B74                           __ptext61 087B  
                         __ptext53 0853                           __ptext45 094B  
                         __ptext37 0844                           __ptext29 091C  
                         __ptext70 0836                           __ptext62 084B  
                         __ptext54 081D                           __ptext46 08E3  
                         __ptext38 083D                           __ptext71 082F  
                         __ptext63 09A6                           __ptext55 0B9B  
                         __ptext47 0863                           __ptext39 086B  
                         __ptext64 08CB                           __ptext56 0ADD  
                         __ptext48 07D0                           __ptext65 08BF  
                         __ptext57 092B                           __ptext49 08A9  
                         __ptext66 0A35                           __ptext58 0C4B  
                         __ptext67 0992                           __ptext59 0B4D  
                         __ptext68 0B27                           __ptext69 09D1  
                  _threshold_point 0062                     ??_checkSensors 0140  
            ??i1_PCF8574_load_data 0072                           _lcd_info 0F8C  
                         _lcd_goto 0ABD                    _PCF8574_set_pin 0B74  
                    __size_of_main 011E                    _poem_size_point 0060  
                         _inselect 004E                           _rakamlar 00DE  
                       _LCD_LED_ON 0047                           _sicaklik 0053  
                ?_I2C_data_receive 0070                 __end_of_pinControl 0BC3  
      INSELECT_select@input_number 0039                    ?_DHT11_get_data 0070  
           __size_of_compareAlarms 0035                           _showPoem 0E5A  
               ??_I2C_data_receive 002D               __end_of_I2C_SendNACK 087B  
                         int$flags 007E         i1Generic_read_byte@address 0074  
                      ??_lcd_clear 00EA              i1LoadDataCenter@index 007A  
                         lcd_yaz@s 00EB                _current_alarm_count 004A  
                      ??_lcd_write 00EE                         i1_I2C_Stop 0836  
                i1_INSELECT_select 092B                           main_loop 078B  
            DS1307_shared_get@addr 0036                         i1_ADC_read 0BEF  
               ?i1_INSELECT_select 0070           ?i1_EEPROM24C32_read_byte 0079  
         __size_of_INSELECT_select 0010                     _disp_time_info 0EB7  
          ??_EEPROM24C32_read_byte 0038                           intlevel1 0000  
              ??i1_INSELECT_select 007B            Generic_read_byte@dev_id 0035  
                 ??_UART_byte_send 0070        __size_ofi1_I2C_data_receive 000B  
           ?_shift_reg_set_pin_lcd 0038                     _LoadDataCenter 0CEC  
        i1Generic_read_byte@dev_id 0078               DS1307_shared_get@den 0038  
             DS1307_shared_get@reg 0031               _UPDATE_NEAREST_ALARM 00AF  
        __end_ofi1_INSELECT_select 093B                 _current_diff_index 00B3  
               _current_diff_value 00B4           ??_EEPROM24C32_write_byte 007B  
        Generic_write_byte@address 0074                i1_Generic_read_byte 07D0  
                    _compareAlarms 0C80             __end_of_disp_time_info 0F21  
            __end_of_receiveStruct 08A9                     _display_number 0DB9  
          __end_of_PCF8574_set_pin 0B9B                      _closest_alarm 00C9  
          __size_ofi1_I2C_SendNACK 0008                   _EEPROM_WriteByte 09A6  
             __size_of_DS1307_date 0009       EEPROM24C32_read_byte@address 0036  
             __size_of_DS1307_time 001B               ?i1_Generic_read_byte 0074  
                  checkSensors@any 00EF             __end_of_LoadDataCenter 0D26  
