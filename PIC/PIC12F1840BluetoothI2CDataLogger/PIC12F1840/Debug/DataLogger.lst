     1: 
     2: #include<htc.h>
     3: typedef unsigned char byte;
     4: 
     5: #include "I2C.h"
     6: #include "UART.h"
     7: #include "EEPROM24C64.h"
     8: 
     9: /*
    10: 
    11: 3 commands
    12: 1 store all data
    13: 2 read all data
    14: 3 erase all data
    15: 
    16: */
    17: 
    18: 
    19: byte command;
    20: void interrupt FNC()
    21: {
    22:         
    23:         //If command comes...
    24:         if(RCIF == 1)
    25:         {
    26:                 command = UART_ReadByte();
    27:                 unsigned int address;
    28: 
    29:                 switch(command)
    30:                 {
    31:                         case '1':
    32:         for(int sector = 0; sector < 2048; sector++)
    33:         {
    34: 
    35:         address = sector * 32;
    36:         I2C_Start();
    37:         
    38:         I2C_SendByte(0b10100000);
    39: 
    40: 
    41:         I2C_SendByte((address>>8)&0xff);
    42:         
    43: 
    44:         I2C_SendByte(address & 0xff);
    45:         
    46:         
    47:         for(byte i = 0; i < 32 ; i++)
    48:         {
    49:                 I2C_SendByte(UART_ReadByte());
    50:                 __delay_ms(1);
    51:                 UART_SendByte('T');
    52:         }
    53:         
    54:         I2C_Stop();
    55: 
    56: 
    57:         
    58:         __delay_ms(7);
    59:         }
    60:                 
    61: 
    62:                                 break;
    63:                 case '2':
    64: I2C_Start();
    65:         I2C_SendByte(0b10100000);
    66:         I2C_SendByte(0);
    67:         I2C_SendByte(0);
    68: 
    69:         
    70:         I2C_Stop();
    71: 
    72:         I2C_Start();
    73:         
    74:         I2C_SendByte(0b10100001);
    75:         
    76:         for(long int i= 0; i <= 65535; i++)
    77:         {
    78:                 UART_SendByte(I2C_ReadByte());
    79:                 __delay_ms(5);
    80:         }
    81: 
    82:         I2C_NACK();
    83: 
    84:         I2C_Stop();
    85:                 break;
    86: 
    87: 
    88:         case '3':
    89:                 EEPROM24C64_ClearAllData();
    90:                 UART_SendByte('T');
    91:         break;
    92: 
    93:                 }
    94: 
    95: RCIF = 0;       
    96: }
    97: 
    98: 
    99: 
   100: }
   101: 
   102: 
   103: 
   104: byte read;
   105: void main()
   106: {
   107: 
   108: ANSELA = 0;
   109: SPLLEN = 0;
   110: //4 mhz internal oscillator
   111: IRCF3 = 1;
   112: IRCF2 = 1;
   113: IRCF1 = 0;
   114: IRCF0 = 1;
   115: 
   116: SCS1 = 1 ; //Internel oscillator
   117: SCS0 = 0;
   118: 
   119: PORTA = 0;
   120: 
   121: TRISA0 = 0; //TX pin
   122: RXDTSEL = 1; // RX on RA5
   123: TRISA5 = 1; //RX input
   124: 
   125: I2C_Initialize();
   126: __delay_ms(100);
   127: 
   128: TRISA4 = 0;
   129: UART_Initialize();
   130: __delay_ms(50);
   131: RA4 = 1;
   132: RA4 = 0;
   133: 
   134: 
   135: while(1)
   136: {
   137:         
   138:         
   139: 
   140: }// while(1)
   141: 
   142: }// main
   143: 
