

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jan 07 00:37:02 2020

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011D                     	;# 
   115  011D                     	;# 
   116  018C                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0216                     	;# 
   151  0216                     	;# 
   152  0217                     	;# 
   153  0217                     	;# 
   154  0291                     	;# 
   155  0291                     	;# 
   156  0292                     	;# 
   157  0293                     	;# 
   158  0294                     	;# 
   159  0295                     	;# 
   160  0295                     	;# 
   161  0296                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  039A                     	;# 
   166  039C                     	;# 
   167  039D                     	;# 
   168  039E                     	;# 
   169  039F                     	;# 
   170  0FE4                     	;# 
   171  0FE5                     	;# 
   172  0FE6                     	;# 
   173  0FE7                     	;# 
   174  0FE8                     	;# 
   175  0FE9                     	;# 
   176  0FEA                     	;# 
   177  0FEB                     	;# 
   178  0FED                     	;# 
   179  0FEE                     	;# 
   180  0FEF                     	;# 
   181                           
   182                           	psect	idataBANK0
   183  0002                     __pidataBANK0:	
   184                           
   185                           ;initializer for __x
   186  0002  3401               	retlw	1
   187                           
   188                           ;initializer for __y
   189  0003  3401               	retlw	1
   190                           
   191                           	psect	idataBANK2
   192  0D95                     __pidataBANK2:	
   193                           
   194                           ;initializer for _divisions
   195  0D95  3400               	retlw	0
   196  0D96  349C               	retlw	156
   197  0D97  34DA               	retlw	218
   198  0D98  3401               	retlw	1
   199  0D99  3400               	retlw	0
   200  0D9A  348D               	retlw	141
   201  0D9B  3427               	retlw	39
   202  0D9C  3400               	retlw	0
   203  0D9D  3480               	retlw	128
   204  0D9E  3451               	retlw	81
   205  0D9F  3401               	retlw	1
   206  0DA0  3400               	retlw	0
   207  0DA1  3410               	retlw	16
   208  0DA2  340E               	retlw	14
   209  0DA3  3400               	retlw	0
   210  0DA4  3400               	retlw	0
   211  0DA5  343C               	retlw	60
   212  0DA6  3400               	retlw	0
   213  0DA7  3400               	retlw	0
   214  0DA8  3400               	retlw	0
   215  0DA9  3401               	retlw	1
   216  0DAA  3400               	retlw	0
   217  0DAB  3400               	retlw	0
   218  0DAC  3400               	retlw	0
   219  000C                     _PORTA	set	12
   220  005F                     _GIE	set	95
   221  0058                     _IOCIF	set	88
   222  005E                     _PEIE	set	94
   223  008B                     _SSP1IF	set	139
   224  0088                     _TMR1IF	set	136
   225  04CB                     _IRCF0	set	1227
   226  04CC                     _IRCF1	set	1228
   227  04CD                     _IRCF2	set	1229
   228  04CE                     _IRCF3	set	1230
   229  04C8                     _SCS0	set	1224
   230  04C9                     _SCS1	set	1225
   231  04CF                     _SPLLEN	set	1231
   232  0460                     _TRISA0	set	1120
   233  0461                     _TRISA1	set	1121
   234  0462                     _TRISA2	set	1122
   235  0463                     _TRISA3	set	1123
   236  0464                     _TRISA4	set	1124
   237  0465                     _TRISA5	set	1125
   238  018C                     _ANSELA	set	396
   239  0212                     _SSPADD	set	530
   240  0211                     _SSPBUF	set	529
   241  10B5                     _ACKDT	set	4277
   242  10B4                     _ACKEN	set	4276
   243  10A0                     _BF	set	4256
   244  10B2                     _PEN	set	4274
   245  10B3                     _RCEN	set	4275
   246  10B0                     _SEN	set	4272
   247  10AD                     _SSPEN	set	4269
   248  10A8                     _SSPM0	set	4264
   249  10A9                     _SSPM1	set	4265
   250  10AA                     _SSPM2	set	4266
   251  10AB                     _SSPM3	set	4267
   252                           
   253                           	psect	stringtext
   254  07FD                     __pstringtext:	
   255  07FD                     STR_1:	
   256  07FD  3453               	retlw	83	;'S'
   257  07FE  3461               	retlw	97	;'a'
   258  07FF  3469               	retlw	105	;'i'
   259  0800  346D               	retlw	109	;'m'
   260  0801  3400               	retlw	0
   261                           
   262                           	psect	cinit
   263  0016                     start_initialization:	
   264                           ; #config settings
   265                           
   266  0016                     __initialization:	
   267                           
   268                           ; Clear objects allocated to COMMON
   269  0016  01FC               	clrf	__pbssCOMMON& (0+127)
   270                           
   271                           ; Clear objects allocated to BANK0
   272  0017  3063               	movlw	low __pbssBANK0
   273  0018  0084               	movwf	4
   274  0019  3000               	movlw	high __pbssBANK0
   275  001A  0085               	movwf	5
   276  001B  300B               	movlw	11
   277  001C  318C  24AC  3180   	fcall	clear_ram0
   278                           
   279                           ; Clear objects allocated to BANK1
   280  001F  30A0               	movlw	low __pbssBANK1
   281  0020  0084               	movwf	4
   282  0021  3000               	movlw	high __pbssBANK1
   283  0022  0085               	movwf	5
   284  0023  3039               	movlw	57
   285  0024  318C  24AC  3180   	fcall	clear_ram0
   286                           
   287                           ; Clear objects allocated to BANK2
   288  0027  3020               	movlw	low __pbssBANK2
   289  0028  0084               	movwf	4
   290  0029  3001               	movlw	high __pbssBANK2
   291  002A  0085               	movwf	5
   292  002B  3018               	movlw	24
   293  002C  318C  24AC  3180   	fcall	clear_ram0
   294                           
   295                           ; Initialize objects allocated to BANK0
   296  002F  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
   297  0032  00EE               	movwf	__pdataBANK0& (0+127)
   298  0033  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
   299  0036  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   300                           
   301                           ; Initialize objects allocated to BANK2
   302  0037  3095               	movlw	low __pidataBANK2
   303  0038  0084               	movwf	4
   304  0039  308D               	movlw	(high __pidataBANK2)| (0+128)
   305  003A  0085               	movwf	5
   306  003B  3038               	movlw	low __pdataBANK2
   307  003C  0086               	movwf	6
   308  003D  3001               	movlw	high __pdataBANK2
   309  003E  0087               	movwf	7
   310  003F  3018               	movlw	24
   311  0040  318C  24A6         	fcall	init_ram
   312  0042                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  0042                     __end_of__initialization:	
   316  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   317  0043  0020               	movlb	0
   318  0044  3187  2F46         	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMMON
   321  007C                     __pbssCOMMON:	
   322  007C                     _LCDData:	
   323  007C                     	ds	1
   324                           
   325                           	psect	bssBANK0
   326  0063                     __pbssBANK0:	
   327  0063                     _seconds:	
   328  0063                     	ds	3
   329  0066                     _PCF8574_value:	
   330  0066                     	ds	1
   331  0067                     __temp_:	
   332  0067                     	ds	1
   333  0068                     _dakika:	
   334  0068                     	ds	1
   335  0069                     _saat:	
   336  0069                     	ds	1
   337  006A                     _saim:	
   338  006A                     	ds	1
   339  006B                     _saniye:	
   340  006B                     	ds	1
   341  006C                     _t_i:	
   342  006C                     	ds	1
   343  006D                     _unnecessary:	
   344  006D                     	ds	1
   345                           
   346                           	psect	dataBANK0
   347  006E                     __pdataBANK0:	
   348  006E                     __x:	
   349  006E                     	ds	1
   350  006F                     __y:	
   351  006F                     	ds	1
   352                           
   353                           	psect	bssBANK1
   354  00A0                     __pbssBANK1:	
   355  00A0                     _diffs:	
   356  00A0                     	ds	6
   357  00A6                     _time_array:	
   358  00A6                     	ds	3
   359  00A9                     _Time1End:	
   360  00A9                     	ds	18
   361  00BB                     _Time1Start:	
   362  00BB                     	ds	18
   363  00CD                     _zaman:	
   364  00CD                     	ds	7
   365  00D4                     _number_array:	
   366  00D4                     	ds	5
   367                           
   368                           	psect	bssBANK2
   369  0120                     __pbssBANK2:	
   370  0120                     _difference:	
   371  0120                     	ds	24
   372                           
   373                           	psect	dataBANK2
   374  0138                     __pdataBANK2:	
   375  0138                     _divisions:	
   376  0138                     	ds	24
   377                           
   378                           	psect	clrtext
   379  0CAC                     clear_ram0:	
   380                           ;	Called with FSR0 containing the base address, and
   381                           ;	WREG with the size to clear
   382                           
   383  0CAC  0064               	clrwdt	;clear the watchdog before getting into this loop
   384  0CAD                     clrloop0:	
   385  0CAD  0180               	clrf	0	;clear RAM location pointed to by FSR
   386  0CAE  3101               	addfsr 0,1
   387  0CAF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   388  0CB0  2CAD               	goto	clrloop0	;have we reached the end yet?
   389  0CB1  3400               	retlw	0	;all done for this memory range, return
   390                           
   391                           	psect	inittext
   392  0CA6                     init_ram:	
   393  0CA6  00FE               	movwf	126
   394  0CA7                     initloop:	
   395  0CA7  0012               	moviw fsr0++
   396  0CA8  001E               	movwi fsr1++
   397  0CA9  0BFE               	decfsz	126,f
   398  0CAA  2CA7               	goto	initloop
   399  0CAB  3400               	retlw	0
   400                           
   401                           	psect	cstackCOMMON
   402  0070                     __pcstackCOMMON:	
   403  0070                     ?_DELAY:	
   404  0070                     ?_DELAY100:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_I2C_initialize:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_I2C_Start:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_I2C_data_receive:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_I2C_data_send:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_I2C_SendACK:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_I2C_SendNACK:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_I2C_Stop:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_FNC:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_FNC:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_PCF8574_load_data:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_lcd_clear:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_lcd_yaz:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_LCD_init:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_DS1307_time:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_DS1307_date:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_displayTime:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_displayDate:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_getTimeDifference:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_main:	
   462                           ; 1 bytes @ 0x0
   463                           
   464                           
   465                           ; 1 bytes @ 0x0
   466  0070                     	ds	1
   467  0071                     ??_DELAY:	
   468  0071                     ??_DELAY100:	
   469                           ; 1 bytes @ 0x1
   470                           
   471  0071                     ??_I2C_initialize:	
   472                           ; 1 bytes @ 0x1
   473                           
   474  0071                     ??_I2C_Start:	
   475                           ; 1 bytes @ 0x1
   476                           
   477  0071                     ??_I2C_data_receive:	
   478                           ; 1 bytes @ 0x1
   479                           
   480  0071                     ??_I2C_data_send:	
   481                           ; 1 bytes @ 0x1
   482                           
   483  0071                     ??_I2C_SendACK:	
   484                           ; 1 bytes @ 0x1
   485                           
   486  0071                     ??_I2C_SendNACK:	
   487                           ; 1 bytes @ 0x1
   488                           
   489  0071                     ??_I2C_Stop:	
   490                           ; 1 bytes @ 0x1
   491                           
   492  0071                     ?___bmul:	
   493                           ; 1 bytes @ 0x1
   494                           
   495  0071                     ?___wmul:	
   496                           ; 1 bytes @ 0x1
   497                           
   498  0071                     ?___lwmod:	
   499                           ; 2 bytes @ 0x1
   500                           
   501  0071                     ?___ftpack:	
   502                           ; 2 bytes @ 0x1
   503                           
   504  0071                     ?___lmul:	
   505                           ; 3 bytes @ 0x1
   506                           
   507  0071                     ___bmul@multiplicand:	
   508                           ; 4 bytes @ 0x1
   509                           
   510  0071                     ___wmul@multiplier:	
   511                           ; 1 bytes @ 0x1
   512                           
   513  0071                     ___lwmod@divisor:	
   514                           ; 2 bytes @ 0x1
   515                           
   516  0071                     ___ftpack@arg:	
   517                           ; 2 bytes @ 0x1
   518                           
   519  0071                     ___lmul@multiplier:	
   520                           ; 3 bytes @ 0x1
   521                           
   522                           
   523                           ; 4 bytes @ 0x1
   524  0071                     	ds	1
   525  0072                     ??___bmul:	
   526                           
   527                           ; 1 bytes @ 0x2
   528  0072                     	ds	1
   529  0073                     DELAY@milisecond:	
   530  0073                     I2C_data_send@data:	
   531                           ; 1 bytes @ 0x3
   532                           
   533  0073                     ___bmul@product:	
   534                           ; 1 bytes @ 0x3
   535                           
   536  0073                     ___wmul@multiplicand:	
   537                           ; 1 bytes @ 0x3
   538                           
   539  0073                     ___lwmod@dividend:	
   540                           ; 2 bytes @ 0x3
   541                           
   542                           
   543                           ; 2 bytes @ 0x3
   544  0073                     	ds	1
   545  0074                     ??_PCF8574_load_data:	
   546  0074                     DELAY100@milisecond:	
   547                           ; 1 bytes @ 0x4
   548                           
   549  0074                     ___bmul@multiplier:	
   550                           ; 1 bytes @ 0x4
   551                           
   552  0074                     ___ftpack@exp:	
   553                           ; 1 bytes @ 0x4
   554                           
   555                           
   556                           ; 1 bytes @ 0x4
   557  0074                     	ds	1
   558  0075                     ?_DS1307_shared_get:	
   559  0075                     ??___wmul:	
   560                           ; 1 bytes @ 0x5
   561                           
   562  0075                     ??___lwmod:	
   563                           ; 1 bytes @ 0x5
   564                           
   565  0075                     PCF8574_load_data@data:	
   566                           ; 1 bytes @ 0x5
   567                           
   568  0075                     DS1307_shared_get@reg:	
   569                           ; 1 bytes @ 0x5
   570                           
   571  0075                     ___ftpack@sign:	
   572                           ; 1 bytes @ 0x5
   573                           
   574  0075                     ___wmul@product:	
   575                           ; 1 bytes @ 0x5
   576                           
   577  0075                     ___lmul@multiplicand:	
   578                           ; 2 bytes @ 0x5
   579                           
   580                           
   581                           ; 4 bytes @ 0x5
   582  0075                     	ds	1
   583  0076                     ??___ftpack:	
   584  0076                     ?_shift_reg_set_pin_lcd:	
   585                           ; 1 bytes @ 0x6
   586                           
   587  0076                     ??_DS1307_shared_get:	
   588                           ; 1 bytes @ 0x6
   589                           
   590  0076                     shift_reg_set_pin_lcd@pin_value:	
   591                           ; 1 bytes @ 0x6
   592                           
   593  0076                     ___lwmod@counter:	
   594                           ; 1 bytes @ 0x6
   595                           
   596                           
   597                           ; 1 bytes @ 0x6
   598  0076                     	ds	1
   599  0077                     ??_shift_reg_set_pin_lcd:	
   600  0077                     ?___lwdiv:	
   601                           ; 1 bytes @ 0x7
   602                           
   603  0077                     ?_isleap:	
   604                           ; 2 bytes @ 0x7
   605                           
   606  0077                     ___lwdiv@divisor:	
   607                           ; 2 bytes @ 0x7
   608                           
   609  0077                     isleap@yr:	
   610                           ; 2 bytes @ 0x7
   611                           
   612                           
   613                           ; 2 bytes @ 0x7
   614  0077                     	ds	2
   615  0079                     ??___lmul:	
   616  0079                     ??___lltoft:	
   617                           ; 1 bytes @ 0x9
   618                           
   619  0079                     ??_isleap:	
   620                           ; 1 bytes @ 0x9
   621                           
   622  0079                     shift_reg_set_pin_lcd@pin_number:	
   623                           ; 1 bytes @ 0x9
   624                           
   625  0079                     ___ftadd@sign:	
   626                           ; 1 bytes @ 0x9
   627                           
   628  0079                     ___lwdiv@dividend:	
   629                           ; 1 bytes @ 0x9
   630                           
   631                           
   632                           ; 2 bytes @ 0x9
   633  0079                     	ds	1
   634  007A                     ?_lcd_info:	
   635  007A                     ??_DS1307_time:	
   636                           ; 1 bytes @ 0xA
   637                           
   638  007A                     ??_DS1307_date:	
   639                           ; 1 bytes @ 0xA
   640                           
   641  007A                     lcd_info@data_type:	
   642                           ; 1 bytes @ 0xA
   643                           
   644  007A                     ___ftadd@exp2:	
   645                           ; 1 bytes @ 0xA
   646                           
   647  007A                     ___lltoft@exp:	
   648                           ; 1 bytes @ 0xA
   649                           
   650                           
   651                           ; 1 bytes @ 0xA
   652  007A                     	ds	1
   653  007B                     ??___lwdiv:	
   654  007B                     lcd_info@c:	
   655                           ; 1 bytes @ 0xB
   656                           
   657  007B                     ___ftadd@exp1:	
   658                           ; 1 bytes @ 0xB
   659                           
   660  007B                     _isleap$459:	
   661                           ; 1 bytes @ 0xB
   662                           
   663                           
   664                           ; 1 bytes @ 0xB
   665  007B                     	ds	1
   666  007C                     ??_lcd_write_number:	
   667  007C                     ??_main:	
   668                           ; 1 bytes @ 0xC
   669                           
   670  007C                     ??___ftsub:	
   671                           ; 1 bytes @ 0xC
   672                           
   673  007C                     ??_months_to_days:	
   674                           ; 1 bytes @ 0xC
   675                           
   676                           
   677                           	psect	cstackBANK0
   678  0020                     __pcstackBANK0:	
   679                           ; 1 bytes @ 0xC
   680                           
   681  0020                     ??_lcd_info:	
   682  0020                     ?___ftadd:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0020                     DS1307_shared_get@addr:	
   686                           ; 3 bytes @ 0x0
   687                           
   688  0020                     ___lwdiv@quotient:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0020                     ___ftadd@f1:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0020                     ___lmul@product:	
   695                           ; 3 bytes @ 0x0
   696                           
   697                           
   698                           ; 4 bytes @ 0x0
   699  0020                     	ds	1
   700  0021                     DS1307_shared_get@k:	
   701                           
   702                           ; 1 bytes @ 0x1
   703  0021                     	ds	1
   704  0022                     ?_lcd_goto:	
   705  0022                     lcd_goto@p_2:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0022                     DS1307_shared_get@den:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  0022                     ___lwdiv@counter:	
   712                           ; 1 bytes @ 0x2
   713                           
   714                           
   715                           ; 1 bytes @ 0x2
   716  0022                     	ds	1
   717  0023                     ??_lcd_goto:	
   718  0023                     ?_utoa:	
   719                           ; 1 bytes @ 0x3
   720                           
   721  0023                     ?_months_to_days:	
   722                           ; 1 bytes @ 0x3
   723                           
   724  0023                     utoa@val:	
   725                           ; 2 bytes @ 0x3
   726                           
   727  0023                     months_to_days@month:	
   728                           ; 2 bytes @ 0x3
   729                           
   730  0023                     ___ftadd@f2:	
   731                           ; 2 bytes @ 0x3
   732                           
   733                           
   734                           ; 3 bytes @ 0x3
   735  0023                     	ds	1
   736  0024                     ?___lltoft:	
   737  0024                     ?_years_to_days:	
   738                           ; 3 bytes @ 0x4
   739                           
   740  0024                     lcd_goto@p_1:	
   741                           ; 4 bytes @ 0x4
   742                           
   743  0024                     years_to_days@yr:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0024                     ___lltoft@c:	
   747                           ; 2 bytes @ 0x4
   748                           
   749                           
   750                           ; 4 bytes @ 0x4
   751  0024                     	ds	1
   752  0025                     ??_lcd_clear:	
   753  0025                     ??_lcd_yaz:	
   754                           ; 1 bytes @ 0x5
   755                           
   756  0025                     utoa@base:	
   757                           ; 1 bytes @ 0x5
   758                           
   759                           
   760                           ; 2 bytes @ 0x5
   761  0025                     	ds	1
   762  0026                     ??_LCD_init:	
   763  0026                     ??___ftadd:	
   764                           ; 1 bytes @ 0x6
   765                           
   766  0026                     lcd_yaz@s:	
   767                           ; 1 bytes @ 0x6
   768                           
   769                           
   770                           ; 1 bytes @ 0x6
   771  0026                     	ds	1
   772  0027                     ??_utoa:	
   773  0027                     ?_lcd_write:	
   774                           ; 1 bytes @ 0x7
   775                           
   776  0027                     lcd_write@s:	
   777                           ; 1 bytes @ 0x7
   778                           
   779                           
   780                           ; 2 bytes @ 0x7
   781  0027                     	ds	1
   782  0028                     ??_years_to_days:	
   783  0028                     ?___ftdiv:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0028                     utoa@v:	
   787                           ; 3 bytes @ 0x8
   788                           
   789  0028                     ___ftdiv@f2:	
   790                           ; 2 bytes @ 0x8
   791                           
   792                           
   793                           ; 3 bytes @ 0x8
   794  0028                     	ds	1
   795  0029                     ??_lcd_write:	
   796                           
   797                           ; 1 bytes @ 0x9
   798  0029                     	ds	1
   799  002A                     ?___ftsub:	
   800  002A                     utoa@c:	
   801                           ; 3 bytes @ 0xA
   802                           
   803  002A                     ___ftsub@f2:	
   804                           ; 1 bytes @ 0xA
   805                           
   806                           
   807                           ; 3 bytes @ 0xA
   808  002A                     	ds	1
   809  002B                     utoa@buf:	
   810  002B                     ___ftdiv@f1:	
   811                           ; 1 bytes @ 0xB
   812                           
   813                           
   814                           ; 3 bytes @ 0xB
   815  002B                     	ds	1
   816  002C                     ?_itoa:	
   817  002C                     itoa@val:	
   818                           ; 1 bytes @ 0xC
   819                           
   820                           
   821                           ; 2 bytes @ 0xC
   822  002C                     	ds	1
   823  002D                     ___ftsub@f1:	
   824                           
   825                           ; 3 bytes @ 0xD
   826  002D                     	ds	1
   827  002E                     ??___ftdiv:	
   828  002E                     itoa@base:	
   829                           ; 1 bytes @ 0xE
   830                           
   831                           
   832                           ; 2 bytes @ 0xE
   833  002E                     	ds	2
   834  0030                     ??_itoa:	
   835                           
   836                           ; 1 bytes @ 0x10
   837  0030                     	ds	1
   838  0031                     itoa@cp:	
   839                           
   840                           ; 1 bytes @ 0x11
   841  0031                     	ds	1
   842  0032                     ___ftdiv@cntr:	
   843  0032                     itoa@buf:	
   844                           ; 1 bytes @ 0x12
   845                           
   846                           
   847                           ; 1 bytes @ 0x12
   848  0032                     	ds	1
   849  0033                     ?_lcd_write_number:	
   850  0033                     lcd_write_number@number:	
   851                           ; 1 bytes @ 0x13
   852                           
   853  0033                     ___ftdiv@f3:	
   854                           ; 2 bytes @ 0x13
   855                           
   856                           
   857                           ; 3 bytes @ 0x13
   858  0033                     	ds	2
   859  0035                     ??_displayTime:	
   860  0035                     ??_displayDate:	
   861                           ; 1 bytes @ 0x15
   862                           
   863                           
   864                           ; 1 bytes @ 0x15
   865  0035                     	ds	1
   866  0036                     ?_ymd_to_scalar:	
   867  0036                     ___ftdiv@exp:	
   868                           ; 4 bytes @ 0x16
   869                           
   870  0036                     ymd_to_scalar@yr:	
   871                           ; 1 bytes @ 0x16
   872                           
   873                           
   874                           ; 2 bytes @ 0x16
   875  0036                     	ds	1
   876  0037                     displayTime@c:	
   877  0037                     displayDate@c:	
   878                           ; 1 bytes @ 0x17
   879                           
   880  0037                     ___ftdiv@sign:	
   881                           ; 1 bytes @ 0x17
   882                           
   883                           
   884                           ; 1 bytes @ 0x17
   885  0037                     	ds	1
   886  0038                     ?___fttol:	
   887  0038                     ymd_to_scalar@mo:	
   888                           ; 4 bytes @ 0x18
   889                           
   890  0038                     ___fttol@f1:	
   891                           ; 2 bytes @ 0x18
   892                           
   893                           
   894                           ; 3 bytes @ 0x18
   895  0038                     	ds	2
   896  003A                     ymd_to_scalar@day:	
   897                           
   898                           ; 2 bytes @ 0x1A
   899  003A                     	ds	2
   900  003C                     ??___fttol:	
   901  003C                     ??_ymd_to_scalar:	
   902                           ; 1 bytes @ 0x1C
   903                           
   904                           
   905                           ; 1 bytes @ 0x1C
   906  003C                     	ds	4
   907  0040                     ___fttol@sign1:	
   908  0040                     _ymd_to_scalar$471:	
   909                           ; 1 bytes @ 0x20
   910                           
   911                           
   912                           ; 2 bytes @ 0x20
   913  0040                     	ds	1
   914  0041                     ___fttol@lval:	
   915                           
   916                           ; 4 bytes @ 0x21
   917  0041                     	ds	1
   918  0042                     ymd_to_scalar@scalar:	
   919                           
   920                           ; 4 bytes @ 0x22
   921  0042                     	ds	3
   922  0045                     ___fttol@exp1:	
   923                           
   924                           ; 1 bytes @ 0x25
   925  0045                     	ds	1
   926  0046                     ?_mktime:	
   927                           
   928                           ; 4 bytes @ 0x26
   929  0046                     	ds	4
   930  004A                     ??_mktime:	
   931                           
   932                           ; 1 bytes @ 0x2A
   933  004A                     	ds	6
   934  0050                     mktime@tt:	
   935                           
   936                           ; 4 bytes @ 0x30
   937  0050                     	ds	4
   938  0054                     mktime@timeptr:	
   939                           
   940                           ; 1 bytes @ 0x34
   941  0054                     	ds	1
   942  0055                     ?___altoft:	
   943  0055                     ___altoft@c:	
   944                           ; 3 bytes @ 0x35
   945                           
   946                           
   947                           ; 4 bytes @ 0x35
   948  0055                     	ds	4
   949  0059                     ??___altoft:	
   950                           
   951                           ; 1 bytes @ 0x39
   952  0059                     	ds	2
   953  005B                     ___altoft@exp:	
   954                           
   955                           ; 1 bytes @ 0x3B
   956  005B                     	ds	1
   957  005C                     ___altoft@sign:	
   958                           
   959                           ; 1 bytes @ 0x3C
   960  005C                     	ds	1
   961  005D                     ??_getTimeDifference:	
   962                           
   963                           ; 1 bytes @ 0x3D
   964  005D                     	ds	4
   965  0061                     getTimeDifference@i:	
   966                           
   967                           ; 1 bytes @ 0x41
   968  0061                     	ds	1
   969  0062                     main@counter:	
   970                           
   971                           ; 1 bytes @ 0x42
   972  0062                     	ds	1
   973                           
   974                           	psect	maintext
   975  0746                     __pmaintext:	
   976 ;;
   977 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   978 ;;
   979 ;; *************** function _main *****************
   980 ;; Defined at:
   981 ;;		line 35 in file "TimeCounterf1840OnlyLCD.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  counter         1   66[BANK0 ] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : B1F/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   995 ;;      Params:         0       0       0       0
   996 ;;      Locals:         0       1       0       0
   997 ;;      Temps:          0       0       0       0
   998 ;;      Totals:         0       1       0       0
   999 ;;Total ram usage:        1 bytes
  1000 ;; Hardware stack levels required when called:   10
  1001 ;; This function calls:
  1002 ;;		_DELAY
  1003 ;;		_DELAY100
  1004 ;;		_DS1307_date
  1005 ;;		_DS1307_time
  1006 ;;		_I2C_initialize
  1007 ;;		_LCD_init
  1008 ;;		_displayDate
  1009 ;;		_displayTime
  1010 ;;		_getTimeDifference
  1011 ;;		_lcd_goto
  1012 ;;		_lcd_write
  1013 ;; This function is called by:
  1014 ;;		Startup code after reset
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _main
  1020  0746                     _main:	
  1021                           
  1022                           ;TimeCounterf1840OnlyLCD.c: 42: ANSELA = 0;
  1023                           
  1024                           ;incstack = 0
  1025                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1026  0746  0023               	movlb	3	; select bank3
  1027  0747  018C               	clrf	12	;volatile
  1028                           
  1029                           ;TimeCounterf1840OnlyLCD.c: 43: SPLLEN = 0;
  1030  0748  0021               	movlb	1	; select bank1
  1031  0749  1399               	bcf	25,7	;volatile
  1032                           
  1033                           ;TimeCounterf1840OnlyLCD.c: 45: IRCF3 = 1;
  1034  074A  1719               	bsf	25,6	;volatile
  1035                           
  1036                           ;TimeCounterf1840OnlyLCD.c: 46: IRCF2 = 1;
  1037  074B  1699               	bsf	25,5	;volatile
  1038                           
  1039                           ;TimeCounterf1840OnlyLCD.c: 47: IRCF1 = 1;
  1040  074C  1619               	bsf	25,4	;volatile
  1041                           
  1042                           ;TimeCounterf1840OnlyLCD.c: 48: IRCF0 = 1;
  1043  074D  1599               	bsf	25,3	;volatile
  1044                           
  1045                           ;TimeCounterf1840OnlyLCD.c: 50: SCS1 = 1 ;
  1046  074E  1499               	bsf	25,1	;volatile
  1047                           
  1048                           ;TimeCounterf1840OnlyLCD.c: 51: SCS0 = 0;
  1049  074F  1019               	bcf	25,0	;volatile
  1050                           
  1051                           ;TimeCounterf1840OnlyLCD.c: 54: TRISA0 = 0;
  1052  0750  100C               	bcf	12,0	;volatile
  1053                           
  1054                           ;TimeCounterf1840OnlyLCD.c: 55: PORTA = 0;
  1055  0751  0020               	movlb	0	; select bank0
  1056  0752  018C               	clrf	12	;volatile
  1057                           
  1058                           ;TimeCounterf1840OnlyLCD.c: 56: TRISA3 = 1;
  1059  0753  0021               	movlb	1	; select bank1
  1060  0754  158C               	bsf	12,3	;volatile
  1061                           
  1062                           ;TimeCounterf1840OnlyLCD.c: 57: TRISA4 = 0;
  1063  0755  120C               	bcf	12,4	;volatile
  1064                           
  1065                           ;TimeCounterf1840OnlyLCD.c: 58: TRISA5 = 0;
  1066  0756  128C               	bcf	12,5	;volatile
  1067                           
  1068                           ;TimeCounterf1840OnlyLCD.c: 60: TRISA1 = 1;
  1069  0757  148C               	bsf	12,1	;volatile
  1070                           
  1071                           ;TimeCounterf1840OnlyLCD.c: 61: TRISA2 = 1;
  1072  0758  150C               	bsf	12,2	;volatile
  1073                           
  1074                           ;TimeCounterf1840OnlyLCD.c: 63: I2C_initialize();
  1075  0759  318D  2517  3187   	fcall	_I2C_initialize
  1076                           
  1077                           ;TimeCounterf1840OnlyLCD.c: 66: DELAY(100);
  1078  075C  3064               	movlw	100
  1079  075D  318C  24E3  3187   	fcall	_DELAY
  1080                           
  1081                           ;TimeCounterf1840OnlyLCD.c: 67: LCD_init();
  1082  0760  3187  2797  3187   	fcall	_LCD_init
  1083                           
  1084                           ;TimeCounterf1840OnlyLCD.c: 69: PEIE = 1;
  1085  0763  170B               	bsf	11,6	;volatile
  1086                           
  1087                           ;TimeCounterf1840OnlyLCD.c: 70: GIE = 1;
  1088  0764  178B               	bsf	11,7	;volatile
  1089                           
  1090                           ;TimeCounterf1840OnlyLCD.c: 71: byte counter=0;
  1091  0765  0020               	movlb	0	; select bank0
  1092  0766  01E2               	clrf	main@counter
  1093                           
  1094                           ;TimeCounterf1840OnlyLCD.c: 77: lcd_goto(1, 1);
  1095  0767  01A2               	clrf	lcd_goto@p_2
  1096  0768  0AA2               	incf	lcd_goto@p_2,f
  1097  0769  3001               	movlw	1
  1098  076A  3187  27DD  3187   	fcall	_lcd_goto
  1099                           
  1100                           ;TimeCounterf1840OnlyLCD.c: 78: lcd_write("Saim");
  1101  076D  30FD               	movlw	low (STR_1| (0+32768))
  1102  076E  0020               	movlb	0	; select bank0
  1103  076F  00A7               	movwf	lcd_write@s
  1104  0770  3087               	movlw	high (STR_1| (0+32768))
  1105  0771  00A8               	movwf	lcd_write@s+1
  1106  0772  318D  25AD  3187   	fcall	_lcd_write
  1107  0775                     l2813:	
  1108                           ;TimeCounterf1840OnlyLCD.c: 79: while(1)
  1109                           
  1110                           
  1111                           ;TimeCounterf1840OnlyLCD.c: 80: {
  1112                           ;TimeCounterf1840OnlyLCD.c: 86: DS1307_time();
  1113  0775  318C  24D0  3187   	fcall	_DS1307_time
  1114                           
  1115                           ;TimeCounterf1840OnlyLCD.c: 87: DS1307_date();
  1116  0778  318D  253F  3187   	fcall	_DS1307_date
  1117                           
  1118                           ;TimeCounterf1840OnlyLCD.c: 88: getTimeDifference();
  1119  077B  3180  2046  3187   	fcall	_getTimeDifference
  1120                           
  1121                           ;TimeCounterf1840OnlyLCD.c: 89: lcd_goto(1, 1);
  1122  077E  0020               	movlb	0	; select bank0
  1123  077F  01A2               	clrf	lcd_goto@p_2
  1124  0780  0AA2               	incf	lcd_goto@p_2,f
  1125  0781  3001               	movlw	1
  1126  0782  3187  27DD  3187   	fcall	_lcd_goto
  1127                           
  1128                           ;TimeCounterf1840OnlyLCD.c: 90: displayTime();
  1129  0785  318E  26AE  3187   	fcall	_displayTime
  1130                           
  1131                           ;TimeCounterf1840OnlyLCD.c: 91: lcd_goto(2, 1);
  1132  0788  0020               	movlb	0	; select bank0
  1133  0789  01A2               	clrf	lcd_goto@p_2
  1134  078A  0AA2               	incf	lcd_goto@p_2,f
  1135  078B  3002               	movlw	2
  1136  078C  3187  27DD  3187   	fcall	_lcd_goto
  1137                           
  1138                           ;TimeCounterf1840OnlyLCD.c: 92: displayDate();
  1139  078F  318E  2688  3187   	fcall	_displayDate
  1140                           
  1141                           ;TimeCounterf1840OnlyLCD.c: 93: DELAY100(9);
  1142  0792  3009               	movlw	9
  1143  0793  318D  2504  3187   	fcall	_DELAY100
  1144  0796  2F75               	goto	l2813
  1145  0797                     __end_of_main:	
  1146                           
  1147                           	psect	text1
  1148  0046                     __ptext1:	
  1149 ;; *************** function _getTimeDifference *****************
  1150 ;; Defined at:
  1151 ;;		line 27 in file "TimeDiff.h"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  i               1   65[BANK0 ] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1165 ;;      Params:         0       0       0       0
  1166 ;;      Locals:         0       1       0       0
  1167 ;;      Temps:          0       4       0       0
  1168 ;;      Totals:         0       5       0       0
  1169 ;;Total ram usage:        5 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    5
  1172 ;; This function calls:
  1173 ;;		___altoft
  1174 ;;		___ftdiv
  1175 ;;		___ftsub
  1176 ;;		___fttol
  1177 ;;		___lltoft
  1178 ;;		___lmul
  1179 ;;		_mktime
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _getTimeDifference
  1187  0046                     _getTimeDifference:	
  1188                           
  1189                           ;TimeDiff.h: 36: Time1Start.tm_hour=12;
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _getTimeDifference: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1193  0046  300C               	movlw	12
  1194  0047  0021               	movlb	1	; select bank1
  1195  0048  00BF               	movwf	(_Time1Start^(0+128)+4)
  1196  0049  3000               	movlw	0
  1197  004A  00C0               	movwf	(_Time1Start^(0+128)+5)
  1198                           
  1199                           ;TimeDiff.h: 37: Time1Start.tm_min=30;
  1200  004B  301E               	movlw	30
  1201  004C  00BD               	movwf	(_Time1Start^(0+128)+2)
  1202  004D  3000               	movlw	0
  1203  004E  00BE               	movwf	(_Time1Start^(0+128)+3)
  1204                           
  1205                           ;TimeDiff.h: 38: Time1Start.tm_sec=0;
  1206  004F  01BB               	clrf	_Time1Start^(0+128)
  1207  0050  01BC               	clrf	(_Time1Start+1)^(0+128)
  1208                           
  1209                           ;TimeDiff.h: 39: Time1Start.tm_year=118;
  1210  0051  3076               	movlw	118
  1211  0052  00C5               	movwf	(_Time1Start^(0+128)+10)
  1212  0053  3000               	movlw	0
  1213  0054  00C6               	movwf	(_Time1Start^(0+128)+11)
  1214                           
  1215                           ;TimeDiff.h: 40: Time1Start.tm_mon=5-1;
  1216  0055  3004               	movlw	4
  1217  0056  00C3               	movwf	(_Time1Start^(0+128)+8)
  1218  0057  3000               	movlw	0
  1219  0058  00C4               	movwf	(_Time1Start^(0+128)+9)
  1220                           
  1221                           ;TimeDiff.h: 41: Time1Start.tm_mday=2;
  1222  0059  3002               	movlw	2
  1223  005A  00C1               	movwf	(_Time1Start^(0+128)+6)
  1224  005B  3000               	movlw	0
  1225  005C  00C2               	movwf	(_Time1Start^(0+128)+7)
  1226                           
  1227                           ;TimeDiff.h: 44: Time1End.tm_hour= zaman[4];
  1228  005D  0851               	movf	(_zaman^(0+128)+4),w
  1229  005E  0020               	movlb	0	; select bank0
  1230  005F  00DD               	movwf	??_getTimeDifference
  1231  0060  01DE               	clrf	??_getTimeDifference+1
  1232  0061  085D               	movf	??_getTimeDifference,w
  1233  0062  0021               	movlb	1	; select bank1
  1234  0063  00AD               	movwf	(_Time1End^(0+128)+4)
  1235  0064  0020               	movlb	0	; select bank0
  1236  0065  085E               	movf	??_getTimeDifference+1,w
  1237  0066  0021               	movlb	1	; select bank1
  1238  0067  00AE               	movwf	((_Time1End+1)^(0+128)+4)
  1239                           
  1240                           ;TimeDiff.h: 45: Time1End.tm_min=zaman[5];
  1241  0068  0852               	movf	(_zaman^(0+128)+5),w
  1242  0069  0020               	movlb	0	; select bank0
  1243  006A  00DD               	movwf	??_getTimeDifference
  1244  006B  01DE               	clrf	??_getTimeDifference+1
  1245  006C  085D               	movf	??_getTimeDifference,w
  1246  006D  0021               	movlb	1	; select bank1
  1247  006E  00AB               	movwf	(_Time1End^(0+128)+2)
  1248  006F  0020               	movlb	0	; select bank0
  1249  0070  085E               	movf	??_getTimeDifference+1,w
  1250  0071  0021               	movlb	1	; select bank1
  1251  0072  00AC               	movwf	((_Time1End+1)^(0+128)+2)
  1252                           
  1253                           ;TimeDiff.h: 46: Time1End.tm_sec=zaman[6];
  1254  0073  0853               	movf	(_zaman^(0+128)+6),w
  1255  0074  0020               	movlb	0	; select bank0
  1256  0075  00DD               	movwf	??_getTimeDifference
  1257  0076  01DE               	clrf	??_getTimeDifference+1
  1258  0077  085D               	movf	??_getTimeDifference,w
  1259  0078  0021               	movlb	1	; select bank1
  1260  0079  00A9               	movwf	_Time1End^(0+128)
  1261  007A  0020               	movlb	0	; select bank0
  1262  007B  085E               	movf	??_getTimeDifference+1,w
  1263  007C  0021               	movlb	1	; select bank1
  1264  007D  00AA               	movwf	(_Time1End+1)^(0+128)
  1265                           
  1266                           ;TimeDiff.h: 47: Time1End.tm_year=100+zaman[0];
  1267  007E  084D               	movf	_zaman^(0+128),w
  1268  007F  3E64               	addlw	100
  1269  0080  00B3               	movwf	(_Time1End^(0+128)+10)
  1270  0081  3000               	movlw	0
  1271  0082  1803               	skipnc
  1272  0083  3001               	movlw	1
  1273  0084  00B4               	movwf	(_Time1End^(0+128)+11)
  1274                           
  1275                           ;TimeDiff.h: 48: Time1End.tm_mon=zaman[2]-1;
  1276  0085  084F               	movf	(_zaman^(0+128)+2),w
  1277  0086  3EFF               	addlw	255
  1278  0087  00B1               	movwf	(_Time1End^(0+128)+8)
  1279  0088  30FF               	movlw	255
  1280  0089  1803               	skipnc
  1281  008A  3000               	movlw	0
  1282  008B  00B2               	movwf	(_Time1End^(0+128)+9)
  1283                           
  1284                           ;TimeDiff.h: 49: Time1End.tm_mday=zaman[3];
  1285  008C  0850               	movf	(_zaman^(0+128)+3),w
  1286  008D  0020               	movlb	0	; select bank0
  1287  008E  00DD               	movwf	??_getTimeDifference
  1288  008F  01DE               	clrf	??_getTimeDifference+1
  1289  0090  085D               	movf	??_getTimeDifference,w
  1290  0091  0021               	movlb	1	; select bank1
  1291  0092  00AF               	movwf	(_Time1End^(0+128)+6)
  1292  0093  0020               	movlb	0	; select bank0
  1293  0094  085E               	movf	??_getTimeDifference+1,w
  1294  0095  0021               	movlb	1	; select bank1
  1295  0096  00B0               	movwf	((_Time1End+1)^(0+128)+6)
  1296                           
  1297                           ;TimeDiff.h: 51: seconds = ((double)((time_t)(mktime(&Time1End))-(time_t)(mktime(&Time1S
      +                          tart))));
  1298  0097  30BB               	movlw	(low (_Time1Start| 0))& (0+255)
  1299  0098  3181  219A  3180   	fcall	_mktime
  1300  009B  0020               	movlb	0	; select bank0
  1301  009C  0946               	comf	?_mktime,w
  1302  009D  00DD               	movwf	??_getTimeDifference
  1303  009E  0947               	comf	?_mktime+1,w
  1304  009F  00DE               	movwf	??_getTimeDifference+1
  1305  00A0  0948               	comf	?_mktime+2,w
  1306  00A1  00DF               	movwf	??_getTimeDifference+2
  1307  00A2  0949               	comf	?_mktime+3,w
  1308  00A3  00E0               	movwf	??_getTimeDifference+3
  1309  00A4  0ADD               	incf	??_getTimeDifference,f
  1310  00A5  1903               	skipnz
  1311  00A6  0ADE               	incf	??_getTimeDifference+1,f
  1312  00A7  1903               	skipnz
  1313  00A8  0ADF               	incf	??_getTimeDifference+2,f
  1314  00A9  1903               	skipnz
  1315  00AA  0AE0               	incf	??_getTimeDifference+3,f
  1316  00AB  30A9               	movlw	(low (_Time1End| 0))& (0+255)
  1317  00AC  3181  219A  3180   	fcall	_mktime
  1318  00AF  0020               	movlb	0	; select bank0
  1319  00B0  0846               	movf	?_mktime,w
  1320  00B1  07DD               	addwf	??_getTimeDifference,f
  1321  00B2  0847               	movf	?_mktime+1,w
  1322  00B3  3DDE               	addwfc	??_getTimeDifference+1,f
  1323  00B4  0848               	movf	?_mktime+2,w
  1324  00B5  3DDF               	addwfc	??_getTimeDifference+2,f
  1325  00B6  0849               	movf	?_mktime+3,w
  1326  00B7  3DE0               	addwfc	??_getTimeDifference+3,f
  1327  00B8  0860               	movf	??_getTimeDifference+3,w
  1328  00B9  00D8               	movwf	___altoft@c+3
  1329  00BA  085F               	movf	??_getTimeDifference+2,w
  1330  00BB  00D7               	movwf	___altoft@c+2
  1331  00BC  085E               	movf	??_getTimeDifference+1,w
  1332  00BD  00D6               	movwf	___altoft@c+1
  1333  00BE  085D               	movf	??_getTimeDifference,w
  1334  00BF  00D5               	movwf	___altoft@c
  1335  00C0  318F  27C3  3180   	fcall	___altoft
  1336  00C3  0020               	movlb	0	; select bank0
  1337  00C4  0855               	movf	?___altoft,w
  1338  00C5  00E3               	movwf	_seconds
  1339  00C6  0856               	movf	?___altoft+1,w
  1340  00C7  00E4               	movwf	_seconds+1
  1341  00C8  0857               	movf	?___altoft+2,w
  1342  00C9  00E5               	movwf	_seconds+2
  1343                           
  1344                           ;TimeDiff.h: 52: for(char i=0; i < 6; i++)
  1345  00CA  01E1               	clrf	getTimeDifference@i
  1346  00CB  3006               	movlw	6
  1347  00CC  0261               	subwf	getTimeDifference@i,w
  1348  00CD  1803               	btfsc	3,0
  1349  00CE  2997               	goto	l2769
  1350  00CF                     l2753:	
  1351                           
  1352                           ;TimeDiff.h: 53: {
  1353                           ;TimeDiff.h: 54: difference[i] = (long)(seconds/divisions[i]);
  1354  00CF  0863               	movf	_seconds,w
  1355  00D0  00AB               	movwf	___ftdiv@f1
  1356  00D1  0864               	movf	_seconds+1,w
  1357  00D2  00AC               	movwf	___ftdiv@f1+1
  1358  00D3  0865               	movf	_seconds+2,w
  1359  00D4  00AD               	movwf	___ftdiv@f1+2
  1360  00D5  0861               	movf	getTimeDifference@i,w
  1361  00D6  00DD               	movwf	??_getTimeDifference
  1362  00D7  3001               	movlw	1
  1363  00D8                     u3695:	
  1364  00D8  35DD               	lslf	??_getTimeDifference,f
  1365  00D9  3EFF               	addlw	-1
  1366  00DA  1D03               	skipz
  1367  00DB  28D8               	goto	u3695
  1368  00DC  355D               	lslf	??_getTimeDifference,w
  1369  00DD  3E38               	addlw	(low (_divisions| (0+256)))& (0+255)
  1370  00DE  0086               	movwf	6
  1371  00DF  3001               	movlw	1	; select bank2/3
  1372  00E0  0087               	movwf	7
  1373  00E1  3F40               	moviw [0]fsr1
  1374  00E2  00A4               	movwf	___lltoft@c
  1375  00E3  3F41               	moviw [1]fsr1
  1376  00E4  00A5               	movwf	___lltoft@c+1
  1377  00E5  3F42               	moviw [2]fsr1
  1378  00E6  00A6               	movwf	___lltoft@c+2
  1379  00E7  3F43               	moviw [3]fsr1
  1380  00E8  00A7               	movwf	___lltoft@c+3
  1381  00E9  318E  26D4  3180   	fcall	___lltoft
  1382  00EC  0020               	movlb	0	; select bank0
  1383  00ED  0824               	movf	?___lltoft,w
  1384  00EE  00A8               	movwf	___ftdiv@f2
  1385  00EF  0825               	movf	?___lltoft+1,w
  1386  00F0  00A9               	movwf	___ftdiv@f2+1
  1387  00F1  0826               	movf	?___lltoft+2,w
  1388  00F2  00AA               	movwf	___ftdiv@f2+2
  1389  00F3  3183  23B1  3180   	fcall	___ftdiv
  1390  00F6  0020               	movlb	0	; select bank0
  1391  00F7  0828               	movf	?___ftdiv,w
  1392  00F8  00B8               	movwf	___fttol@f1
  1393  00F9  0829               	movf	?___ftdiv+1,w
  1394  00FA  00B9               	movwf	___fttol@f1+1
  1395  00FB  082A               	movf	?___ftdiv+2,w
  1396  00FC  00BA               	movwf	___fttol@f1+2
  1397  00FD  3184  245A  3180   	fcall	___fttol
  1398  0100  0020               	movlb	0	; select bank0
  1399  0101  0861               	movf	getTimeDifference@i,w
  1400  0102  00DE               	movwf	??_getTimeDifference+1
  1401  0103  3001               	movlw	1
  1402  0104                     u3705:	
  1403  0104  35DE               	lslf	??_getTimeDifference+1,f
  1404  0105  3EFF               	addlw	-1
  1405  0106  1D03               	skipz
  1406  0107  2904               	goto	u3705
  1407  0108  355E               	lslf	??_getTimeDifference+1,w
  1408  0109  3E20               	addlw	(low (_difference| (0+256)))& (0+255)
  1409  010A  0086               	movwf	6
  1410  010B  3001               	movlw	1	; select bank2/3
  1411  010C  0087               	movwf	7
  1412  010D  0838               	movf	?___fttol,w
  1413  010E  3FC0               	movwi [0]fsr1
  1414  010F  0839               	movf	?___fttol+1,w
  1415  0110  3FC1               	movwi [1]fsr1
  1416  0111  083A               	movf	?___fttol+2,w
  1417  0112  3FC2               	movwi [2]fsr1
  1418  0113  083B               	movf	?___fttol+3,w
  1419  0114  3FC3               	movwi [3]fsr1
  1420                           
  1421                           ;TimeDiff.h: 55: diffs[i] = (unsigned char)difference[i];
  1422  0115  0861               	movf	getTimeDifference@i,w
  1423  0116  00DD               	movwf	??_getTimeDifference
  1424  0117  3001               	movlw	1
  1425  0118                     u3715:	
  1426  0118  35DD               	lslf	??_getTimeDifference,f
  1427  0119  3EFF               	addlw	-1
  1428  011A  1D03               	skipz
  1429  011B  2918               	goto	u3715
  1430  011C  355D               	lslf	??_getTimeDifference,w
  1431  011D  3E20               	addlw	(low (_difference| (0+256)))& (0+255)
  1432  011E  0086               	movwf	6
  1433  011F  3001               	movlw	1	; select bank2/3
  1434  0120  0087               	movwf	7
  1435  0121  0801               	movf	1,w
  1436  0122  00DE               	movwf	??_getTimeDifference+1
  1437  0123  0861               	movf	getTimeDifference@i,w
  1438  0124  3EA0               	addlw	(low (_diffs| 0))& (0+255)
  1439  0125  0086               	movwf	6
  1440  0126  0187               	clrf	7
  1441  0127  085E               	movf	??_getTimeDifference+1,w
  1442  0128  0081               	movwf	1
  1443                           
  1444                           ;TimeDiff.h: 56: seconds -= difference[i]*divisions[i];
  1445  0129  0861               	movf	getTimeDifference@i,w
  1446  012A  00DD               	movwf	??_getTimeDifference
  1447  012B  3001               	movlw	1
  1448  012C                     u3725:	
  1449  012C  35DD               	lslf	??_getTimeDifference,f
  1450  012D  3EFF               	addlw	-1
  1451  012E  1D03               	skipz
  1452  012F  292C               	goto	u3725
  1453  0130  355D               	lslf	??_getTimeDifference,w
  1454  0131  3E38               	addlw	(low (_divisions| (0+256)))& (0+255)
  1455  0132  0086               	movwf	6
  1456  0133  3001               	movlw	1	; select bank2/3
  1457  0134  0087               	movwf	7
  1458  0135  3F40               	moviw [0]fsr1
  1459  0136  00F5               	movwf	___lmul@multiplicand
  1460  0137  3F41               	moviw [1]fsr1
  1461  0138  00F6               	movwf	___lmul@multiplicand+1
  1462  0139  3F42               	moviw [2]fsr1
  1463  013A  00F7               	movwf	___lmul@multiplicand+2
  1464  013B  3F43               	moviw [3]fsr1
  1465  013C  00F8               	movwf	___lmul@multiplicand+3
  1466  013D  0861               	movf	getTimeDifference@i,w
  1467  013E  00DE               	movwf	??_getTimeDifference+1
  1468  013F  3001               	movlw	1
  1469  0140                     u3735:	
  1470  0140  35DE               	lslf	??_getTimeDifference+1,f
  1471  0141  3EFF               	addlw	-1
  1472  0142  1D03               	skipz
  1473  0143  2940               	goto	u3735
  1474  0144  355E               	lslf	??_getTimeDifference+1,w
  1475  0145  3E20               	addlw	(low (_difference| (0+256)))& (0+255)
  1476  0146  0086               	movwf	6
  1477  0147  3001               	movlw	1	; select bank2/3
  1478  0148  0087               	movwf	7
  1479  0149  3F40               	moviw [0]fsr1
  1480  014A  00F1               	movwf	___lmul@multiplier
  1481  014B  3F41               	moviw [1]fsr1
  1482  014C  00F2               	movwf	___lmul@multiplier+1
  1483  014D  3F42               	moviw [2]fsr1
  1484  014E  00F3               	movwf	___lmul@multiplier+2
  1485  014F  3F43               	moviw [3]fsr1
  1486  0150  00F4               	movwf	___lmul@multiplier+3
  1487  0151  318F  275C  3180   	fcall	___lmul
  1488  0154  0874               	movf	?___lmul+3,w
  1489  0155  0020               	movlb	0	; select bank0
  1490  0156  00A7               	movwf	___lltoft@c+3
  1491  0157  0873               	movf	?___lmul+2,w
  1492  0158  00A6               	movwf	___lltoft@c+2
  1493  0159  0872               	movf	?___lmul+1,w
  1494  015A  00A5               	movwf	___lltoft@c+1
  1495  015B  0871               	movf	?___lmul,w
  1496  015C  00A4               	movwf	___lltoft@c
  1497  015D  318E  26D4  3180   	fcall	___lltoft
  1498  0160  0020               	movlb	0	; select bank0
  1499  0161  0824               	movf	?___lltoft,w
  1500  0162  00AA               	movwf	___ftsub@f2
  1501  0163  0825               	movf	?___lltoft+1,w
  1502  0164  00AB               	movwf	___ftsub@f2+1
  1503  0165  0826               	movf	?___lltoft+2,w
  1504  0166  00AC               	movwf	___ftsub@f2+2
  1505  0167  0863               	movf	_seconds,w
  1506  0168  00AD               	movwf	___ftsub@f1
  1507  0169  0864               	movf	_seconds+1,w
  1508  016A  00AE               	movwf	___ftsub@f1+1
  1509  016B  0865               	movf	_seconds+2,w
  1510  016C  00AF               	movwf	___ftsub@f1+2
  1511  016D  318D  25E3  3180   	fcall	___ftsub
  1512  0170  0020               	movlb	0	; select bank0
  1513  0171  082A               	movf	?___ftsub,w
  1514  0172  00E3               	movwf	_seconds
  1515  0173  082B               	movf	?___ftsub+1,w
  1516  0174  00E4               	movwf	_seconds+1
  1517  0175  082C               	movf	?___ftsub+2,w
  1518  0176  00E5               	movwf	_seconds+2
  1519                           
  1520                           ;TimeDiff.h: 57: if (i > 0)
  1521  0177  0861               	movf	getTimeDifference@i,w
  1522  0178  1903               	btfsc	3,2
  1523  0179  2983               	goto	l2763
  1524                           
  1525                           ;TimeDiff.h: 58: zaman[i+1] = diffs[i];
  1526  017A  0861               	movf	getTimeDifference@i,w
  1527  017B  3EA0               	addlw	(low (_diffs| 0))& (0+255)
  1528  017C  0086               	movwf	6
  1529  017D  0187               	clrf	7
  1530  017E  0801               	movf	1,w
  1531  017F  00DD               	movwf	??_getTimeDifference
  1532  0180  0861               	movf	getTimeDifference@i,w
  1533  0181  3E01               	addlw	1
  1534  0182  298A               	goto	L1
  1535  0183                     l2763:	
  1536                           
  1537                           ;TimeDiff.h: 59: else
  1538                           ;TimeDiff.h: 60: zaman[i] = diffs[i];
  1539  0183  0861               	movf	getTimeDifference@i,w
  1540  0184  3EA0               	addlw	(low (_diffs| 0))& (0+255)
  1541  0185  0086               	movwf	6
  1542  0186  0187               	clrf	7
  1543  0187  0801               	movf	1,w
  1544  0188  00DD               	movwf	??_getTimeDifference
  1545  0189  0861               	movf	getTimeDifference@i,w
  1546  018A                     L1:	
  1547  018A  3ECD               	addlw	(low (_zaman| 0))& (0+255)
  1548  018B  0086               	movwf	6
  1549  018C  0187               	clrf	7
  1550  018D  085D               	movf	??_getTimeDifference,w
  1551  018E  0081               	movwf	1
  1552  018F  3001               	movlw	1
  1553  0190  00DD               	movwf	??_getTimeDifference
  1554  0191  085D               	movf	??_getTimeDifference,w
  1555  0192  07E1               	addwf	getTimeDifference@i,f
  1556  0193  3006               	movlw	6
  1557  0194  0261               	subwf	getTimeDifference@i,w
  1558  0195  1C03               	skipc
  1559  0196  28CF               	goto	l2753
  1560  0197                     l2769:	
  1561                           
  1562                           ;TimeDiff.h: 61: }
  1563                           ;TimeDiff.h: 62: zaman[1] = 0;
  1564  0197  0021               	movlb	1	; select bank1
  1565  0198  01CE               	clrf	(_zaman^(0+128)+1)
  1566  0199  0008               	return
  1567  019A                     __end_of_getTimeDifference:	
  1568                           
  1569                           	psect	text2
  1570  019A                     __ptext2:	
  1571 ;; *************** function _mktime *****************
  1572 ;; Defined at:
  1573 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  timeptr         1    wreg     PTR struct tm
  1576 ;;		 -> Time1End(18), Time1Start(18), 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  timeptr         1   52[BANK0 ] PTR struct tm
  1579 ;;		 -> Time1End(18), Time1Start(18), 
  1580 ;;  tt              4   48[BANK0 ] long 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  4   38[BANK0 ] long 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1590 ;;      Params:         0       4       0       0
  1591 ;;      Locals:         0       5       0       0
  1592 ;;      Temps:          0       6       0       0
  1593 ;;      Totals:         0      15       0       0
  1594 ;;Total ram usage:       15 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    4
  1597 ;; This function calls:
  1598 ;;		___lmul
  1599 ;;		_ymd_to_scalar
  1600 ;; This function is called by:
  1601 ;;		_getTimeDifference
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _mktime
  1607  019A                     _mktime:	
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in _mktime: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1611                           ;mktime@timeptr stored from wreg
  1612  019A  0020               	movlb	0	; select bank0
  1613  019B  00D4               	movwf	mktime@timeptr
  1614  019C  0854               	movf	mktime@timeptr,w
  1615  019D  3E0A               	addlw	10
  1616  019E  0086               	movwf	6
  1617  019F  0187               	clrf	7
  1618  01A0  3F40               	moviw [0]fsr1
  1619  01A1  00CA               	movwf	??_mktime
  1620  01A2  3F41               	moviw [1]fsr1
  1621  01A3  00CB               	movwf	??_mktime+1
  1622  01A4  084B               	movf	??_mktime+1,w
  1623  01A5  3A80               	xorlw	128
  1624  01A6  00CC               	movwf	??_mktime+2
  1625  01A7  3080               	movlw	128
  1626  01A8  024C               	subwf	??_mktime+2,w
  1627  01A9  1D03               	skipz
  1628  01AA  29AD               	goto	u3465
  1629  01AB  3046               	movlw	70
  1630  01AC  024A               	subwf	??_mktime,w
  1631  01AD                     u3465:	
  1632  01AD  1C03               	skipc
  1633  01AE  29C3               	goto	l2589
  1634  01AF  0020               	movlb	0	; select bank0
  1635  01B0  0854               	movf	mktime@timeptr,w
  1636  01B1  3E0A               	addlw	10
  1637  01B2  0086               	movwf	6
  1638  01B3  0187               	clrf	7
  1639  01B4  3F40               	moviw [0]fsr1
  1640  01B5  00CA               	movwf	??_mktime
  1641  01B6  3F41               	moviw [1]fsr1
  1642  01B7  00CB               	movwf	??_mktime+1
  1643  01B8  084B               	movf	??_mktime+1,w
  1644  01B9  3A80               	xorlw	128
  1645  01BA  00CC               	movwf	??_mktime+2
  1646  01BB  3080               	movlw	128
  1647  01BC  024C               	subwf	??_mktime+2,w
  1648  01BD  1D03               	skipz
  1649  01BE  29C1               	goto	u3475
  1650  01BF  308B               	movlw	139
  1651  01C0  024A               	subwf	??_mktime,w
  1652  01C1                     u3475:	
  1653  01C1  1C03               	skipc
  1654  01C2  29CC               	goto	l2591
  1655  01C3                     l2589:	
  1656  01C3  30FF               	movlw	255
  1657  01C4  0020               	movlb	0	; select bank0
  1658  01C5  00D3               	movwf	mktime@tt+3
  1659  01C6  30FF               	movlw	255
  1660  01C7  00D2               	movwf	mktime@tt+2
  1661  01C8  30FF               	movlw	255
  1662  01C9  00D1               	movwf	mktime@tt+1
  1663  01CA  30FF               	movlw	255
  1664  01CB  2AB1               	goto	L2
  1665  01CC                     l2591:	
  1666  01CC  0020               	movlb	0	; select bank0
  1667  01CD  0854               	movf	mktime@timeptr,w
  1668  01CE  3E0A               	addlw	10
  1669  01CF  0086               	movwf	6
  1670  01D0  0187               	clrf	7
  1671  01D1  3F40               	moviw [0]fsr1
  1672  01D2  00CA               	movwf	??_mktime
  1673  01D3  3F41               	moviw [1]fsr1
  1674  01D4  00CB               	movwf	??_mktime+1
  1675  01D5  084A               	movf	??_mktime,w
  1676  01D6  3E6C               	addlw	108
  1677  01D7  00B6               	movwf	ymd_to_scalar@yr
  1678  01D8  3007               	movlw	7
  1679  01D9  3D4B               	addwfc	??_mktime+1,w
  1680  01DA  00B7               	movwf	ymd_to_scalar@yr+1
  1681  01DB  0854               	movf	mktime@timeptr,w
  1682  01DC  3E08               	addlw	8
  1683  01DD  0086               	movwf	6
  1684  01DE  0187               	clrf	7
  1685  01DF  3F40               	moviw [0]fsr1
  1686  01E0  00CC               	movwf	??_mktime+2
  1687  01E1  3F41               	moviw [1]fsr1
  1688  01E2  00CD               	movwf	??_mktime+3
  1689  01E3  084C               	movf	??_mktime+2,w
  1690  01E4  3E01               	addlw	1
  1691  01E5  00B8               	movwf	ymd_to_scalar@mo
  1692  01E6  3000               	movlw	0
  1693  01E7  3D4D               	addwfc	??_mktime+3,w
  1694  01E8  00B9               	movwf	ymd_to_scalar@mo+1
  1695  01E9  0854               	movf	mktime@timeptr,w
  1696  01EA  3E06               	addlw	6
  1697  01EB  0086               	movwf	6
  1698  01EC  0187               	clrf	7
  1699  01ED  3F40               	moviw [0]fsr1
  1700  01EE  00BA               	movwf	ymd_to_scalar@day
  1701  01EF  3F41               	moviw [1]fsr1
  1702  01F0  00BB               	movwf	ymd_to_scalar@day+1
  1703  01F1  3186  26EF  3181   	fcall	_ymd_to_scalar
  1704  01F4  0020               	movlb	0	; select bank0
  1705  01F5  0839               	movf	?_ymd_to_scalar+3,w
  1706  01F6  00D3               	movwf	mktime@tt+3
  1707  01F7  0838               	movf	?_ymd_to_scalar+2,w
  1708  01F8  00D2               	movwf	mktime@tt+2
  1709  01F9  0837               	movf	?_ymd_to_scalar+1,w
  1710  01FA  00D1               	movwf	mktime@tt+1
  1711  01FB  0836               	movf	?_ymd_to_scalar,w
  1712  01FC  00D0               	movwf	mktime@tt
  1713  01FD  30B2               	movlw	178
  1714  01FE  00B6               	movwf	ymd_to_scalar@yr
  1715  01FF  3007               	movlw	7
  1716  0200  00B7               	movwf	ymd_to_scalar@yr+1
  1717  0201  3001               	movlw	1
  1718  0202  00B8               	movwf	ymd_to_scalar@mo
  1719  0203  3000               	movlw	0
  1720  0204  00B9               	movwf	ymd_to_scalar@mo+1
  1721  0205  3001               	movlw	1
  1722  0206  00BA               	movwf	ymd_to_scalar@day
  1723  0207  3000               	movlw	0
  1724  0208  00BB               	movwf	ymd_to_scalar@day+1
  1725  0209  3186  26EF  3181   	fcall	_ymd_to_scalar
  1726  020C  0020               	movlb	0	; select bank0
  1727  020D  0836               	movf	?_ymd_to_scalar,w
  1728  020E  02D0               	subwf	mktime@tt,f
  1729  020F  0837               	movf	?_ymd_to_scalar+1,w
  1730  0210  3BD1               	subwfb	mktime@tt+1,f
  1731  0211  0838               	movf	?_ymd_to_scalar+2,w
  1732  0212  3BD2               	subwfb	mktime@tt+2,f
  1733  0213  0839               	movf	?_ymd_to_scalar+3,w
  1734  0214  3BD3               	subwfb	mktime@tt+3,f
  1735  0215  0854               	movf	mktime@timeptr,w
  1736  0216  3E04               	addlw	4
  1737  0217  0086               	movwf	6
  1738  0218  0187               	clrf	7
  1739  0219  3F40               	moviw [0]fsr1
  1740  021A  00CA               	movwf	??_mktime
  1741  021B  3F41               	moviw [1]fsr1
  1742  021C  00CB               	movwf	??_mktime+1
  1743  021D  084A               	movf	??_mktime,w
  1744  021E  00CC               	movwf	??_mktime+2
  1745  021F  084B               	movf	??_mktime+1,w
  1746  0220  00CD               	movwf	??_mktime+3
  1747  0221  3000               	movlw	0
  1748  0222  1BCD               	btfsc	??_mktime+3,7
  1749  0223  30FF               	movlw	255
  1750  0224  00CE               	movwf	??_mktime+4
  1751  0225  00CF               	movwf	??_mktime+5
  1752  0226  0853               	movf	mktime@tt+3,w
  1753  0227  00F4               	movwf	___lmul@multiplier+3
  1754  0228  0852               	movf	mktime@tt+2,w
  1755  0229  00F3               	movwf	___lmul@multiplier+2
  1756  022A  0851               	movf	mktime@tt+1,w
  1757  022B  00F2               	movwf	___lmul@multiplier+1
  1758  022C  0850               	movf	mktime@tt,w
  1759  022D  00F1               	movwf	___lmul@multiplier
  1760  022E  3000               	movlw	0
  1761  022F  00F8               	movwf	___lmul@multiplicand+3
  1762  0230  3000               	movlw	0
  1763  0231  00F7               	movwf	___lmul@multiplicand+2
  1764  0232  3000               	movlw	0
  1765  0233  00F6               	movwf	___lmul@multiplicand+1
  1766  0234  3018               	movlw	24
  1767  0235  00F5               	movwf	___lmul@multiplicand
  1768  0236  318F  275C  3181   	fcall	___lmul
  1769  0239  0871               	movf	?___lmul,w
  1770  023A  0020               	movlb	0	; select bank0
  1771  023B  07CC               	addwf	??_mktime+2,f
  1772  023C  0872               	movf	?___lmul+1,w
  1773  023D  3DCD               	addwfc	??_mktime+3,f
  1774  023E  0873               	movf	?___lmul+2,w
  1775  023F  3DCE               	addwfc	??_mktime+4,f
  1776  0240  0874               	movf	?___lmul+3,w
  1777  0241  3DCF               	addwfc	??_mktime+5,f
  1778  0242  084F               	movf	??_mktime+5,w
  1779  0243  00D3               	movwf	mktime@tt+3
  1780  0244  084E               	movf	??_mktime+4,w
  1781  0245  00D2               	movwf	mktime@tt+2
  1782  0246  084D               	movf	??_mktime+3,w
  1783  0247  00D1               	movwf	mktime@tt+1
  1784  0248  084C               	movf	??_mktime+2,w
  1785  0249  00D0               	movwf	mktime@tt
  1786  024A  0854               	movf	mktime@timeptr,w
  1787  024B  3E02               	addlw	2
  1788  024C  0086               	movwf	6
  1789  024D  0187               	clrf	7
  1790  024E  3F40               	moviw [0]fsr1
  1791  024F  00CA               	movwf	??_mktime
  1792  0250  3F41               	moviw [1]fsr1
  1793  0251  00CB               	movwf	??_mktime+1
  1794  0252  084A               	movf	??_mktime,w
  1795  0253  00CC               	movwf	??_mktime+2
  1796  0254  084B               	movf	??_mktime+1,w
  1797  0255  00CD               	movwf	??_mktime+3
  1798  0256  3000               	movlw	0
  1799  0257  1BCD               	btfsc	??_mktime+3,7
  1800  0258  30FF               	movlw	255
  1801  0259  00CE               	movwf	??_mktime+4
  1802  025A  00CF               	movwf	??_mktime+5
  1803  025B  0853               	movf	mktime@tt+3,w
  1804  025C  00F4               	movwf	___lmul@multiplier+3
  1805  025D  0852               	movf	mktime@tt+2,w
  1806  025E  00F3               	movwf	___lmul@multiplier+2
  1807  025F  0851               	movf	mktime@tt+1,w
  1808  0260  00F2               	movwf	___lmul@multiplier+1
  1809  0261  0850               	movf	mktime@tt,w
  1810  0262  00F1               	movwf	___lmul@multiplier
  1811  0263  3000               	movlw	0
  1812  0264  00F8               	movwf	___lmul@multiplicand+3
  1813  0265  3000               	movlw	0
  1814  0266  00F7               	movwf	___lmul@multiplicand+2
  1815  0267  3000               	movlw	0
  1816  0268  00F6               	movwf	___lmul@multiplicand+1
  1817  0269  303C               	movlw	60
  1818  026A  00F5               	movwf	___lmul@multiplicand
  1819  026B  318F  275C  3181   	fcall	___lmul
  1820  026E  0871               	movf	?___lmul,w
  1821  026F  0020               	movlb	0	; select bank0
  1822  0270  07CC               	addwf	??_mktime+2,f
  1823  0271  0872               	movf	?___lmul+1,w
  1824  0272  3DCD               	addwfc	??_mktime+3,f
  1825  0273  0873               	movf	?___lmul+2,w
  1826  0274  3DCE               	addwfc	??_mktime+4,f
  1827  0275  0874               	movf	?___lmul+3,w
  1828  0276  3DCF               	addwfc	??_mktime+5,f
  1829  0277  084F               	movf	??_mktime+5,w
  1830  0278  00D3               	movwf	mktime@tt+3
  1831  0279  084E               	movf	??_mktime+4,w
  1832  027A  00D2               	movwf	mktime@tt+2
  1833  027B  084D               	movf	??_mktime+3,w
  1834  027C  00D1               	movwf	mktime@tt+1
  1835  027D  084C               	movf	??_mktime+2,w
  1836  027E  00D0               	movwf	mktime@tt
  1837  027F  0854               	movf	mktime@timeptr,w
  1838  0280  0086               	movwf	6
  1839  0281  0187               	clrf	7
  1840  0282  3F40               	moviw [0]fsr1
  1841  0283  00CA               	movwf	??_mktime
  1842  0284  3F41               	moviw [1]fsr1
  1843  0285  00CB               	movwf	??_mktime+1
  1844  0286  084A               	movf	??_mktime,w
  1845  0287  00CC               	movwf	??_mktime+2
  1846  0288  084B               	movf	??_mktime+1,w
  1847  0289  00CD               	movwf	??_mktime+3
  1848  028A  3000               	movlw	0
  1849  028B  1BCD               	btfsc	??_mktime+3,7
  1850  028C  30FF               	movlw	255
  1851  028D  00CE               	movwf	??_mktime+4
  1852  028E  00CF               	movwf	??_mktime+5
  1853  028F  0853               	movf	mktime@tt+3,w
  1854  0290  00F4               	movwf	___lmul@multiplier+3
  1855  0291  0852               	movf	mktime@tt+2,w
  1856  0292  00F3               	movwf	___lmul@multiplier+2
  1857  0293  0851               	movf	mktime@tt+1,w
  1858  0294  00F2               	movwf	___lmul@multiplier+1
  1859  0295  0850               	movf	mktime@tt,w
  1860  0296  00F1               	movwf	___lmul@multiplier
  1861  0297  3000               	movlw	0
  1862  0298  00F8               	movwf	___lmul@multiplicand+3
  1863  0299  3000               	movlw	0
  1864  029A  00F7               	movwf	___lmul@multiplicand+2
  1865  029B  3000               	movlw	0
  1866  029C  00F6               	movwf	___lmul@multiplicand+1
  1867  029D  303C               	movlw	60
  1868  029E  00F5               	movwf	___lmul@multiplicand
  1869  029F  318F  275C         	fcall	___lmul
  1870  02A1  0871               	movf	?___lmul,w
  1871  02A2  0020               	movlb	0	; select bank0
  1872  02A3  07CC               	addwf	??_mktime+2,f
  1873  02A4  0872               	movf	?___lmul+1,w
  1874  02A5  3DCD               	addwfc	??_mktime+3,f
  1875  02A6  0873               	movf	?___lmul+2,w
  1876  02A7  3DCE               	addwfc	??_mktime+4,f
  1877  02A8  0874               	movf	?___lmul+3,w
  1878  02A9  3DCF               	addwfc	??_mktime+5,f
  1879  02AA  084F               	movf	??_mktime+5,w
  1880  02AB  00D3               	movwf	mktime@tt+3
  1881  02AC  084E               	movf	??_mktime+4,w
  1882  02AD  00D2               	movwf	mktime@tt+2
  1883  02AE  084D               	movf	??_mktime+3,w
  1884  02AF  00D1               	movwf	mktime@tt+1
  1885  02B0  084C               	movf	??_mktime+2,w
  1886  02B1                     L2:	
  1887  02B1  00D0               	movwf	mktime@tt
  1888  02B2  0853               	movf	mktime@tt+3,w
  1889  02B3  00C9               	movwf	?_mktime+3
  1890  02B4  0852               	movf	mktime@tt+2,w
  1891  02B5  00C8               	movwf	?_mktime+2
  1892  02B6  0851               	movf	mktime@tt+1,w
  1893  02B7  00C7               	movwf	?_mktime+1
  1894  02B8  0850               	movf	mktime@tt,w
  1895  02B9  00C6               	movwf	?_mktime
  1896  02BA  0008               	return
  1897  02BB                     __end_of_mktime:	
  1898                           
  1899                           	psect	text3
  1900  06EF                     __ptext3:	
  1901 ;; *************** function _ymd_to_scalar *****************
  1902 ;; Defined at:
  1903 ;;		line 40 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  yr              2   22[BANK0 ] unsigned int 
  1906 ;;  mo              2   24[BANK0 ] unsigned int 
  1907 ;;  day             2   26[BANK0 ] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  scalar          4   34[BANK0 ] long 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  4   22[BANK0 ] long 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1919 ;;      Params:         0       6       0       0
  1920 ;;      Locals:         0       6       0       0
  1921 ;;      Temps:          0       4       0       0
  1922 ;;      Totals:         0      16       0       0
  1923 ;;Total ram usage:       16 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    3
  1926 ;; This function calls:
  1927 ;;		_isleap
  1928 ;;		_months_to_days
  1929 ;;		_years_to_days
  1930 ;; This function is called by:
  1931 ;;		_mktime
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _ymd_to_scalar
  1937  06EF                     _ymd_to_scalar:	
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _ymd_to_scalar: [wreg+status,2+status,0+pclath+cstack]
  1941  06EF  0020               	movlb	0	; select bank0
  1942  06F0  0839               	movf	ymd_to_scalar@mo+1,w
  1943  06F1  00A4               	movwf	months_to_days@month+1
  1944  06F2  0838               	movf	ymd_to_scalar@mo,w
  1945  06F3  00A3               	movwf	months_to_days@month
  1946  06F4  318E  2601  3186   	fcall	_months_to_days
  1947  06F7  0020               	movlb	0	; select bank0
  1948  06F8  083A               	movf	ymd_to_scalar@day,w
  1949  06F9  0723               	addwf	?_months_to_days,w
  1950  06FA  00C2               	movwf	ymd_to_scalar@scalar
  1951  06FB  083B               	movf	ymd_to_scalar@day+1,w
  1952  06FC  3D24               	addwfc	?_months_to_days+1,w
  1953  06FD  00C3               	movwf	ymd_to_scalar@scalar+1
  1954  06FE  01C4               	clrf	ymd_to_scalar@scalar+2
  1955  06FF  01C5               	clrf	ymd_to_scalar@scalar+3
  1956  0700  3000               	movlw	0
  1957  0701  0239               	subwf	ymd_to_scalar@mo+1,w
  1958  0702  3003               	movlw	3
  1959  0703  1903               	skipnz
  1960  0704  0238               	subwf	ymd_to_scalar@mo,w
  1961  0705  1C03               	skipc
  1962  0706  2F2A               	goto	l719
  1963  0707  0837               	movf	ymd_to_scalar@yr+1,w
  1964  0708  00F8               	movwf	isleap@yr+1
  1965  0709  0836               	movf	ymd_to_scalar@yr,w
  1966  070A  00F7               	movwf	isleap@yr
  1967  070B  318F  272B  3186   	fcall	_isleap
  1968  070E  0877               	movf	?_isleap,w
  1969  070F  0478               	iorwf	?_isleap+1,w
  1970  0710  1D03               	btfss	3,2
  1971  0711  2F14               	goto	l2533
  1972  0712  3002               	movlw	2
  1973  0713  2F15               	goto	L3
  1974  0714                     l2533:	
  1975  0714  3001               	movlw	1
  1976  0715                     L3:	
  1977  0715  0020               	movlb	0	; select bank0
  1978  0716  00C0               	movwf	_ymd_to_scalar$471
  1979  0717  3000               	movlw	0
  1980  0718  00C1               	movwf	_ymd_to_scalar$471+1
  1981  0719  0840               	movf	_ymd_to_scalar$471,w
  1982  071A  00BC               	movwf	??_ymd_to_scalar
  1983  071B  0841               	movf	_ymd_to_scalar$471+1,w
  1984  071C  00BD               	movwf	??_ymd_to_scalar+1
  1985  071D  3000               	movlw	0
  1986  071E  1BBD               	btfsc	??_ymd_to_scalar+1,7
  1987  071F  30FF               	movlw	255
  1988  0720  00BE               	movwf	??_ymd_to_scalar+2
  1989  0721  00BF               	movwf	??_ymd_to_scalar+3
  1990  0722  083C               	movf	??_ymd_to_scalar,w
  1991  0723  02C2               	subwf	ymd_to_scalar@scalar,f
  1992  0724  083D               	movf	??_ymd_to_scalar+1,w
  1993  0725  3BC3               	subwfb	ymd_to_scalar@scalar+1,f
  1994  0726  083E               	movf	??_ymd_to_scalar+2,w
  1995  0727  3BC4               	subwfb	ymd_to_scalar@scalar+2,f
  1996  0728  083F               	movf	??_ymd_to_scalar+3,w
  1997  0729  3BC5               	subwfb	ymd_to_scalar@scalar+3,f
  1998  072A                     l719:	
  1999  072A  3001               	movlw	1
  2000  072B  02B6               	subwf	ymd_to_scalar@yr,f
  2001  072C  3000               	movlw	0
  2002  072D  3BB7               	subwfb	ymd_to_scalar@yr+1,f
  2003  072E  0837               	movf	ymd_to_scalar@yr+1,w
  2004  072F  00A5               	movwf	years_to_days@yr+1
  2005  0730  0836               	movf	ymd_to_scalar@yr,w
  2006  0731  00A4               	movwf	years_to_days@yr
  2007  0732  3185  2553         	fcall	_years_to_days
  2008  0734  0020               	movlb	0	; select bank0
  2009  0735  0824               	movf	?_years_to_days,w
  2010  0736  07C2               	addwf	ymd_to_scalar@scalar,f
  2011  0737  0825               	movf	?_years_to_days+1,w
  2012  0738  3DC3               	addwfc	ymd_to_scalar@scalar+1,f
  2013  0739  0826               	movf	?_years_to_days+2,w
  2014  073A  3DC4               	addwfc	ymd_to_scalar@scalar+2,f
  2015  073B  0827               	movf	?_years_to_days+3,w
  2016  073C  3DC5               	addwfc	ymd_to_scalar@scalar+3,f
  2017  073D  0845               	movf	ymd_to_scalar@scalar+3,w
  2018  073E  00B9               	movwf	?_ymd_to_scalar+3
  2019  073F  0844               	movf	ymd_to_scalar@scalar+2,w
  2020  0740  00B8               	movwf	?_ymd_to_scalar+2
  2021  0741  0843               	movf	ymd_to_scalar@scalar+1,w
  2022  0742  00B7               	movwf	?_ymd_to_scalar+1
  2023  0743  0842               	movf	ymd_to_scalar@scalar,w
  2024  0744  00B6               	movwf	?_ymd_to_scalar
  2025  0745  0008               	return
  2026  0746                     __end_of_ymd_to_scalar:	
  2027                           
  2028                           	psect	text4
  2029  0553                     __ptext4:	
  2030 ;; *************** function _years_to_days *****************
  2031 ;; Defined at:
  2032 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  yr              2    4[BANK0 ] unsigned int 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  4    4[BANK0 ] long 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2046 ;;      Params:         0       4       0       0
  2047 ;;      Locals:         0       0       0       0
  2048 ;;      Temps:          0      14       0       0
  2049 ;;      Totals:         0      18       0       0
  2050 ;;Total ram usage:       18 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    2
  2053 ;; This function calls:
  2054 ;;		___lmul
  2055 ;;		___lwdiv
  2056 ;; This function is called by:
  2057 ;;		_ymd_to_scalar
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _years_to_days
  2063  0553                     _years_to_days:	
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _years_to_days: [wreg+status,2+status,0+pclath+cstack]
  2067  0553  3064               	movlw	100
  2068  0554  00F7               	movwf	___lwdiv@divisor
  2069  0555  3000               	movlw	0
  2070  0556  00F8               	movwf	___lwdiv@divisor+1
  2071  0557  0020               	movlb	0	; select bank0
  2072  0558  0825               	movf	years_to_days@yr+1,w
  2073  0559  00FA               	movwf	___lwdiv@dividend+1
  2074  055A  0824               	movf	years_to_days@yr,w
  2075  055B  00F9               	movwf	___lwdiv@dividend
  2076  055C  318F  278E  3185   	fcall	___lwdiv
  2077  055F  0877               	movf	?___lwdiv,w
  2078  0560  0020               	movlb	0	; select bank0
  2079  0561  00A8               	movwf	??_years_to_days
  2080  0562  0878               	movf	?___lwdiv+1,w
  2081  0563  00A9               	movwf	??_years_to_days+1
  2082  0564  01AA               	clrf	??_years_to_days+2
  2083  0565  01AB               	clrf	??_years_to_days+3
  2084  0566  09A8               	comf	??_years_to_days,f
  2085  0567  09A9               	comf	??_years_to_days+1,f
  2086  0568  09AA               	comf	??_years_to_days+2,f
  2087  0569  09AB               	comf	??_years_to_days+3,f
  2088  056A  0AA8               	incf	??_years_to_days,f
  2089  056B  1903               	skipnz
  2090  056C  0AA9               	incf	??_years_to_days+1,f
  2091  056D  1903               	skipnz
  2092  056E  0AAA               	incf	??_years_to_days+2,f
  2093  056F  1903               	skipnz
  2094  0570  0AAB               	incf	??_years_to_days+3,f
  2095  0571  3090               	movlw	144
  2096  0572  00F7               	movwf	___lwdiv@divisor
  2097  0573  3001               	movlw	1
  2098  0574  00F8               	movwf	___lwdiv@divisor+1
  2099  0575  0825               	movf	years_to_days@yr+1,w
  2100  0576  00FA               	movwf	___lwdiv@dividend+1
  2101  0577  0824               	movf	years_to_days@yr,w
  2102  0578  00F9               	movwf	___lwdiv@dividend
  2103  0579  318F  278E  3185   	fcall	___lwdiv
  2104  057C  0877               	movf	?___lwdiv,w
  2105  057D  0020               	movlb	0	; select bank0
  2106  057E  00AC               	movwf	??_years_to_days+4
  2107  057F  0878               	movf	?___lwdiv+1,w
  2108  0580  00AD               	movwf	??_years_to_days+5
  2109  0581  01AE               	clrf	??_years_to_days+6
  2110  0582  01AF               	clrf	??_years_to_days+7
  2111  0583  0825               	movf	years_to_days@yr+1,w
  2112  0584  00B1               	movwf	??_years_to_days+9
  2113  0585  0824               	movf	years_to_days@yr,w
  2114  0586  00B0               	movwf	??_years_to_days+8
  2115  0587  36B1               	lsrf	??_years_to_days+9,f
  2116  0588  0CB0               	rrf	??_years_to_days+8,f
  2117  0589  36B1               	lsrf	??_years_to_days+9,f
  2118  058A  0CB0               	rrf	??_years_to_days+8,f
  2119  058B  0830               	movf	??_years_to_days+8,w
  2120  058C  00B2               	movwf	??_years_to_days+10
  2121  058D  0831               	movf	??_years_to_days+9,w
  2122  058E  00B3               	movwf	??_years_to_days+11
  2123  058F  01B4               	clrf	??_years_to_days+12
  2124  0590  01B5               	clrf	??_years_to_days+13
  2125  0591  0824               	movf	years_to_days@yr,w
  2126  0592  00F1               	movwf	___lmul@multiplier
  2127  0593  0825               	movf	years_to_days@yr+1,w
  2128  0594  00F2               	movwf	___lmul@multiplier+1
  2129  0595  01F3               	clrf	___lmul@multiplier+2
  2130  0596  01F4               	clrf	___lmul@multiplier+3
  2131  0597  3000               	movlw	0
  2132  0598  00F8               	movwf	___lmul@multiplicand+3
  2133  0599  3000               	movlw	0
  2134  059A  00F7               	movwf	___lmul@multiplicand+2
  2135  059B  3001               	movlw	1
  2136  059C  00F6               	movwf	___lmul@multiplicand+1
  2137  059D  306D               	movlw	109
  2138  059E  00F5               	movwf	___lmul@multiplicand
  2139  059F  318F  275C         	fcall	___lmul
  2140  05A1  0871               	movf	?___lmul,w
  2141  05A2  0020               	movlb	0	; select bank0
  2142  05A3  07B2               	addwf	??_years_to_days+10,f
  2143  05A4  0872               	movf	?___lmul+1,w
  2144  05A5  3DB3               	addwfc	??_years_to_days+11,f
  2145  05A6  0873               	movf	?___lmul+2,w
  2146  05A7  3DB4               	addwfc	??_years_to_days+12,f
  2147  05A8  0874               	movf	?___lmul+3,w
  2148  05A9  3DB5               	addwfc	??_years_to_days+13,f
  2149  05AA  0832               	movf	??_years_to_days+10,w
  2150  05AB  07AC               	addwf	??_years_to_days+4,f
  2151  05AC  0833               	movf	??_years_to_days+11,w
  2152  05AD  3DAD               	addwfc	??_years_to_days+5,f
  2153  05AE  0834               	movf	??_years_to_days+12,w
  2154  05AF  3DAE               	addwfc	??_years_to_days+6,f
  2155  05B0  0835               	movf	??_years_to_days+13,w
  2156  05B1  3DAF               	addwfc	??_years_to_days+7,f
  2157  05B2  082C               	movf	??_years_to_days+4,w
  2158  05B3  07A8               	addwf	??_years_to_days,f
  2159  05B4  082D               	movf	??_years_to_days+5,w
  2160  05B5  3DA9               	addwfc	??_years_to_days+1,f
  2161  05B6  082E               	movf	??_years_to_days+6,w
  2162  05B7  3DAA               	addwfc	??_years_to_days+2,f
  2163  05B8  082F               	movf	??_years_to_days+7,w
  2164  05B9  3DAB               	addwfc	??_years_to_days+3,f
  2165  05BA  082B               	movf	??_years_to_days+3,w
  2166  05BB  00A7               	movwf	?_years_to_days+3
  2167  05BC  082A               	movf	??_years_to_days+2,w
  2168  05BD  00A6               	movwf	?_years_to_days+2
  2169  05BE  0829               	movf	??_years_to_days+1,w
  2170  05BF  00A5               	movwf	?_years_to_days+1
  2171  05C0  0828               	movf	??_years_to_days,w
  2172  05C1  00A4               	movwf	?_years_to_days
  2173  05C2  0008               	return
  2174  05C3                     __end_of_years_to_days:	
  2175                           
  2176                           	psect	text5
  2177  0F5C                     __ptext5:	
  2178 ;; *************** function ___lmul *****************
  2179 ;; Defined at:
  2180 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  multiplier      4    1[COMMON] unsigned long 
  2183 ;;  multiplicand    4    5[COMMON] unsigned long 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  product         4    0[BANK0 ] unsigned long 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  4    1[COMMON] unsigned long 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2195 ;;      Params:         8       0       0       0
  2196 ;;      Locals:         0       4       0       0
  2197 ;;      Temps:          0       0       0       0
  2198 ;;      Totals:         8       4       0       0
  2199 ;;Total ram usage:       12 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_getTimeDifference
  2206 ;;		_years_to_days
  2207 ;;		_mktime
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function ___lmul
  2213  0F5C                     ___lmul:	
  2214                           
  2215                           ;incstack = 0
  2216                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2217  0F5C  3000               	movlw	0
  2218  0F5D  0020               	movlb	0	; select bank0
  2219  0F5E  00A3               	movwf	___lmul@product+3
  2220  0F5F  3000               	movlw	0
  2221  0F60  00A2               	movwf	___lmul@product+2
  2222  0F61  3000               	movlw	0
  2223  0F62  00A1               	movwf	___lmul@product+1
  2224  0F63  3000               	movlw	0
  2225  0F64  00A0               	movwf	___lmul@product
  2226  0F65                     l2315:	
  2227  0F65  1C71               	btfss	___lmul@multiplier,0
  2228  0F66  2F70               	goto	l2319
  2229  0F67  0875               	movf	___lmul@multiplicand,w
  2230  0F68  0020               	movlb	0	; select bank0
  2231  0F69  07A0               	addwf	___lmul@product,f
  2232  0F6A  0876               	movf	___lmul@multiplicand+1,w
  2233  0F6B  3DA1               	addwfc	___lmul@product+1,f
  2234  0F6C  0877               	movf	___lmul@multiplicand+2,w
  2235  0F6D  3DA2               	addwfc	___lmul@product+2,f
  2236  0F6E  0878               	movf	___lmul@multiplicand+3,w
  2237  0F6F  3DA3               	addwfc	___lmul@product+3,f
  2238  0F70                     l2319:	
  2239  0F70  3001               	movlw	1
  2240  0F71                     u2865:	
  2241  0F71  35F5               	lslf	___lmul@multiplicand,f
  2242  0F72  0DF6               	rlf	___lmul@multiplicand+1,f
  2243  0F73  0DF7               	rlf	___lmul@multiplicand+2,f
  2244  0F74  0DF8               	rlf	___lmul@multiplicand+3,f
  2245  0F75  0B89               	decfsz	9,f
  2246  0F76  2F71               	goto	u2865
  2247  0F77  3001               	movlw	1
  2248  0F78                     u2875:	
  2249  0F78  36F4               	lsrf	___lmul@multiplier+3,f
  2250  0F79  0CF3               	rrf	___lmul@multiplier+2,f
  2251  0F7A  0CF2               	rrf	___lmul@multiplier+1,f
  2252  0F7B  0CF1               	rrf	___lmul@multiplier,f
  2253  0F7C  0B89               	decfsz	9,f
  2254  0F7D  2F78               	goto	u2875
  2255  0F7E  0874               	movf	___lmul@multiplier+3,w
  2256  0F7F  0473               	iorwf	___lmul@multiplier+2,w
  2257  0F80  0472               	iorwf	___lmul@multiplier+1,w
  2258  0F81  0471               	iorwf	___lmul@multiplier,w
  2259  0F82  1D03               	skipz
  2260  0F83  2F65               	goto	l2315
  2261  0F84  0020               	movlb	0	; select bank0
  2262  0F85  0823               	movf	___lmul@product+3,w
  2263  0F86  00F4               	movwf	?___lmul+3
  2264  0F87  0822               	movf	___lmul@product+2,w
  2265  0F88  00F3               	movwf	?___lmul+2
  2266  0F89  0821               	movf	___lmul@product+1,w
  2267  0F8A  00F2               	movwf	?___lmul+1
  2268  0F8B  0820               	movf	___lmul@product,w
  2269  0F8C  00F1               	movwf	?___lmul
  2270  0F8D  0008               	return
  2271  0F8E                     __end_of___lmul:	
  2272                           
  2273                           	psect	text6
  2274  0E01                     __ptext6:	
  2275 ;; *************** function _months_to_days *****************
  2276 ;; Defined at:
  2277 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  month           2    3[BANK0 ] unsigned int 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2    3[BANK0 ] unsigned int 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2291 ;;      Params:         0       2       0       0
  2292 ;;      Locals:         0       0       0       0
  2293 ;;      Temps:          0       0       0       0
  2294 ;;      Totals:         0       2       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		___lwdiv
  2300 ;;		___wmul
  2301 ;; This function is called by:
  2302 ;;		_ymd_to_scalar
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function _months_to_days
  2308  0E01                     _months_to_days:	
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _months_to_days: [wreg+status,2+status,0+pclath+cstack]
  2312  0E01  3064               	movlw	100
  2313  0E02  00F7               	movwf	___lwdiv@divisor
  2314  0E03  3000               	movlw	0
  2315  0E04  00F8               	movwf	___lwdiv@divisor+1
  2316  0E05  0020               	movlb	0	; select bank0
  2317  0E06  0824               	movf	months_to_days@month+1,w
  2318  0E07  00F2               	movwf	___wmul@multiplier+1
  2319  0E08  0823               	movf	months_to_days@month,w
  2320  0E09  00F1               	movwf	___wmul@multiplier
  2321  0E0A  30F1               	movlw	241
  2322  0E0B  00F3               	movwf	___wmul@multiplicand
  2323  0E0C  300B               	movlw	11
  2324  0E0D  00F4               	movwf	___wmul@multiplicand+1
  2325  0E0E  318D  25C8  318E   	fcall	___wmul
  2326  0E11  0871               	movf	?___wmul,w
  2327  0E12  3E41               	addlw	65
  2328  0E13  00F9               	movwf	___lwdiv@dividend
  2329  0E14  30F4               	movlw	244
  2330  0E15  3D72               	addwfc	?___wmul+1,w
  2331  0E16  00FA               	movwf	___lwdiv@dividend+1
  2332  0E17  318F  278E         	fcall	___lwdiv
  2333  0E19  0878               	movf	?___lwdiv+1,w
  2334  0E1A  0020               	movlb	0	; select bank0
  2335  0E1B  00A4               	movwf	?_months_to_days+1
  2336  0E1C  0877               	movf	?___lwdiv,w
  2337  0E1D  00A3               	movwf	?_months_to_days
  2338  0E1E  0008               	return
  2339  0E1F                     __end_of_months_to_days:	
  2340                           
  2341                           	psect	text7
  2342  0DC8                     __ptext7:	
  2343 ;; *************** function ___wmul *****************
  2344 ;; Defined at:
  2345 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  multiplier      2    1[COMMON] unsigned int 
  2348 ;;  multiplicand    2    3[COMMON] unsigned int 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  product         2    5[COMMON] unsigned int 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  2    1[COMMON] unsigned int 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2360 ;;      Params:         4       0       0       0
  2361 ;;      Locals:         2       0       0       0
  2362 ;;      Temps:          0       0       0       0
  2363 ;;      Totals:         6       0       0       0
  2364 ;;Total ram usage:        6 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_months_to_days
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function ___wmul
  2376  0DC8                     ___wmul:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2380  0DC8  01F5               	clrf	___wmul@product
  2381  0DC9  01F6               	clrf	___wmul@product+1
  2382  0DCA                     l1585:	
  2383  0DCA  1C71               	btfss	___wmul@multiplier,0
  2384  0DCB  2DD0               	goto	l337
  2385  0DCC  0873               	movf	___wmul@multiplicand,w
  2386  0DCD  07F5               	addwf	___wmul@product,f
  2387  0DCE  0874               	movf	___wmul@multiplicand+1,w
  2388  0DCF  3DF6               	addwfc	___wmul@product+1,f
  2389  0DD0                     l337:	
  2390  0DD0  3001               	movlw	1
  2391  0DD1                     u1515:	
  2392  0DD1  35F3               	lslf	___wmul@multiplicand,f
  2393  0DD2  0DF4               	rlf	___wmul@multiplicand+1,f
  2394  0DD3  0B89               	decfsz	9,f
  2395  0DD4  2DD1               	goto	u1515
  2396  0DD5  3001               	movlw	1
  2397  0DD6                     u1525:	
  2398  0DD6  36F2               	lsrf	___wmul@multiplier+1,f
  2399  0DD7  0CF1               	rrf	___wmul@multiplier,f
  2400  0DD8  0B89               	decfsz	9,f
  2401  0DD9  2DD6               	goto	u1525
  2402  0DDA  0871               	movf	___wmul@multiplier,w
  2403  0DDB  0472               	iorwf	___wmul@multiplier+1,w
  2404  0DDC  1D03               	btfss	3,2
  2405  0DDD  2DCA               	goto	l1585
  2406  0DDE  0876               	movf	___wmul@product+1,w
  2407  0DDF  00F2               	movwf	?___wmul+1
  2408  0DE0  0875               	movf	___wmul@product,w
  2409  0DE1  00F1               	movwf	?___wmul
  2410  0DE2  0008               	return
  2411  0DE3                     __end_of___wmul:	
  2412                           
  2413                           	psect	text8
  2414  0F2B                     __ptext8:	
  2415 ;; *************** function _isleap *****************
  2416 ;; Defined at:
  2417 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  yr              2    7[COMMON] unsigned int 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  2    7[COMMON] int 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2431 ;;      Params:         2       0       0       0
  2432 ;;      Locals:         1       0       0       0
  2433 ;;      Temps:          2       0       0       0
  2434 ;;      Totals:         5       0       0       0
  2435 ;;Total ram usage:        5 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    2
  2438 ;; This function calls:
  2439 ;;		___lwmod
  2440 ;; This function is called by:
  2441 ;;		_ymd_to_scalar
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _isleap
  2447  0F2B                     _isleap:	
  2448                           
  2449                           ;incstack = 0
  2450                           ; Regs used in _isleap: [wreg+status,2+status,0+pclath+cstack]
  2451  0F2B  01FB               	clrf	_isleap$459
  2452  0F2C  0AFB               	incf	_isleap$459,f
  2453  0F2D  3090               	movlw	144
  2454  0F2E  00F1               	movwf	___lwmod@divisor
  2455  0F2F  3001               	movlw	1
  2456  0F30  00F2               	movwf	___lwmod@divisor+1
  2457  0F31  0878               	movf	isleap@yr+1,w
  2458  0F32  00F4               	movwf	___lwmod@dividend+1
  2459  0F33  0877               	movf	isleap@yr,w
  2460  0F34  00F3               	movwf	___lwmod@dividend
  2461  0F35  318E  26FF  318F   	fcall	___lwmod
  2462  0F38  0871               	movf	?___lwmod,w
  2463  0F39  0472               	iorwf	?___lwmod+1,w
  2464  0F3A  1903               	btfsc	3,2
  2465  0F3B  2F54               	goto	l1745
  2466  0F3C  3003               	movlw	3
  2467  0F3D  0577               	andwf	isleap@yr,w
  2468  0F3E  00F9               	movwf	??_isleap
  2469  0F3F  3000               	movlw	0
  2470  0F40  0578               	andwf	isleap@yr+1,w
  2471  0F41  00FA               	movwf	??_isleap+1
  2472  0F42  0879               	movf	??_isleap,w
  2473  0F43  047A               	iorwf	??_isleap+1,w
  2474  0F44  1D03               	btfss	3,2
  2475  0F45  2F53               	goto	l1743
  2476  0F46  3064               	movlw	100
  2477  0F47  00F1               	movwf	___lwmod@divisor
  2478  0F48  3000               	movlw	0
  2479  0F49  00F2               	movwf	___lwmod@divisor+1
  2480  0F4A  0878               	movf	isleap@yr+1,w
  2481  0F4B  00F4               	movwf	___lwmod@dividend+1
  2482  0F4C  0877               	movf	isleap@yr,w
  2483  0F4D  00F3               	movwf	___lwmod@dividend
  2484  0F4E  318E  26FF         	fcall	___lwmod
  2485  0F50  0871               	movf	?___lwmod,w
  2486  0F51  0472               	iorwf	?___lwmod+1,w
  2487  0F52  1903               	btfsc	3,2
  2488  0F53                     l1743:	
  2489  0F53  01FB               	clrf	_isleap$459
  2490  0F54                     l1745:	
  2491  0F54  087B               	movf	_isleap$459,w
  2492  0F55  00F9               	movwf	??_isleap
  2493  0F56  01FA               	clrf	??_isleap+1
  2494  0F57  0879               	movf	??_isleap,w
  2495  0F58  00F7               	movwf	?_isleap
  2496  0F59  087A               	movf	??_isleap+1,w
  2497  0F5A  00F8               	movwf	?_isleap+1
  2498  0F5B  0008               	return
  2499  0F5C                     __end_of_isleap:	
  2500                           
  2501                           	psect	text9
  2502  0ED4                     __ptext9:	
  2503 ;; *************** function ___lltoft *****************
  2504 ;; Defined at:
  2505 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lltoft.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  c               4    4[BANK0 ] unsigned long 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  exp             1   10[COMMON] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  3    4[BANK0 ] float 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2519 ;;      Params:         0       4       0       0
  2520 ;;      Locals:         1       0       0       0
  2521 ;;      Temps:          1       0       0       0
  2522 ;;      Totals:         2       4       0       0
  2523 ;;Total ram usage:        6 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    2
  2526 ;; This function calls:
  2527 ;;		___ftpack
  2528 ;; This function is called by:
  2529 ;;		_getTimeDifference
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function ___lltoft
  2535  0ED4                     ___lltoft:	
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2539  0ED4  308E               	movlw	142
  2540  0ED5  00F9               	movwf	??___lltoft
  2541  0ED6  0879               	movf	??___lltoft,w
  2542  0ED7  00FA               	movwf	___lltoft@exp
  2543  0ED8                     l2675:	
  2544  0ED8  30FF               	movlw	255
  2545  0ED9  0020               	movlb	0	; select bank0
  2546  0EDA  0527               	andwf	___lltoft@c+3,w
  2547  0EDB  1903               	btfsc	3,2
  2548  0EDC  2EEA               	goto	l2677
  2549  0EDD  3001               	movlw	1
  2550  0EDE                     u3605:	
  2551  0EDE  0020               	movlb	0	; select bank0
  2552  0EDF  36A7               	lsrf	___lltoft@c+3,f
  2553  0EE0  0CA6               	rrf	___lltoft@c+2,f
  2554  0EE1  0CA5               	rrf	___lltoft@c+1,f
  2555  0EE2  0CA4               	rrf	___lltoft@c,f
  2556  0EE3  0B89               	decfsz	9,f
  2557  0EE4  2EDE               	goto	u3605
  2558  0EE5  3001               	movlw	1
  2559  0EE6  00F9               	movwf	??___lltoft
  2560  0EE7  0879               	movf	??___lltoft,w
  2561  0EE8  07FA               	addwf	___lltoft@exp,f
  2562  0EE9  2ED8               	goto	l2675
  2563  0EEA                     l2677:	
  2564  0EEA  0824               	movf	___lltoft@c,w
  2565  0EEB  00F1               	movwf	___ftpack@arg
  2566  0EEC  0825               	movf	___lltoft@c+1,w
  2567  0EED  00F2               	movwf	___ftpack@arg+1
  2568  0EEE  0826               	movf	___lltoft@c+2,w
  2569  0EEF  00F3               	movwf	___ftpack@arg+2
  2570  0EF0  087A               	movf	___lltoft@exp,w
  2571  0EF1  00F9               	movwf	??___lltoft
  2572  0EF2  0879               	movf	??___lltoft,w
  2573  0EF3  00F4               	movwf	___ftpack@exp
  2574  0EF4  01F5               	clrf	___ftpack@sign
  2575  0EF5  3186  2629         	fcall	___ftpack
  2576  0EF7  0871               	movf	?___ftpack,w
  2577  0EF8  0020               	movlb	0	; select bank0
  2578  0EF9  00A4               	movwf	?___lltoft
  2579  0EFA  0872               	movf	?___ftpack+1,w
  2580  0EFB  00A5               	movwf	?___lltoft+1
  2581  0EFC  0873               	movf	?___ftpack+2,w
  2582  0EFD  00A6               	movwf	?___lltoft+2
  2583  0EFE  0008               	return
  2584  0EFF                     __end_of___lltoft:	
  2585                           
  2586                           	psect	text10
  2587  045A                     __ptext10:	
  2588 ;; *************** function ___fttol *****************
  2589 ;; Defined at:
  2590 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  f1              3   24[BANK0 ] float 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  lval            4   33[BANK0 ] unsigned long 
  2595 ;;  exp1            1   37[BANK0 ] unsigned char 
  2596 ;;  sign1           1   32[BANK0 ] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  4   24[BANK0 ] long 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2606 ;;      Params:         0       4       0       0
  2607 ;;      Locals:         0       6       0       0
  2608 ;;      Temps:          0       4       0       0
  2609 ;;      Totals:         0      14       0       0
  2610 ;;Total ram usage:       14 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_getTimeDifference
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function ___fttol
  2622  045A                     ___fttol:	
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2626  045A  0020               	movlb	0	; select bank0
  2627  045B  0838               	movf	___fttol@f1,w
  2628  045C  00BC               	movwf	??___fttol
  2629  045D  0839               	movf	___fttol@f1+1,w
  2630  045E  00BD               	movwf	??___fttol+1
  2631  045F  083A               	movf	___fttol@f1+2,w
  2632  0460  00BE               	movwf	??___fttol+2
  2633  0461  1003               	clrc
  2634  0462  0D3D               	rlf	??___fttol+1,w
  2635  0463  0D3E               	rlf	??___fttol+2,w
  2636  0464  00BF               	movwf	??___fttol+3
  2637  0465  083F               	movf	??___fttol+3,w
  2638  0466  00C5               	movwf	___fttol@exp1
  2639  0467  0845               	movf	___fttol@exp1,w
  2640  0468  1D03               	btfss	3,2
  2641  0469  2C73               	goto	l2027
  2642  046A  3000               	movlw	0
  2643  046B  00BB               	movwf	?___fttol+3
  2644  046C  3000               	movlw	0
  2645  046D  00BA               	movwf	?___fttol+2
  2646  046E  3000               	movlw	0
  2647  046F  00B9               	movwf	?___fttol+1
  2648  0470  3000               	movlw	0
  2649  0471  00B8               	movwf	?___fttol
  2650  0472  0008               	return
  2651  0473                     l2027:	
  2652  0473  0838               	movf	___fttol@f1,w
  2653  0474  00BC               	movwf	??___fttol
  2654  0475  0839               	movf	___fttol@f1+1,w
  2655  0476  00BD               	movwf	??___fttol+1
  2656  0477  083A               	movf	___fttol@f1+2,w
  2657  0478  00BE               	movwf	??___fttol+2
  2658  0479  3017               	movlw	23
  2659  047A                     u2465:	
  2660  047A  36BE               	lsrf	??___fttol+2,f
  2661  047B  0CBD               	rrf	??___fttol+1,f
  2662  047C  0CBC               	rrf	??___fttol,f
  2663  047D  0B89               	decfsz	9,f
  2664  047E  2C7A               	goto	u2465
  2665  047F  083C               	movf	??___fttol,w
  2666  0480  00BF               	movwf	??___fttol+3
  2667  0481  083F               	movf	??___fttol+3,w
  2668  0482  00C0               	movwf	___fttol@sign1
  2669  0483  17B9               	bsf	___fttol@f1+1,7
  2670  0484  30FF               	movlw	255
  2671  0485  05B8               	andwf	___fttol@f1,f
  2672  0486  30FF               	movlw	255
  2673  0487  05B9               	andwf	___fttol@f1+1,f
  2674  0488  3000               	movlw	0
  2675  0489  05BA               	andwf	___fttol@f1+2,f
  2676  048A  0838               	movf	___fttol@f1,w
  2677  048B  00C1               	movwf	___fttol@lval
  2678  048C  0839               	movf	___fttol@f1+1,w
  2679  048D  00C2               	movwf	___fttol@lval+1
  2680  048E  083A               	movf	___fttol@f1+2,w
  2681  048F  00C3               	movwf	___fttol@lval+2
  2682  0490  01C4               	clrf	___fttol@lval+3
  2683  0491  308E               	movlw	142
  2684  0492  02C5               	subwf	___fttol@exp1,f
  2685  0493  1FC5               	btfss	___fttol@exp1,7
  2686  0494  2CB1               	goto	l2047
  2687  0495  0845               	movf	___fttol@exp1,w
  2688  0496  3A80               	xorlw	128
  2689  0497  3E8F               	addlw	143
  2690  0498  1803               	skipnc
  2691  0499  2CA3               	goto	l2045
  2692  049A  3000               	movlw	0
  2693  049B  00BB               	movwf	?___fttol+3
  2694  049C  3000               	movlw	0
  2695  049D  00BA               	movwf	?___fttol+2
  2696  049E  3000               	movlw	0
  2697  049F  00B9               	movwf	?___fttol+1
  2698  04A0  3000               	movlw	0
  2699  04A1  00B8               	movwf	?___fttol
  2700  04A2  0008               	return
  2701  04A3                     l2045:	
  2702  04A3  3001               	movlw	1
  2703  04A4                     u2495:	
  2704  04A4  36C4               	lsrf	___fttol@lval+3,f
  2705  04A5  0CC3               	rrf	___fttol@lval+2,f
  2706  04A6  0CC2               	rrf	___fttol@lval+1,f
  2707  04A7  0CC1               	rrf	___fttol@lval,f
  2708  04A8  0B89               	decfsz	9,f
  2709  04A9  2CA4               	goto	u2495
  2710  04AA  3001               	movlw	1
  2711  04AB  00BC               	movwf	??___fttol
  2712  04AC  083C               	movf	??___fttol,w
  2713  04AD  07C5               	addwf	___fttol@exp1,f
  2714  04AE  1903               	btfsc	3,2
  2715  04AF  2CCA               	goto	l2055
  2716  04B0  2CA3               	goto	l2045
  2717  04B1                     l2047:	
  2718  04B1  3018               	movlw	24
  2719  04B2  0245               	subwf	___fttol@exp1,w
  2720  04B3  1C03               	skipc
  2721  04B4  2CC7               	goto	l589
  2722  04B5  3000               	movlw	0
  2723  04B6  00BB               	movwf	?___fttol+3
  2724  04B7  3000               	movlw	0
  2725  04B8  00BA               	movwf	?___fttol+2
  2726  04B9  3000               	movlw	0
  2727  04BA  00B9               	movwf	?___fttol+1
  2728  04BB  3000               	movlw	0
  2729  04BC  00B8               	movwf	?___fttol
  2730  04BD  0008               	return
  2731  04BE                     l2053:	
  2732  04BE  3001               	movlw	1
  2733  04BF                     u2525:	
  2734  04BF  35C1               	lslf	___fttol@lval,f
  2735  04C0  0DC2               	rlf	___fttol@lval+1,f
  2736  04C1  0DC3               	rlf	___fttol@lval+2,f
  2737  04C2  0DC4               	rlf	___fttol@lval+3,f
  2738  04C3  0B89               	decfsz	9,f
  2739  04C4  2CBF               	goto	u2525
  2740  04C5  3001               	movlw	1
  2741  04C6  02C5               	subwf	___fttol@exp1,f
  2742  04C7                     l589:	
  2743  04C7  0845               	movf	___fttol@exp1,w
  2744  04C8  1D03               	btfss	3,2
  2745  04C9  2CBE               	goto	l2053
  2746  04CA                     l2055:	
  2747  04CA  0840               	movf	___fttol@sign1,w
  2748  04CB  1903               	btfsc	3,2
  2749  04CC  2CD8               	goto	l2059
  2750  04CD  09C1               	comf	___fttol@lval,f
  2751  04CE  09C2               	comf	___fttol@lval+1,f
  2752  04CF  09C3               	comf	___fttol@lval+2,f
  2753  04D0  09C4               	comf	___fttol@lval+3,f
  2754  04D1  0AC1               	incf	___fttol@lval,f
  2755  04D2  1903               	skipnz
  2756  04D3  0AC2               	incf	___fttol@lval+1,f
  2757  04D4  1903               	skipnz
  2758  04D5  0AC3               	incf	___fttol@lval+2,f
  2759  04D6  1903               	skipnz
  2760  04D7  0AC4               	incf	___fttol@lval+3,f
  2761  04D8                     l2059:	
  2762  04D8  0844               	movf	___fttol@lval+3,w
  2763  04D9  00BB               	movwf	?___fttol+3
  2764  04DA  0843               	movf	___fttol@lval+2,w
  2765  04DB  00BA               	movwf	?___fttol+2
  2766  04DC  0842               	movf	___fttol@lval+1,w
  2767  04DD  00B9               	movwf	?___fttol+1
  2768  04DE  0841               	movf	___fttol@lval,w
  2769  04DF  00B8               	movwf	?___fttol
  2770  04E0  0008               	return
  2771  04E1                     __end_of___fttol:	
  2772                           
  2773                           	psect	text11
  2774  0DE3                     __ptext11:	
  2775 ;; *************** function ___ftsub *****************
  2776 ;; Defined at:
  2777 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftsub.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  f2              3   10[BANK0 ] float 
  2780 ;;  f1              3   13[BANK0 ] float 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  3   10[BANK0 ] float 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2792 ;;      Params:         0       6       0       0
  2793 ;;      Locals:         0       0       0       0
  2794 ;;      Temps:          0       0       0       0
  2795 ;;      Totals:         0       6       0       0
  2796 ;;Total ram usage:        6 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    3
  2799 ;; This function calls:
  2800 ;;		___ftadd
  2801 ;; This function is called by:
  2802 ;;		_getTimeDifference
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function ___ftsub
  2808  0DE3                     ___ftsub:	
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  2812  0DE3  0020               	movlb	0	; select bank0
  2813  0DE4  082C               	movf	___ftsub@f2+2,w
  2814  0DE5  042B               	iorwf	___ftsub@f2+1,w
  2815  0DE6  042A               	iorwf	___ftsub@f2,w
  2816  0DE7  1903               	skipnz
  2817  0DE8  2DEB               	goto	l2667
  2818  0DE9  3080               	movlw	128
  2819  0DEA  06AC               	xorwf	___ftsub@f2+2,f
  2820  0DEB                     l2667:	
  2821  0DEB  082D               	movf	___ftsub@f1,w
  2822  0DEC  00A0               	movwf	___ftadd@f1
  2823  0DED  082E               	movf	___ftsub@f1+1,w
  2824  0DEE  00A1               	movwf	___ftadd@f1+1
  2825  0DEF  082F               	movf	___ftsub@f1+2,w
  2826  0DF0  00A2               	movwf	___ftadd@f1+2
  2827  0DF1  082A               	movf	___ftsub@f2,w
  2828  0DF2  00A3               	movwf	___ftadd@f2
  2829  0DF3  082B               	movf	___ftsub@f2+1,w
  2830  0DF4  00A4               	movwf	___ftadd@f2+1
  2831  0DF5  082C               	movf	___ftsub@f2+2,w
  2832  0DF6  00A5               	movwf	___ftadd@f2+2
  2833  0DF7  3182  22BB         	fcall	___ftadd
  2834  0DF9  0020               	movlb	0	; select bank0
  2835  0DFA  0820               	movf	?___ftadd,w
  2836  0DFB  00AA               	movwf	?___ftsub
  2837  0DFC  0821               	movf	?___ftadd+1,w
  2838  0DFD  00AB               	movwf	?___ftsub+1
  2839  0DFE  0822               	movf	?___ftadd+2,w
  2840  0DFF  00AC               	movwf	?___ftsub+2
  2841  0E00  0008               	return
  2842  0E01                     __end_of___ftsub:	
  2843                           
  2844                           	psect	text12
  2845  02BB                     __ptext12:	
  2846 ;; *************** function ___ftadd *****************
  2847 ;; Defined at:
  2848 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  f1              3    0[BANK0 ] float 
  2851 ;;  f2              3    3[BANK0 ] float 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  exp1            1   11[COMMON] unsigned char 
  2854 ;;  exp2            1   10[COMMON] unsigned char 
  2855 ;;  sign            1    9[COMMON] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  3    0[BANK0 ] float 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, pclath, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2865 ;;      Params:         0       6       0       0
  2866 ;;      Locals:         3       0       0       0
  2867 ;;      Temps:          0       4       0       0
  2868 ;;      Totals:         3      10       0       0
  2869 ;;Total ram usage:       13 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    2
  2872 ;; This function calls:
  2873 ;;		___ftpack
  2874 ;; This function is called by:
  2875 ;;		___ftsub
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function ___ftadd
  2881  02BB                     ___ftadd:	
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2885  02BB  0020               	movlb	0	; select bank0
  2886  02BC  0820               	movf	___ftadd@f1,w
  2887  02BD  00A6               	movwf	??___ftadd
  2888  02BE  0821               	movf	___ftadd@f1+1,w
  2889  02BF  00A7               	movwf	??___ftadd+1
  2890  02C0  0822               	movf	___ftadd@f1+2,w
  2891  02C1  00A8               	movwf	??___ftadd+2
  2892  02C2  1003               	clrc
  2893  02C3  0D27               	rlf	??___ftadd+1,w
  2894  02C4  0D28               	rlf	??___ftadd+2,w
  2895  02C5  00A9               	movwf	??___ftadd+3
  2896  02C6  0829               	movf	??___ftadd+3,w
  2897  02C7  00FB               	movwf	___ftadd@exp1
  2898  02C8  0823               	movf	___ftadd@f2,w
  2899  02C9  00A6               	movwf	??___ftadd
  2900  02CA  0824               	movf	___ftadd@f2+1,w
  2901  02CB  00A7               	movwf	??___ftadd+1
  2902  02CC  0825               	movf	___ftadd@f2+2,w
  2903  02CD  00A8               	movwf	??___ftadd+2
  2904  02CE  1003               	clrc
  2905  02CF  0D27               	rlf	??___ftadd+1,w
  2906  02D0  0D28               	rlf	??___ftadd+2,w
  2907  02D1  00A9               	movwf	??___ftadd+3
  2908  02D2  0829               	movf	??___ftadd+3,w
  2909  02D3  00FA               	movwf	___ftadd@exp2
  2910  02D4  087B               	movf	___ftadd@exp1,w
  2911  02D5  1903               	btfsc	3,2
  2912  02D6  2AE3               	goto	l2461
  2913  02D7  087A               	movf	___ftadd@exp2,w
  2914  02D8  027B               	subwf	___ftadd@exp1,w
  2915  02D9  1803               	skipnc
  2916  02DA  2AEA               	goto	l2465
  2917  02DB  037B               	decf	___ftadd@exp1,w
  2918  02DC  3AFF               	xorlw	255
  2919  02DD  077A               	addwf	___ftadd@exp2,w
  2920  02DE  00A6               	movwf	??___ftadd
  2921  02DF  3019               	movlw	25
  2922  02E0  0226               	subwf	??___ftadd,w
  2923  02E1  1C03               	skipc
  2924  02E2  2AEA               	goto	l2465
  2925  02E3                     l2461:	
  2926  02E3  0823               	movf	___ftadd@f2,w
  2927  02E4  00A0               	movwf	?___ftadd
  2928  02E5  0824               	movf	___ftadd@f2+1,w
  2929  02E6  00A1               	movwf	?___ftadd+1
  2930  02E7  0825               	movf	___ftadd@f2+2,w
  2931  02E8  00A2               	movwf	?___ftadd+2
  2932  02E9  0008               	return
  2933  02EA                     l2465:	
  2934  02EA  087A               	movf	___ftadd@exp2,w
  2935  02EB  1903               	btfsc	3,2
  2936  02EC  0008               	return
  2937  02ED  087B               	movf	___ftadd@exp1,w
  2938  02EE  027A               	subwf	___ftadd@exp2,w
  2939  02EF  1803               	skipnc
  2940  02F0  2AF9               	goto	l2471
  2941  02F1  037A               	decf	___ftadd@exp2,w
  2942  02F2  3AFF               	xorlw	255
  2943  02F3  077B               	addwf	___ftadd@exp1,w
  2944  02F4  00A6               	movwf	??___ftadd
  2945  02F5  3019               	movlw	25
  2946  02F6  0226               	subwf	??___ftadd,w
  2947  02F7  1803               	btfsc	3,0
  2948  02F8  0008               	return
  2949  02F9                     l2471:	
  2950  02F9  3006               	movlw	6
  2951  02FA  00A6               	movwf	??___ftadd
  2952  02FB  0826               	movf	??___ftadd,w
  2953  02FC  00F9               	movwf	___ftadd@sign
  2954  02FD  1BA2               	btfsc	___ftadd@f1+2,7
  2955  02FE  17F9               	bsf	___ftadd@sign,7
  2956  02FF  1BA5               	btfsc	___ftadd@f2+2,7
  2957  0300  1779               	bsf	___ftadd@sign,6
  2958  0301  17A1               	bsf	___ftadd@f1+1,7
  2959  0302  30FF               	movlw	255
  2960  0303  05A0               	andwf	___ftadd@f1,f
  2961  0304  30FF               	movlw	255
  2962  0305  05A1               	andwf	___ftadd@f1+1,f
  2963  0306  3000               	movlw	0
  2964  0307  05A2               	andwf	___ftadd@f1+2,f
  2965  0308  17A4               	bsf	___ftadd@f2+1,7
  2966  0309  30FF               	movlw	255
  2967  030A  05A3               	andwf	___ftadd@f2,f
  2968  030B  30FF               	movlw	255
  2969  030C  05A4               	andwf	___ftadd@f2+1,f
  2970  030D  3000               	movlw	0
  2971  030E  05A5               	andwf	___ftadd@f2+2,f
  2972  030F  087A               	movf	___ftadd@exp2,w
  2973  0310  027B               	subwf	___ftadd@exp1,w
  2974  0311  1803               	skipnc
  2975  0312  2B35               	goto	l2493
  2976  0313                     l2483:	
  2977  0313  3001               	movlw	1
  2978  0314                     u3235:	
  2979  0314  35A3               	lslf	___ftadd@f2,f
  2980  0315  0DA4               	rlf	___ftadd@f2+1,f
  2981  0316  0DA5               	rlf	___ftadd@f2+2,f
  2982  0317  0B89               	decfsz	9,f
  2983  0318  2B14               	goto	u3235
  2984  0319  3001               	movlw	1
  2985  031A  02FA               	subwf	___ftadd@exp2,f
  2986  031B  087A               	movf	___ftadd@exp2,w
  2987  031C  067B               	xorwf	___ftadd@exp1,w
  2988  031D  1903               	skipnz
  2989  031E  2B30               	goto	l2491
  2990  031F  3001               	movlw	1
  2991  0320  02F9               	subwf	___ftadd@sign,f
  2992  0321  0879               	movf	___ftadd@sign,w
  2993  0322  3907               	andlw	7
  2994  0323  1903               	btfsc	3,2
  2995  0324  2B30               	goto	l2491
  2996  0325  2B13               	goto	l2483
  2997  0326                     l2489:	
  2998  0326  3001               	movlw	1
  2999  0327                     u3265:	
  3000  0327  36A2               	lsrf	___ftadd@f1+2,f
  3001  0328  0CA1               	rrf	___ftadd@f1+1,f
  3002  0329  0CA0               	rrf	___ftadd@f1,f
  3003  032A  0B89               	decfsz	9,f
  3004  032B  2B27               	goto	u3265
  3005  032C  3001               	movlw	1
  3006  032D  00A6               	movwf	??___ftadd
  3007  032E  0826               	movf	??___ftadd,w
  3008  032F  07FB               	addwf	___ftadd@exp1,f
  3009  0330                     l2491:	
  3010  0330  087B               	movf	___ftadd@exp1,w
  3011  0331  067A               	xorwf	___ftadd@exp2,w
  3012  0332  1903               	btfsc	3,2
  3013  0333  2B5A               	goto	l529
  3014  0334  2B26               	goto	l2489
  3015  0335                     l2493:	
  3016  0335  087B               	movf	___ftadd@exp1,w
  3017  0336  027A               	subwf	___ftadd@exp2,w
  3018  0337  1803               	skipnc
  3019  0338  2B5A               	goto	l529
  3020  0339                     l2495:	
  3021  0339  3001               	movlw	1
  3022  033A                     u3295:	
  3023  033A  35A0               	lslf	___ftadd@f1,f
  3024  033B  0DA1               	rlf	___ftadd@f1+1,f
  3025  033C  0DA2               	rlf	___ftadd@f1+2,f
  3026  033D  0B89               	decfsz	9,f
  3027  033E  2B3A               	goto	u3295
  3028  033F  3001               	movlw	1
  3029  0340  02FB               	subwf	___ftadd@exp1,f
  3030  0341  087A               	movf	___ftadd@exp2,w
  3031  0342  067B               	xorwf	___ftadd@exp1,w
  3032  0343  1903               	skipnz
  3033  0344  2B56               	goto	l2503
  3034  0345  3001               	movlw	1
  3035  0346  02F9               	subwf	___ftadd@sign,f
  3036  0347  0879               	movf	___ftadd@sign,w
  3037  0348  3907               	andlw	7
  3038  0349  1903               	btfsc	3,2
  3039  034A  2B56               	goto	l2503
  3040  034B  2B39               	goto	l2495
  3041  034C                     l2501:	
  3042  034C  3001               	movlw	1
  3043  034D                     u3325:	
  3044  034D  36A5               	lsrf	___ftadd@f2+2,f
  3045  034E  0CA4               	rrf	___ftadd@f2+1,f
  3046  034F  0CA3               	rrf	___ftadd@f2,f
  3047  0350  0B89               	decfsz	9,f
  3048  0351  2B4D               	goto	u3325
  3049  0352  3001               	movlw	1
  3050  0353  00A6               	movwf	??___ftadd
  3051  0354  0826               	movf	??___ftadd,w
  3052  0355  07FA               	addwf	___ftadd@exp2,f
  3053  0356                     l2503:	
  3054  0356  087B               	movf	___ftadd@exp1,w
  3055  0357  067A               	xorwf	___ftadd@exp2,w
  3056  0358  1D03               	skipz
  3057  0359  2B4C               	goto	l2501
  3058  035A                     l529:	
  3059  035A  1FF9               	btfss	___ftadd@sign,7
  3060  035B  2B6C               	goto	l2507
  3061  035C  30FF               	movlw	255
  3062  035D  06A0               	xorwf	___ftadd@f1,f
  3063  035E  30FF               	movlw	255
  3064  035F  06A1               	xorwf	___ftadd@f1+1,f
  3065  0360  30FF               	movlw	255
  3066  0361  06A2               	xorwf	___ftadd@f1+2,f
  3067  0362  3001               	movlw	1
  3068  0363  07A0               	addwf	___ftadd@f1,f
  3069  0364  3000               	movlw	0
  3070  0365  1803               	skipnc
  3071  0366  3001               	movlw	1
  3072  0367  07A1               	addwf	___ftadd@f1+1,f
  3073  0368  3000               	movlw	0
  3074  0369  1803               	skipnc
  3075  036A  3001               	movlw	1
  3076  036B  07A2               	addwf	___ftadd@f1+2,f
  3077  036C                     l2507:	
  3078  036C  1F79               	btfss	___ftadd@sign,6
  3079  036D  2B7E               	goto	l2511
  3080  036E  30FF               	movlw	255
  3081  036F  06A3               	xorwf	___ftadd@f2,f
  3082  0370  30FF               	movlw	255
  3083  0371  06A4               	xorwf	___ftadd@f2+1,f
  3084  0372  30FF               	movlw	255
  3085  0373  06A5               	xorwf	___ftadd@f2+2,f
  3086  0374  3001               	movlw	1
  3087  0375  07A3               	addwf	___ftadd@f2,f
  3088  0376  3000               	movlw	0
  3089  0377  1803               	skipnc
  3090  0378  3001               	movlw	1
  3091  0379  07A4               	addwf	___ftadd@f2+1,f
  3092  037A  3000               	movlw	0
  3093  037B  1803               	skipnc
  3094  037C  3001               	movlw	1
  3095  037D  07A5               	addwf	___ftadd@f2+2,f
  3096  037E                     l2511:	
  3097  037E  01F9               	clrf	___ftadd@sign
  3098  037F  0820               	movf	___ftadd@f1,w
  3099  0380  07A3               	addwf	___ftadd@f2,f
  3100  0381  0821               	movf	___ftadd@f1+1,w
  3101  0382  3DA4               	addwfc	___ftadd@f2+1,f
  3102  0383  0822               	movf	___ftadd@f1+2,w
  3103  0384  3DA5               	addwfc	___ftadd@f2+2,f
  3104  0385  1FA5               	btfss	___ftadd@f2+2,7
  3105  0386  2B99               	goto	l2521
  3106  0387  30FF               	movlw	255
  3107  0388  06A3               	xorwf	___ftadd@f2,f
  3108  0389  30FF               	movlw	255
  3109  038A  06A4               	xorwf	___ftadd@f2+1,f
  3110  038B  30FF               	movlw	255
  3111  038C  06A5               	xorwf	___ftadd@f2+2,f
  3112  038D  3001               	movlw	1
  3113  038E  07A3               	addwf	___ftadd@f2,f
  3114  038F  3000               	movlw	0
  3115  0390  1803               	skipnc
  3116  0391  3001               	movlw	1
  3117  0392  07A4               	addwf	___ftadd@f2+1,f
  3118  0393  3000               	movlw	0
  3119  0394  1803               	skipnc
  3120  0395  3001               	movlw	1
  3121  0396  07A5               	addwf	___ftadd@f2+2,f
  3122  0397  01F9               	clrf	___ftadd@sign
  3123  0398  0AF9               	incf	___ftadd@sign,f
  3124  0399                     l2521:	
  3125  0399  0823               	movf	___ftadd@f2,w
  3126  039A  00F1               	movwf	___ftpack@arg
  3127  039B  0824               	movf	___ftadd@f2+1,w
  3128  039C  00F2               	movwf	___ftpack@arg+1
  3129  039D  0825               	movf	___ftadd@f2+2,w
  3130  039E  00F3               	movwf	___ftpack@arg+2
  3131  039F  087B               	movf	___ftadd@exp1,w
  3132  03A0  00A6               	movwf	??___ftadd
  3133  03A1  0826               	movf	??___ftadd,w
  3134  03A2  00F4               	movwf	___ftpack@exp
  3135  03A3  0879               	movf	___ftadd@sign,w
  3136  03A4  00A7               	movwf	??___ftadd+1
  3137  03A5  0827               	movf	??___ftadd+1,w
  3138  03A6  00F5               	movwf	___ftpack@sign
  3139  03A7  3186  2629         	fcall	___ftpack
  3140  03A9  0871               	movf	?___ftpack,w
  3141  03AA  0020               	movlb	0	; select bank0
  3142  03AB  00A0               	movwf	?___ftadd
  3143  03AC  0872               	movf	?___ftpack+1,w
  3144  03AD  00A1               	movwf	?___ftadd+1
  3145  03AE  0873               	movf	?___ftpack+2,w
  3146  03AF  00A2               	movwf	?___ftadd+2
  3147  03B0  0008               	return
  3148  03B1                     __end_of___ftadd:	
  3149                           
  3150                           	psect	text13
  3151  03B1                     __ptext13:	
  3152 ;; *************** function ___ftdiv *****************
  3153 ;; Defined at:
  3154 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  f2              3    8[BANK0 ] float 
  3157 ;;  f1              3   11[BANK0 ] float 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  f3              3   19[BANK0 ] float 
  3160 ;;  sign            1   23[BANK0 ] unsigned char 
  3161 ;;  exp             1   22[BANK0 ] unsigned char 
  3162 ;;  cntr            1   18[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  3    8[BANK0 ] float 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3172 ;;      Params:         0       6       0       0
  3173 ;;      Locals:         0       6       0       0
  3174 ;;      Temps:          0       4       0       0
  3175 ;;      Totals:         0      16       0       0
  3176 ;;Total ram usage:       16 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    2
  3179 ;; This function calls:
  3180 ;;		___ftpack
  3181 ;; This function is called by:
  3182 ;;		_getTimeDifference
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           
  3187                           ;psect for function ___ftdiv
  3188  03B1                     ___ftdiv:	
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3192  03B1  0020               	movlb	0	; select bank0
  3193  03B2  082B               	movf	___ftdiv@f1,w
  3194  03B3  00AE               	movwf	??___ftdiv
  3195  03B4  082C               	movf	___ftdiv@f1+1,w
  3196  03B5  00AF               	movwf	??___ftdiv+1
  3197  03B6  082D               	movf	___ftdiv@f1+2,w
  3198  03B7  00B0               	movwf	??___ftdiv+2
  3199  03B8  1003               	clrc
  3200  03B9  0D2F               	rlf	??___ftdiv+1,w
  3201  03BA  0D30               	rlf	??___ftdiv+2,w
  3202  03BB  00B1               	movwf	??___ftdiv+3
  3203  03BC  0831               	movf	??___ftdiv+3,w
  3204  03BD  00B6               	movwf	___ftdiv@exp
  3205  03BE  0836               	movf	___ftdiv@exp,w
  3206  03BF  1D03               	btfss	3,2
  3207  03C0  2BC8               	goto	l2627
  3208  03C1  3000               	movlw	0
  3209  03C2  00A8               	movwf	?___ftdiv
  3210  03C3  3000               	movlw	0
  3211  03C4  00A9               	movwf	?___ftdiv+1
  3212  03C5  3000               	movlw	0
  3213  03C6  00AA               	movwf	?___ftdiv+2
  3214  03C7  0008               	return
  3215  03C8                     l2627:	
  3216  03C8  0828               	movf	___ftdiv@f2,w
  3217  03C9  00AE               	movwf	??___ftdiv
  3218  03CA  0829               	movf	___ftdiv@f2+1,w
  3219  03CB  00AF               	movwf	??___ftdiv+1
  3220  03CC  082A               	movf	___ftdiv@f2+2,w
  3221  03CD  00B0               	movwf	??___ftdiv+2
  3222  03CE  1003               	clrc
  3223  03CF  0D2F               	rlf	??___ftdiv+1,w
  3224  03D0  0D30               	rlf	??___ftdiv+2,w
  3225  03D1  00B1               	movwf	??___ftdiv+3
  3226  03D2  0831               	movf	??___ftdiv+3,w
  3227  03D3  00B7               	movwf	___ftdiv@sign
  3228  03D4  0837               	movf	___ftdiv@sign,w
  3229  03D5  1D03               	btfss	3,2
  3230  03D6  2BDE               	goto	l2633
  3231  03D7  3000               	movlw	0
  3232  03D8  00A8               	movwf	?___ftdiv
  3233  03D9  3000               	movlw	0
  3234  03DA  00A9               	movwf	?___ftdiv+1
  3235  03DB  3000               	movlw	0
  3236  03DC  00AA               	movwf	?___ftdiv+2
  3237  03DD  0008               	return
  3238  03DE                     l2633:	
  3239  03DE  3000               	movlw	0
  3240  03DF  00B3               	movwf	___ftdiv@f3
  3241  03E0  3000               	movlw	0
  3242  03E1  00B4               	movwf	___ftdiv@f3+1
  3243  03E2  3000               	movlw	0
  3244  03E3  00B5               	movwf	___ftdiv@f3+2
  3245  03E4  3089               	movlw	137
  3246  03E5  0737               	addwf	___ftdiv@sign,w
  3247  03E6  00AE               	movwf	??___ftdiv
  3248  03E7  082E               	movf	??___ftdiv,w
  3249  03E8  02B6               	subwf	___ftdiv@exp,f
  3250  03E9  082B               	movf	___ftdiv@f1,w
  3251  03EA  00AE               	movwf	??___ftdiv
  3252  03EB  082C               	movf	___ftdiv@f1+1,w
  3253  03EC  00AF               	movwf	??___ftdiv+1
  3254  03ED  082D               	movf	___ftdiv@f1+2,w
  3255  03EE  00B0               	movwf	??___ftdiv+2
  3256  03EF  3010               	movlw	16
  3257  03F0                     u3535:	
  3258  03F0  36B0               	lsrf	??___ftdiv+2,f
  3259  03F1  0CAF               	rrf	??___ftdiv+1,f
  3260  03F2  0CAE               	rrf	??___ftdiv,f
  3261  03F3  0B89               	decfsz	9,f
  3262  03F4  2BF0               	goto	u3535
  3263  03F5  082E               	movf	??___ftdiv,w
  3264  03F6  00B1               	movwf	??___ftdiv+3
  3265  03F7  0831               	movf	??___ftdiv+3,w
  3266  03F8  00B7               	movwf	___ftdiv@sign
  3267  03F9  0828               	movf	___ftdiv@f2,w
  3268  03FA  00AE               	movwf	??___ftdiv
  3269  03FB  0829               	movf	___ftdiv@f2+1,w
  3270  03FC  00AF               	movwf	??___ftdiv+1
  3271  03FD  082A               	movf	___ftdiv@f2+2,w
  3272  03FE  00B0               	movwf	??___ftdiv+2
  3273  03FF  3010               	movlw	16
  3274  0400                     u3545:	
  3275  0400  36B0               	lsrf	??___ftdiv+2,f
  3276  0401  0CAF               	rrf	??___ftdiv+1,f
  3277  0402  0CAE               	rrf	??___ftdiv,f
  3278  0403  0B89               	decfsz	9,f
  3279  0404  2C00               	goto	u3545
  3280  0405  082E               	movf	??___ftdiv,w
  3281  0406  00B1               	movwf	??___ftdiv+3
  3282  0407  0831               	movf	??___ftdiv+3,w
  3283  0408  06B7               	xorwf	___ftdiv@sign,f
  3284  0409  3080               	movlw	128
  3285  040A  00AE               	movwf	??___ftdiv
  3286  040B  082E               	movf	??___ftdiv,w
  3287  040C  05B7               	andwf	___ftdiv@sign,f
  3288  040D  17AC               	bsf	___ftdiv@f1+1,7
  3289  040E  30FF               	movlw	255
  3290  040F  05AB               	andwf	___ftdiv@f1,f
  3291  0410  30FF               	movlw	255
  3292  0411  05AC               	andwf	___ftdiv@f1+1,f
  3293  0412  3000               	movlw	0
  3294  0413  05AD               	andwf	___ftdiv@f1+2,f
  3295  0414  17A9               	bsf	___ftdiv@f2+1,7
  3296  0415  30FF               	movlw	255
  3297  0416  05A8               	andwf	___ftdiv@f2,f
  3298  0417  30FF               	movlw	255
  3299  0418  05A9               	andwf	___ftdiv@f2+1,f
  3300  0419  3000               	movlw	0
  3301  041A  05AA               	andwf	___ftdiv@f2+2,f
  3302  041B  3018               	movlw	24
  3303  041C  00AE               	movwf	??___ftdiv
  3304  041D  082E               	movf	??___ftdiv,w
  3305  041E  00B2               	movwf	___ftdiv@cntr
  3306  041F                     l2647:	
  3307  041F  3001               	movlw	1
  3308  0420                     u3555:	
  3309  0420  35B3               	lslf	___ftdiv@f3,f
  3310  0421  0DB4               	rlf	___ftdiv@f3+1,f
  3311  0422  0DB5               	rlf	___ftdiv@f3+2,f
  3312  0423  0B89               	decfsz	9,f
  3313  0424  2C20               	goto	u3555
  3314  0425  082A               	movf	___ftdiv@f2+2,w
  3315  0426  022D               	subwf	___ftdiv@f1+2,w
  3316  0427  1D03               	skipz
  3317  0428  2C2F               	goto	u3565
  3318  0429  0829               	movf	___ftdiv@f2+1,w
  3319  042A  022C               	subwf	___ftdiv@f1+1,w
  3320  042B  1D03               	skipz
  3321  042C  2C2F               	goto	u3565
  3322  042D  0828               	movf	___ftdiv@f2,w
  3323  042E  022B               	subwf	___ftdiv@f1,w
  3324  042F                     u3565:	
  3325  042F  1C03               	skipc
  3326  0430  2C38               	goto	l2655
  3327  0431  0828               	movf	___ftdiv@f2,w
  3328  0432  02AB               	subwf	___ftdiv@f1,f
  3329  0433  0829               	movf	___ftdiv@f2+1,w
  3330  0434  3BAC               	subwfb	___ftdiv@f1+1,f
  3331  0435  082A               	movf	___ftdiv@f2+2,w
  3332  0436  3BAD               	subwfb	___ftdiv@f1+2,f
  3333  0437  1433               	bsf	___ftdiv@f3,0
  3334  0438                     l2655:	
  3335  0438  3001               	movlw	1
  3336  0439                     u3575:	
  3337  0439  35AB               	lslf	___ftdiv@f1,f
  3338  043A  0DAC               	rlf	___ftdiv@f1+1,f
  3339  043B  0DAD               	rlf	___ftdiv@f1+2,f
  3340  043C  0B89               	decfsz	9,f
  3341  043D  2C39               	goto	u3575
  3342  043E  3001               	movlw	1
  3343  043F  02B2               	subwf	___ftdiv@cntr,f
  3344  0440  1D03               	btfss	3,2
  3345  0441  2C1F               	goto	l2647
  3346  0442  0833               	movf	___ftdiv@f3,w
  3347  0443  00F1               	movwf	___ftpack@arg
  3348  0444  0834               	movf	___ftdiv@f3+1,w
  3349  0445  00F2               	movwf	___ftpack@arg+1
  3350  0446  0835               	movf	___ftdiv@f3+2,w
  3351  0447  00F3               	movwf	___ftpack@arg+2
  3352  0448  0836               	movf	___ftdiv@exp,w
  3353  0449  00AE               	movwf	??___ftdiv
  3354  044A  082E               	movf	??___ftdiv,w
  3355  044B  00F4               	movwf	___ftpack@exp
  3356  044C  0837               	movf	___ftdiv@sign,w
  3357  044D  00AF               	movwf	??___ftdiv+1
  3358  044E  082F               	movf	??___ftdiv+1,w
  3359  044F  00F5               	movwf	___ftpack@sign
  3360  0450  3186  2629         	fcall	___ftpack
  3361  0452  0871               	movf	?___ftpack,w
  3362  0453  0020               	movlb	0	; select bank0
  3363  0454  00A8               	movwf	?___ftdiv
  3364  0455  0872               	movf	?___ftpack+1,w
  3365  0456  00A9               	movwf	?___ftdiv+1
  3366  0457  0873               	movf	?___ftpack+2,w
  3367  0458  00AA               	movwf	?___ftdiv+2
  3368  0459  0008               	return
  3369  045A                     __end_of___ftdiv:	
  3370                           
  3371                           	psect	text14
  3372  0FC3                     __ptext14:	
  3373 ;; *************** function ___altoft *****************
  3374 ;; Defined at:
  3375 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  c               4   53[BANK0 ] long 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  sign            1   60[BANK0 ] unsigned char 
  3380 ;;  exp             1   59[BANK0 ] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  3   53[BANK0 ] float 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3390 ;;      Params:         0       4       0       0
  3391 ;;      Locals:         0       2       0       0
  3392 ;;      Temps:          0       2       0       0
  3393 ;;      Totals:         0       8       0       0
  3394 ;;Total ram usage:        8 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    2
  3397 ;; This function calls:
  3398 ;;		___ftpack
  3399 ;; This function is called by:
  3400 ;;		_getTimeDifference
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function ___altoft
  3406  0FC3                     ___altoft:	
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3410  0FC3  0020               	movlb	0	; select bank0
  3411  0FC4  01DC               	clrf	___altoft@sign
  3412  0FC5  308E               	movlw	142
  3413  0FC6  00D9               	movwf	??___altoft
  3414  0FC7  0859               	movf	??___altoft,w
  3415  0FC8  00DB               	movwf	___altoft@exp
  3416  0FC9  1FD8               	btfss	___altoft@c+3,7
  3417  0FCA  2FD8               	goto	l2615
  3418  0FCB  09D5               	comf	___altoft@c,f
  3419  0FCC  09D6               	comf	___altoft@c+1,f
  3420  0FCD  09D7               	comf	___altoft@c+2,f
  3421  0FCE  09D8               	comf	___altoft@c+3,f
  3422  0FCF  0AD5               	incf	___altoft@c,f
  3423  0FD0  1903               	skipnz
  3424  0FD1  0AD6               	incf	___altoft@c+1,f
  3425  0FD2  1903               	skipnz
  3426  0FD3  0AD7               	incf	___altoft@c+2,f
  3427  0FD4  1903               	skipnz
  3428  0FD5  0AD8               	incf	___altoft@c+3,f
  3429  0FD6  01DC               	clrf	___altoft@sign
  3430  0FD7  0ADC               	incf	___altoft@sign,f
  3431  0FD8                     l2615:	
  3432  0FD8  30FF               	movlw	255
  3433  0FD9  0558               	andwf	___altoft@c+3,w
  3434  0FDA  1903               	btfsc	3,2
  3435  0FDB  2FE8               	goto	l2617
  3436  0FDC  3001               	movlw	1
  3437  0FDD                     u3495:	
  3438  0FDD  36D8               	lsrf	___altoft@c+3,f
  3439  0FDE  0CD7               	rrf	___altoft@c+2,f
  3440  0FDF  0CD6               	rrf	___altoft@c+1,f
  3441  0FE0  0CD5               	rrf	___altoft@c,f
  3442  0FE1  0B89               	decfsz	9,f
  3443  0FE2  2FDD               	goto	u3495
  3444  0FE3  3001               	movlw	1
  3445  0FE4  00D9               	movwf	??___altoft
  3446  0FE5  0859               	movf	??___altoft,w
  3447  0FE6  07DB               	addwf	___altoft@exp,f
  3448  0FE7  2FD8               	goto	l2615
  3449  0FE8                     l2617:	
  3450  0FE8  0855               	movf	___altoft@c,w
  3451  0FE9  00F1               	movwf	___ftpack@arg
  3452  0FEA  0856               	movf	___altoft@c+1,w
  3453  0FEB  00F2               	movwf	___ftpack@arg+1
  3454  0FEC  0857               	movf	___altoft@c+2,w
  3455  0FED  00F3               	movwf	___ftpack@arg+2
  3456  0FEE  085B               	movf	___altoft@exp,w
  3457  0FEF  00D9               	movwf	??___altoft
  3458  0FF0  0859               	movf	??___altoft,w
  3459  0FF1  00F4               	movwf	___ftpack@exp
  3460  0FF2  085C               	movf	___altoft@sign,w
  3461  0FF3  00DA               	movwf	??___altoft+1
  3462  0FF4  085A               	movf	??___altoft+1,w
  3463  0FF5  00F5               	movwf	___ftpack@sign
  3464  0FF6  3186  2629         	fcall	___ftpack
  3465  0FF8  0871               	movf	?___ftpack,w
  3466  0FF9  0020               	movlb	0	; select bank0
  3467  0FFA  00D5               	movwf	?___altoft
  3468  0FFB  0872               	movf	?___ftpack+1,w
  3469  0FFC  00D6               	movwf	?___altoft+1
  3470  0FFD  0873               	movf	?___ftpack+2,w
  3471  0FFE  00D7               	movwf	?___altoft+2
  3472  0FFF  0008               	return
  3473  1000                     __end_of___altoft:	
  3474                           
  3475                           	psect	text15
  3476  0629                     __ptext15:	
  3477 ;; *************** function ___ftpack *****************
  3478 ;; Defined at:
  3479 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  arg             3    1[COMMON] unsigned um
  3482 ;;  exp             1    4[COMMON] unsigned char 
  3483 ;;  sign            1    5[COMMON] unsigned char 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  3    1[COMMON] float 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3495 ;;      Params:         5       0       0       0
  3496 ;;      Locals:         0       0       0       0
  3497 ;;      Temps:          3       0       0       0
  3498 ;;      Totals:         8       0       0       0
  3499 ;;Total ram usage:        8 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		___altoft
  3506 ;;		___ftadd
  3507 ;;		___ftdiv
  3508 ;;		___lltoft
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function ___ftpack
  3514  0629                     ___ftpack:	
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3518  0629  0874               	movf	___ftpack@exp,w
  3519  062A  1903               	btfsc	3,2
  3520  062B  2E31               	goto	l2345
  3521  062C  0873               	movf	___ftpack@arg+2,w
  3522  062D  0472               	iorwf	___ftpack@arg+1,w
  3523  062E  0471               	iorwf	___ftpack@arg,w
  3524  062F  1D03               	skipz
  3525  0630  2E42               	goto	l2351
  3526  0631                     l2345:	
  3527  0631  3000               	movlw	0
  3528  0632  00F1               	movwf	?___ftpack
  3529  0633  3000               	movlw	0
  3530  0634  00F2               	movwf	?___ftpack+1
  3531  0635  3000               	movlw	0
  3532  0636  00F3               	movwf	?___ftpack+2
  3533  0637  0008               	return
  3534  0638                     l2349:	
  3535  0638  3001               	movlw	1
  3536  0639  00F6               	movwf	??___ftpack
  3537  063A  0876               	movf	??___ftpack,w
  3538  063B  07F4               	addwf	___ftpack@exp,f
  3539  063C  3001               	movlw	1
  3540  063D                     u2935:	
  3541  063D  36F3               	lsrf	___ftpack@arg+2,f
  3542  063E  0CF2               	rrf	___ftpack@arg+1,f
  3543  063F  0CF1               	rrf	___ftpack@arg,f
  3544  0640  0B89               	decfsz	9,f
  3545  0641  2E3D               	goto	u2935
  3546  0642                     l2351:	
  3547  0642  30FE               	movlw	254
  3548  0643  0573               	andwf	___ftpack@arg+2,w
  3549  0644  1903               	btfsc	3,2
  3550  0645  2E5B               	goto	l498
  3551  0646  2E38               	goto	l2349
  3552  0647                     l2353:	
  3553  0647  3001               	movlw	1
  3554  0648  00F6               	movwf	??___ftpack
  3555  0649  0876               	movf	??___ftpack,w
  3556  064A  07F4               	addwf	___ftpack@exp,f
  3557  064B  3001               	movlw	1
  3558  064C  07F1               	addwf	___ftpack@arg,f
  3559  064D  3000               	movlw	0
  3560  064E  1803               	skipnc
  3561  064F  3001               	movlw	1
  3562  0650  07F2               	addwf	___ftpack@arg+1,f
  3563  0651  3000               	movlw	0
  3564  0652  1803               	skipnc
  3565  0653  3001               	movlw	1
  3566  0654  07F3               	addwf	___ftpack@arg+2,f
  3567  0655  3001               	movlw	1
  3568  0656                     u2955:	
  3569  0656  36F3               	lsrf	___ftpack@arg+2,f
  3570  0657  0CF2               	rrf	___ftpack@arg+1,f
  3571  0658  0CF1               	rrf	___ftpack@arg,f
  3572  0659  0B89               	decfsz	9,f
  3573  065A  2E56               	goto	u2955
  3574  065B                     l498:	
  3575  065B  30FF               	movlw	255
  3576  065C  0573               	andwf	___ftpack@arg+2,w
  3577  065D  1903               	btfsc	3,2
  3578  065E  2E68               	goto	l2361
  3579  065F  2E47               	goto	l2353
  3580  0660                     l2359:	
  3581  0660  3001               	movlw	1
  3582  0661  02F4               	subwf	___ftpack@exp,f
  3583  0662  3001               	movlw	1
  3584  0663                     u2975:	
  3585  0663  35F1               	lslf	___ftpack@arg,f
  3586  0664  0DF2               	rlf	___ftpack@arg+1,f
  3587  0665  0DF3               	rlf	___ftpack@arg+2,f
  3588  0666  0B89               	decfsz	9,f
  3589  0667  2E63               	goto	u2975
  3590  0668                     l2361:	
  3591  0668  1BF2               	btfsc	___ftpack@arg+1,7
  3592  0669  2E6E               	goto	l505
  3593  066A  3002               	movlw	2
  3594  066B  0274               	subwf	___ftpack@exp,w
  3595  066C  1803               	skipnc
  3596  066D  2E60               	goto	l2359
  3597  066E                     l505:	
  3598  066E  1874               	btfsc	___ftpack@exp,0
  3599  066F  2E76               	goto	l506
  3600  0670  30FF               	movlw	255
  3601  0671  05F1               	andwf	___ftpack@arg,f
  3602  0672  307F               	movlw	127
  3603  0673  05F2               	andwf	___ftpack@arg+1,f
  3604  0674  30FF               	movlw	255
  3605  0675  05F3               	andwf	___ftpack@arg+2,f
  3606  0676                     l506:	
  3607  0676  1003               	clrc
  3608  0677  0CF4               	rrf	___ftpack@exp,f
  3609  0678  0874               	movf	___ftpack@exp,w
  3610  0679  00F6               	movwf	??___ftpack
  3611  067A  01F7               	clrf	??___ftpack+1
  3612  067B  01F8               	clrf	??___ftpack+2
  3613  067C  3010               	movlw	16
  3614  067D                     u3015:	
  3615  067D  35F6               	lslf	??___ftpack,f
  3616  067E  0DF7               	rlf	??___ftpack+1,f
  3617  067F  0DF8               	rlf	??___ftpack+2,f
  3618  0680  0B89               	decfsz	9,f
  3619  0681  2E7D               	goto	u3015
  3620  0682  0876               	movf	??___ftpack,w
  3621  0683  04F1               	iorwf	___ftpack@arg,f
  3622  0684  0877               	movf	??___ftpack+1,w
  3623  0685  04F2               	iorwf	___ftpack@arg+1,f
  3624  0686  0878               	movf	??___ftpack+2,w
  3625  0687  04F3               	iorwf	___ftpack@arg+2,f
  3626  0688  0875               	movf	___ftpack@sign,w
  3627  0689  1903               	btfsc	3,2
  3628  068A  0008               	return
  3629  068B  17F3               	bsf	___ftpack@arg+2,7
  3630  068C  0008               	return
  3631  068D                     __end_of___ftpack:	
  3632                           
  3633                           	psect	text16
  3634  0EAE                     __ptext16:	
  3635 ;; *************** function _displayTime *****************
  3636 ;; Defined at:
  3637 ;;		line 137 in file "DS1307.h"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  c               1   23[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3651 ;;      Params:         0       0       0       0
  3652 ;;      Locals:         0       1       0       0
  3653 ;;      Temps:          0       2       0       0
  3654 ;;      Totals:         0       3       0       0
  3655 ;;Total ram usage:        3 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    9
  3658 ;; This function calls:
  3659 ;;		_lcd_write_number
  3660 ;;		_lcd_yaz
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _displayTime
  3668  0EAE                     _displayTime:	
  3669                           
  3670                           ;DS1307.h: 139: for(char c = 4; c < 7; c++)
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _displayTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3674  0EAE  3004               	movlw	4
  3675  0EAF  0020               	movlb	0	; select bank0
  3676  0EB0  00B5               	movwf	??_displayTime
  3677  0EB1  0835               	movf	??_displayTime,w
  3678  0EB2  00B7               	movwf	displayTime@c
  3679  0EB3                     L4:	
  3680  0EB3  3007               	movlw	7
  3681  0EB4  0237               	subwf	displayTime@c,w
  3682  0EB5  1803               	btfsc	3,0
  3683  0EB6  0008               	return
  3684                           
  3685                           ;DS1307.h: 140: {
  3686                           ;DS1307.h: 141: lcd_write_number(zaman[c]);
  3687  0EB7  0837               	movf	displayTime@c,w
  3688  0EB8  3ECD               	addlw	(low (_zaman| 0))& (0+255)
  3689  0EB9  0086               	movwf	6
  3690  0EBA  0187               	clrf	7
  3691  0EBB  0801               	movf	1,w
  3692  0EBC  00B5               	movwf	??_displayTime
  3693  0EBD  01B6               	clrf	??_displayTime+1
  3694  0EBE  0835               	movf	??_displayTime,w
  3695  0EBF  00B3               	movwf	lcd_write_number@number
  3696  0EC0  0836               	movf	??_displayTime+1,w
  3697  0EC1  00B4               	movwf	lcd_write_number@number+1
  3698  0EC2  318D  2554  318E   	fcall	_lcd_write_number
  3699                           
  3700                           ;DS1307.h: 142: if(c != 6) lcd_yaz(':');
  3701  0EC5  3006               	movlw	6
  3702  0EC6  0020               	movlb	0	; select bank0
  3703  0EC7  0637               	xorwf	displayTime@c,w
  3704  0EC8  1903               	btfsc	3,2
  3705  0EC9  2ECE               	goto	l2703
  3706  0ECA  303A               	movlw	58
  3707  0ECB  318E  2663  318E   	fcall	_lcd_yaz
  3708  0ECE                     l2703:	
  3709  0ECE  3001               	movlw	1
  3710  0ECF  0020               	movlb	0	; select bank0
  3711  0ED0  00B5               	movwf	??_displayTime
  3712  0ED1  0835               	movf	??_displayTime,w
  3713  0ED2  07B7               	addwf	displayTime@c,f
  3714  0ED3  2EB3               	goto	L4
  3715  0ED4                     __end_of_displayTime:	
  3716                           
  3717                           	psect	text17
  3718  0E88                     __ptext17:	
  3719 ;; *************** function _displayDate *****************
  3720 ;; Defined at:
  3721 ;;		line 146 in file "DS1307.h"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  c               1   23[BANK0 ] char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3735 ;;      Params:         0       0       0       0
  3736 ;;      Locals:         0       1       0       0
  3737 ;;      Temps:          0       2       0       0
  3738 ;;      Totals:         0       3       0       0
  3739 ;;Total ram usage:        3 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    9
  3742 ;; This function calls:
  3743 ;;		_lcd_write_number
  3744 ;;		_lcd_yaz
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           
  3751                           ;psect for function _displayDate
  3752  0E88                     _displayDate:	
  3753                           
  3754                           ;DS1307.h: 148: for(signed char c = 3; c != -1; c--)
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _displayDate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3758  0E88  3003               	movlw	3
  3759  0E89  0020               	movlb	0	; select bank0
  3760  0E8A  00B5               	movwf	??_displayDate
  3761  0E8B  0835               	movf	??_displayDate,w
  3762  0E8C  00B7               	movwf	displayDate@c
  3763  0E8D                     L5:	
  3764  0E8D  0A37               	incf	displayDate@c,w
  3765  0E8E  1903               	btfsc	3,2
  3766  0E8F  0008               	return
  3767                           
  3768                           ;DS1307.h: 149: {
  3769                           ;DS1307.h: 150: lcd_write_number(zaman[c]);
  3770  0E90  0837               	movf	displayDate@c,w
  3771  0E91  3ECD               	addlw	(low (_zaman| 0))& (0+255)
  3772  0E92  0086               	movwf	6
  3773  0E93  0187               	clrf	7
  3774  0E94  0801               	movf	1,w
  3775  0E95  00B5               	movwf	??_displayDate
  3776  0E96  01B6               	clrf	??_displayDate+1
  3777  0E97  0835               	movf	??_displayDate,w
  3778  0E98  00B3               	movwf	lcd_write_number@number
  3779  0E99  0836               	movf	??_displayDate+1,w
  3780  0E9A  00B4               	movwf	lcd_write_number@number+1
  3781  0E9B  318D  2554  318E   	fcall	_lcd_write_number
  3782                           
  3783                           ;DS1307.h: 151: if(c > 1) lcd_yaz('/');
  3784  0E9E  0020               	movlb	0	; select bank0
  3785  0E9F  0837               	movf	displayDate@c,w
  3786  0EA0  3A80               	xorlw	128
  3787  0EA1  3E7E               	addlw	-130
  3788  0EA2  1C03               	skipc
  3789  0EA3  2EA8               	goto	l2719
  3790  0EA4  302F               	movlw	47
  3791  0EA5  318E  2663  318E   	fcall	_lcd_yaz
  3792  0EA8                     l2719:	
  3793  0EA8  30FF               	movlw	255
  3794  0EA9  0020               	movlb	0	; select bank0
  3795  0EAA  00B5               	movwf	??_displayDate
  3796  0EAB  0835               	movf	??_displayDate,w
  3797  0EAC  07B7               	addwf	displayDate@c,f
  3798  0EAD  2E8D               	goto	L5
  3799  0EAE                     __end_of_displayDate:	
  3800                           
  3801                           	psect	text18
  3802  0D54                     __ptext18:	
  3803 ;; *************** function _lcd_write_number *****************
  3804 ;; Defined at:
  3805 ;;		line 207 in file "LCD.h"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  number          2   19[BANK0 ] int 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3819 ;;      Params:         0       2       0       0
  3820 ;;      Locals:         0       0       0       0
  3821 ;;      Temps:          0       0       0       0
  3822 ;;      Totals:         0       2       0       0
  3823 ;;Total ram usage:        2 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    8
  3826 ;; This function calls:
  3827 ;;		_itoa
  3828 ;;		_lcd_write
  3829 ;; This function is called by:
  3830 ;;		_displayTime
  3831 ;;		_displayDate
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function _lcd_write_number
  3837  0D54                     _lcd_write_number:	
  3838                           
  3839                           ;LCD.h: 209: itoa((char *)number_array, number, 10);
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in _lcd_write_number: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3843  0D54  0020               	movlb	0	; select bank0
  3844  0D55  0834               	movf	lcd_write_number@number+1,w
  3845  0D56  00AD               	movwf	itoa@val+1
  3846  0D57  0833               	movf	lcd_write_number@number,w
  3847  0D58  00AC               	movwf	itoa@val
  3848  0D59  300A               	movlw	10
  3849  0D5A  00AE               	movwf	itoa@base
  3850  0D5B  3000               	movlw	0
  3851  0D5C  00AF               	movwf	itoa@base+1
  3852  0D5D  30D4               	movlw	(low (_number_array| 0))& (0+255)
  3853  0D5E  318E  263F  318D   	fcall	_itoa
  3854                           
  3855                           ;LCD.h: 210: lcd_write(number_array);
  3856  0D61  30D4               	movlw	low _number_array
  3857  0D62  0020               	movlb	0	; select bank0
  3858  0D63  00A7               	movwf	lcd_write@s
  3859  0D64  3000               	movlw	high _number_array
  3860  0D65  00A8               	movwf	lcd_write@s+1
  3861  0D66  318D  25AD         	fcall	_lcd_write
  3862  0D68  0008               	return
  3863  0D69                     __end_of_lcd_write_number:	
  3864                           
  3865                           	psect	text19
  3866  0DAD                     __ptext19:	
  3867 ;; *************** function _lcd_write *****************
  3868 ;; Defined at:
  3869 ;;		line 159 in file "LCD.h"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  3872 ;;		 -> STR_1(5), number_array(5), 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3884 ;;      Params:         0       2       0       0
  3885 ;;      Locals:         0       0       0       0
  3886 ;;      Temps:          0       1       0       0
  3887 ;;      Totals:         0       3       0       0
  3888 ;;Total ram usage:        3 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    7
  3891 ;; This function calls:
  3892 ;;		_DELAY
  3893 ;;		_lcd_yaz
  3894 ;; This function is called by:
  3895 ;;		_lcd_write_number
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _lcd_write
  3902  0DAD                     _lcd_write:	
  3903  0DAD                     l2425:	
  3904                           ;LCD.h: 161: while(*s){
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3908                           
  3909  0DAD  0020               	movlb	0	; select bank0
  3910  0DAE  0827               	movf	lcd_write@s,w
  3911  0DAF  0084               	movwf	4
  3912  0DB0  0828               	movf	lcd_write@s+1,w
  3913  0DB1  0085               	movwf	5
  3914  0DB2  0012               	moviw fsr0++
  3915  0DB3  1903               	btfsc	3,2
  3916  0DB4  0008               	return
  3917                           
  3918                           ;LCD.h: 163: lcd_yaz(*s);
  3919  0DB5  0020               	movlb	0	; select bank0
  3920  0DB6  0827               	movf	lcd_write@s,w
  3921  0DB7  0084               	movwf	4
  3922  0DB8  0828               	movf	lcd_write@s+1,w
  3923  0DB9  0085               	movwf	5
  3924  0DBA  0800               	movf	0,w	;code access
  3925  0DBB  318E  2663  318D   	fcall	_lcd_yaz
  3926                           
  3927                           ;LCD.h: 164: s++;
  3928  0DBE  3001               	movlw	1
  3929  0DBF  0020               	movlb	0	; select bank0
  3930  0DC0  07A7               	addwf	lcd_write@s,f
  3931  0DC1  3000               	movlw	0
  3932  0DC2  3DA8               	addwfc	lcd_write@s+1,f
  3933                           
  3934                           ;LCD.h: 166: DELAY(1);}
  3935  0DC3  3001               	movlw	1
  3936  0DC4  318C  24E3  318D   	fcall	_DELAY
  3937  0DC7  2DAD               	goto	l2425
  3938  0DC8                     __end_of_lcd_write:	
  3939                           
  3940                           	psect	text20
  3941  0E63                     __ptext20:	
  3942 ;; *************** function _lcd_yaz *****************
  3943 ;; Defined at:
  3944 ;;		line 141 in file "LCD.h"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  s               1    wreg     unsigned char 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  s               1    6[BANK0 ] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, pclath, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3958 ;;      Params:         0       0       0       0
  3959 ;;      Locals:         0       1       0       0
  3960 ;;      Temps:          0       1       0       0
  3961 ;;      Totals:         0       2       0       0
  3962 ;;Total ram usage:        2 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    6
  3965 ;; This function calls:
  3966 ;;		_lcd_goto
  3967 ;;		_lcd_info
  3968 ;; This function is called by:
  3969 ;;		_lcd_write
  3970 ;;		_displayTime
  3971 ;;		_displayDate
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           
  3976                           ;psect for function _lcd_yaz
  3977  0E63                     _lcd_yaz:	
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in _lcd_yaz: [wreg+status,2+status,0+pclath+cstack]
  3981                           ;lcd_yaz@s stored from wreg
  3982  0E63  0020               	movlb	0	; select bank0
  3983  0E64  00A6               	movwf	lcd_yaz@s
  3984                           
  3985                           ;LCD.h: 143: lcd_info(s, 1);
  3986  0E65  01FA               	clrf	lcd_info@data_type
  3987  0E66  0AFA               	incf	lcd_info@data_type,f
  3988  0E67  0826               	movf	lcd_yaz@s,w
  3989  0E68  3185  25C3  318E   	fcall	_lcd_info
  3990                           
  3991                           ;LCD.h: 144: _x++;
  3992  0E6B  3001               	movlw	1
  3993  0E6C  0020               	movlb	0	; select bank0
  3994  0E6D  00A5               	movwf	??_lcd_yaz
  3995  0E6E  0825               	movf	??_lcd_yaz,w
  3996  0E6F  07EE               	addwf	__x,f
  3997                           
  3998                           ;LCD.h: 145: if(_x == 17)
  3999  0E70  3011               	movlw	17
  4000  0E71  066E               	xorwf	__x,w
  4001  0E72  1D03               	btfss	3,2
  4002  0E73  0008               	return
  4003                           
  4004                           ;LCD.h: 146: {
  4005                           ;LCD.h: 147: _x = 1;
  4006  0E74  01EE               	clrf	__x
  4007  0E75  0AEE               	incf	__x,f
  4008                           
  4009                           ;LCD.h: 148: _y++;
  4010  0E76  3001               	movlw	1
  4011  0E77  00A5               	movwf	??_lcd_yaz
  4012  0E78  0825               	movf	??_lcd_yaz,w
  4013  0E79  07EF               	addwf	__y,f
  4014                           
  4015                           ;LCD.h: 149: if(_y == 3)
  4016  0E7A  3003               	movlw	3
  4017  0E7B  066F               	xorwf	__y,w
  4018  0E7C  1D03               	btfss	3,2
  4019  0E7D  2E80               	goto	l2339
  4020                           
  4021                           ;LCD.h: 150: {
  4022                           ;LCD.h: 151: _y = 1;
  4023  0E7E  01EF               	clrf	__y
  4024  0E7F  0AEF               	incf	__y,f
  4025  0E80                     l2339:	
  4026                           
  4027                           ;LCD.h: 152: }
  4028                           ;LCD.h: 154: lcd_goto(_y, _x);
  4029  0E80  086E               	movf	__x,w
  4030  0E81  00A5               	movwf	??_lcd_yaz
  4031  0E82  0825               	movf	??_lcd_yaz,w
  4032  0E83  00A2               	movwf	lcd_goto@p_2
  4033  0E84  086F               	movf	__y,w
  4034  0E85  3187  27DD         	fcall	_lcd_goto
  4035  0E87  0008               	return
  4036  0E88                     __end_of_lcd_yaz:	
  4037                           
  4038                           	psect	text21
  4039  0E3F                     __ptext21:	
  4040 ;; *************** function _itoa *****************
  4041 ;; Defined at:
  4042 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  buf             1    wreg     PTR unsigned char 
  4045 ;;		 -> number_array(5), 
  4046 ;;  val             2   12[BANK0 ] int 
  4047 ;;  base            2   14[BANK0 ] int 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  4050 ;;		 -> number_array(5), 
  4051 ;;  cp              1   17[BANK0 ] PTR unsigned char 
  4052 ;;		 -> number_array(5), 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      PTR unsigned char 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4062 ;;      Params:         0       4       0       0
  4063 ;;      Locals:         0       2       0       0
  4064 ;;      Temps:          0       1       0       0
  4065 ;;      Totals:         0       7       0       0
  4066 ;;Total ram usage:        7 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    3
  4069 ;; This function calls:
  4070 ;;		_utoa
  4071 ;; This function is called by:
  4072 ;;		_lcd_write_number
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function _itoa
  4078  0E3F                     _itoa:	
  4079                           
  4080                           ;incstack = 0
  4081                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4082                           ;itoa@buf stored from wreg
  4083  0E3F  0020               	movlb	0	; select bank0
  4084  0E40  00B2               	movwf	itoa@buf
  4085  0E41  0832               	movf	itoa@buf,w
  4086  0E42  00B0               	movwf	??_itoa
  4087  0E43  0830               	movf	??_itoa,w
  4088  0E44  00B1               	movwf	itoa@cp
  4089  0E45  1FAD               	btfss	itoa@val+1,7
  4090  0E46  2E57               	goto	l2437
  4091  0E47  302D               	movlw	45
  4092  0E48  00B0               	movwf	??_itoa
  4093  0E49  0832               	movf	itoa@buf,w
  4094  0E4A  0086               	movwf	6
  4095  0E4B  0187               	clrf	7
  4096  0E4C  0830               	movf	??_itoa,w
  4097  0E4D  0081               	movwf	1
  4098  0E4E  3001               	movlw	1
  4099  0E4F  00B0               	movwf	??_itoa
  4100  0E50  0830               	movf	??_itoa,w
  4101  0E51  07B2               	addwf	itoa@buf,f
  4102  0E52  09AC               	comf	itoa@val,f
  4103  0E53  09AD               	comf	itoa@val+1,f
  4104  0E54  0AAC               	incf	itoa@val,f
  4105  0E55  1903               	skipnz
  4106  0E56  0AAD               	incf	itoa@val+1,f
  4107  0E57                     l2437:	
  4108  0E57  082D               	movf	itoa@val+1,w
  4109  0E58  00A4               	movwf	utoa@val+1
  4110  0E59  082C               	movf	itoa@val,w
  4111  0E5A  00A3               	movwf	utoa@val
  4112  0E5B  082F               	movf	itoa@base+1,w
  4113  0E5C  00A6               	movwf	utoa@base+1
  4114  0E5D  082E               	movf	itoa@base,w
  4115  0E5E  00A5               	movwf	utoa@base
  4116  0E5F  0832               	movf	itoa@buf,w
  4117  0E60  3186  268D         	fcall	_utoa
  4118  0E62  0008               	return
  4119  0E63                     __end_of_itoa:	
  4120                           ;	Return value of _itoa is never used
  4121                           
  4122                           
  4123                           	psect	text22
  4124  068D                     __ptext22:	
  4125 ;; *************** function _utoa *****************
  4126 ;; Defined at:
  4127 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  buf             1    wreg     PTR unsigned char 
  4130 ;;		 -> number_array(5), 
  4131 ;;  val             2    3[BANK0 ] unsigned int 
  4132 ;;  base            2    5[BANK0 ] int 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  buf             1   11[BANK0 ] PTR unsigned char 
  4135 ;;		 -> number_array(5), 
  4136 ;;  v               2    8[BANK0 ] unsigned int 
  4137 ;;  c               1   10[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      PTR unsigned char 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4147 ;;      Params:         0       4       0       0
  4148 ;;      Locals:         0       4       0       0
  4149 ;;      Temps:          0       1       0       0
  4150 ;;      Totals:         0       9       0       0
  4151 ;;Total ram usage:        9 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    2
  4154 ;; This function calls:
  4155 ;;		___lwdiv
  4156 ;;		___lwmod
  4157 ;; This function is called by:
  4158 ;;		_itoa
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _utoa
  4164  068D                     _utoa:	
  4165                           
  4166                           ;incstack = 0
  4167                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4168                           ;utoa@buf stored from wreg
  4169  068D  0020               	movlb	0	; select bank0
  4170  068E  00AB               	movwf	utoa@buf
  4171  068F  0824               	movf	utoa@val+1,w
  4172  0690  00A9               	movwf	utoa@v+1
  4173  0691  0823               	movf	utoa@val,w
  4174  0692  00A8               	movwf	utoa@v
  4175  0693                     l2375:	
  4176  0693  0826               	movf	utoa@base+1,w
  4177  0694  00F8               	movwf	___lwdiv@divisor+1
  4178  0695  0825               	movf	utoa@base,w
  4179  0696  00F7               	movwf	___lwdiv@divisor
  4180  0697  0829               	movf	utoa@v+1,w
  4181  0698  00FA               	movwf	___lwdiv@dividend+1
  4182  0699  0828               	movf	utoa@v,w
  4183  069A  00F9               	movwf	___lwdiv@dividend
  4184  069B  318F  278E  3186   	fcall	___lwdiv
  4185  069E  0878               	movf	?___lwdiv+1,w
  4186  069F  0020               	movlb	0	; select bank0
  4187  06A0  00A9               	movwf	utoa@v+1
  4188  06A1  0877               	movf	?___lwdiv,w
  4189  06A2  00A8               	movwf	utoa@v
  4190  06A3  3001               	movlw	1
  4191  06A4  00A7               	movwf	??_utoa
  4192  06A5  0827               	movf	??_utoa,w
  4193  06A6  07AB               	addwf	utoa@buf,f
  4194  06A7  0828               	movf	utoa@v,w
  4195  06A8  0429               	iorwf	utoa@v+1,w
  4196  06A9  1D03               	btfss	3,2
  4197  06AA  2E93               	goto	l2375
  4198  06AB  082B               	movf	utoa@buf,w
  4199  06AC  0086               	movwf	6
  4200  06AD  0187               	clrf	7
  4201  06AE  0181               	clrf	1
  4202  06AF  3001               	movlw	1
  4203  06B0  02AB               	subwf	utoa@buf,f
  4204  06B1                     l2385:	
  4205  06B1  0826               	movf	utoa@base+1,w
  4206  06B2  00F2               	movwf	___lwmod@divisor+1
  4207  06B3  0825               	movf	utoa@base,w
  4208  06B4  00F1               	movwf	___lwmod@divisor
  4209  06B5  0824               	movf	utoa@val+1,w
  4210  06B6  00F4               	movwf	___lwmod@dividend+1
  4211  06B7  0823               	movf	utoa@val,w
  4212  06B8  00F3               	movwf	___lwmod@dividend
  4213  06B9  318E  26FF  3186   	fcall	___lwmod
  4214  06BC  0871               	movf	?___lwmod,w
  4215  06BD  0020               	movlb	0	; select bank0
  4216  06BE  00A7               	movwf	??_utoa
  4217  06BF  0827               	movf	??_utoa,w
  4218  06C0  00AA               	movwf	utoa@c
  4219  06C1  0826               	movf	utoa@base+1,w
  4220  06C2  00F8               	movwf	___lwdiv@divisor+1
  4221  06C3  0825               	movf	utoa@base,w
  4222  06C4  00F7               	movwf	___lwdiv@divisor
  4223  06C5  0824               	movf	utoa@val+1,w
  4224  06C6  00FA               	movwf	___lwdiv@dividend+1
  4225  06C7  0823               	movf	utoa@val,w
  4226  06C8  00F9               	movwf	___lwdiv@dividend
  4227  06C9  318F  278E  3186   	fcall	___lwdiv
  4228  06CC  0878               	movf	?___lwdiv+1,w
  4229  06CD  0020               	movlb	0	; select bank0
  4230  06CE  00A4               	movwf	utoa@val+1
  4231  06CF  0877               	movf	?___lwdiv,w
  4232  06D0  00A3               	movwf	utoa@val
  4233  06D1  300A               	movlw	10
  4234  06D2  022A               	subwf	utoa@c,w
  4235  06D3  1C03               	skipc
  4236  06D4  2ED9               	goto	l604
  4237  06D5  3007               	movlw	7
  4238  06D6  00A7               	movwf	??_utoa
  4239  06D7  0827               	movf	??_utoa,w
  4240  06D8  07AA               	addwf	utoa@c,f
  4241  06D9                     l604:	
  4242  06D9  3030               	movlw	48
  4243  06DA  00A7               	movwf	??_utoa
  4244  06DB  0827               	movf	??_utoa,w
  4245  06DC  07AA               	addwf	utoa@c,f
  4246  06DD  082A               	movf	utoa@c,w
  4247  06DE  00A7               	movwf	??_utoa
  4248  06DF  082B               	movf	utoa@buf,w
  4249  06E0  0086               	movwf	6
  4250  06E1  0187               	clrf	7
  4251  06E2  0827               	movf	??_utoa,w
  4252  06E3  0081               	movwf	1
  4253  06E4  3001               	movlw	1
  4254  06E5  02AB               	subwf	utoa@buf,f
  4255  06E6  0823               	movf	utoa@val,w
  4256  06E7  0424               	iorwf	utoa@val+1,w
  4257  06E8  1D03               	btfss	3,2
  4258  06E9  2EB1               	goto	l2385
  4259                           
  4260                           ;	Return value of _utoa is never used
  4261  06EA  3001               	movlw	1
  4262  06EB  00A7               	movwf	??_utoa
  4263  06EC  0827               	movf	??_utoa,w
  4264  06ED  07AB               	addwf	utoa@buf,f
  4265  06EE  0008               	return
  4266  06EF                     __end_of_utoa:	
  4267                           
  4268                           	psect	text23
  4269  0EFF                     __ptext23:	
  4270 ;; *************** function ___lwmod *****************
  4271 ;; Defined at:
  4272 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  divisor         2    1[COMMON] unsigned int 
  4275 ;;  dividend        2    3[COMMON] unsigned int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  counter         1    6[COMMON] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    1[COMMON] unsigned int 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4287 ;;      Params:         4       0       0       0
  4288 ;;      Locals:         1       0       0       0
  4289 ;;      Temps:          1       0       0       0
  4290 ;;      Totals:         6       0       0       0
  4291 ;;Total ram usage:        6 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_utoa
  4298 ;;		_isleap
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function ___lwmod
  4304  0EFF                     ___lwmod:	
  4305                           
  4306                           ;incstack = 0
  4307                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4308  0EFF  0871               	movf	___lwmod@divisor,w
  4309  0F00  0472               	iorwf	___lwmod@divisor+1,w
  4310  0F01  1903               	btfsc	3,2
  4311  0F02  2F26               	goto	l1655
  4312  0F03  01F6               	clrf	___lwmod@counter
  4313  0F04  0AF6               	incf	___lwmod@counter,f
  4314  0F05                     l1645:	
  4315  0F05  1BF2               	btfsc	___lwmod@divisor+1,7
  4316  0F06  2F11               	goto	l1647
  4317  0F07  3001               	movlw	1
  4318  0F08                     u1665:	
  4319  0F08  35F1               	lslf	___lwmod@divisor,f
  4320  0F09  0DF2               	rlf	___lwmod@divisor+1,f
  4321  0F0A  0B89               	decfsz	9,f
  4322  0F0B  2F08               	goto	u1665
  4323  0F0C  3001               	movlw	1
  4324  0F0D  00F5               	movwf	??___lwmod
  4325  0F0E  0875               	movf	??___lwmod,w
  4326  0F0F  07F6               	addwf	___lwmod@counter,f
  4327  0F10  2F05               	goto	l1645
  4328  0F11                     l1647:	
  4329  0F11  0872               	movf	___lwmod@divisor+1,w
  4330  0F12  0274               	subwf	___lwmod@dividend+1,w
  4331  0F13  1D03               	skipz
  4332  0F14  2F17               	goto	u1685
  4333  0F15  0871               	movf	___lwmod@divisor,w
  4334  0F16  0273               	subwf	___lwmod@dividend,w
  4335  0F17                     u1685:	
  4336  0F17  1C03               	skipc
  4337  0F18  2F1D               	goto	l1651
  4338  0F19  0871               	movf	___lwmod@divisor,w
  4339  0F1A  02F3               	subwf	___lwmod@dividend,f
  4340  0F1B  0872               	movf	___lwmod@divisor+1,w
  4341  0F1C  3BF4               	subwfb	___lwmod@dividend+1,f
  4342  0F1D                     l1651:	
  4343  0F1D  3001               	movlw	1
  4344  0F1E                     u1695:	
  4345  0F1E  36F2               	lsrf	___lwmod@divisor+1,f
  4346  0F1F  0CF1               	rrf	___lwmod@divisor,f
  4347  0F20  0B89               	decfsz	9,f
  4348  0F21  2F1E               	goto	u1695
  4349  0F22  3001               	movlw	1
  4350  0F23  02F6               	subwf	___lwmod@counter,f
  4351  0F24  1D03               	btfss	3,2
  4352  0F25  2F11               	goto	l1647
  4353  0F26                     l1655:	
  4354  0F26  0874               	movf	___lwmod@dividend+1,w
  4355  0F27  00F2               	movwf	?___lwmod+1
  4356  0F28  0873               	movf	___lwmod@dividend,w
  4357  0F29  00F1               	movwf	?___lwmod
  4358  0F2A  0008               	return
  4359  0F2B                     __end_of___lwmod:	
  4360                           
  4361                           	psect	text24
  4362  0F8E                     __ptext24:	
  4363 ;; *************** function ___lwdiv *****************
  4364 ;; Defined at:
  4365 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  divisor         2    7[COMMON] unsigned int 
  4368 ;;  dividend        2    9[COMMON] unsigned int 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  quotient        2    0[BANK0 ] unsigned int 
  4371 ;;  counter         1    2[BANK0 ] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  2    7[COMMON] unsigned int 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4381 ;;      Params:         4       0       0       0
  4382 ;;      Locals:         0       3       0       0
  4383 ;;      Temps:          1       0       0       0
  4384 ;;      Totals:         5       3       0       0
  4385 ;;Total ram usage:        8 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_utoa
  4392 ;;		_months_to_days
  4393 ;;		_years_to_days
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function ___lwdiv
  4399  0F8E                     ___lwdiv:	
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4403  0F8E  0020               	movlb	0	; select bank0
  4404  0F8F  01A0               	clrf	___lwdiv@quotient
  4405  0F90  01A1               	clrf	___lwdiv@quotient+1
  4406  0F91  0877               	movf	___lwdiv@divisor,w
  4407  0F92  0478               	iorwf	___lwdiv@divisor+1,w
  4408  0F93  1903               	btfsc	3,2
  4409  0F94  2FBE               	goto	l1633
  4410  0F95  01A2               	clrf	___lwdiv@counter
  4411  0F96  0AA2               	incf	___lwdiv@counter,f
  4412  0F97                     l1621:	
  4413  0F97  1BF8               	btfsc	___lwdiv@divisor+1,7
  4414  0F98  2FA3               	goto	l1623
  4415  0F99  3001               	movlw	1
  4416  0F9A                     u1595:	
  4417  0F9A  35F7               	lslf	___lwdiv@divisor,f
  4418  0F9B  0DF8               	rlf	___lwdiv@divisor+1,f
  4419  0F9C  0B89               	decfsz	9,f
  4420  0F9D  2F9A               	goto	u1595
  4421  0F9E  3001               	movlw	1
  4422  0F9F  00FB               	movwf	??___lwdiv
  4423  0FA0  087B               	movf	??___lwdiv,w
  4424  0FA1  07A2               	addwf	___lwdiv@counter,f
  4425  0FA2  2F97               	goto	l1621
  4426  0FA3                     l1623:	
  4427  0FA3  3001               	movlw	1
  4428  0FA4                     u1615:	
  4429  0FA4  35A0               	lslf	___lwdiv@quotient,f
  4430  0FA5  0DA1               	rlf	___lwdiv@quotient+1,f
  4431  0FA6  0B89               	decfsz	9,f
  4432  0FA7  2FA4               	goto	u1615
  4433  0FA8  0878               	movf	___lwdiv@divisor+1,w
  4434  0FA9  027A               	subwf	___lwdiv@dividend+1,w
  4435  0FAA  1D03               	skipz
  4436  0FAB  2FAE               	goto	u1625
  4437  0FAC  0877               	movf	___lwdiv@divisor,w
  4438  0FAD  0279               	subwf	___lwdiv@dividend,w
  4439  0FAE                     u1625:	
  4440  0FAE  1C03               	skipc
  4441  0FAF  2FB5               	goto	l1629
  4442  0FB0  0877               	movf	___lwdiv@divisor,w
  4443  0FB1  02F9               	subwf	___lwdiv@dividend,f
  4444  0FB2  0878               	movf	___lwdiv@divisor+1,w
  4445  0FB3  3BFA               	subwfb	___lwdiv@dividend+1,f
  4446  0FB4  1420               	bsf	___lwdiv@quotient,0
  4447  0FB5                     l1629:	
  4448  0FB5  3001               	movlw	1
  4449  0FB6                     u1635:	
  4450  0FB6  36F8               	lsrf	___lwdiv@divisor+1,f
  4451  0FB7  0CF7               	rrf	___lwdiv@divisor,f
  4452  0FB8  0B89               	decfsz	9,f
  4453  0FB9  2FB6               	goto	u1635
  4454  0FBA  3001               	movlw	1
  4455  0FBB  02A2               	subwf	___lwdiv@counter,f
  4456  0FBC  1D03               	btfss	3,2
  4457  0FBD  2FA3               	goto	l1623
  4458  0FBE                     l1633:	
  4459  0FBE  0821               	movf	___lwdiv@quotient+1,w
  4460  0FBF  00F8               	movwf	?___lwdiv+1
  4461  0FC0  0820               	movf	___lwdiv@quotient,w
  4462  0FC1  00F7               	movwf	?___lwdiv
  4463  0FC2  0008               	return
  4464  0FC3                     __end_of___lwdiv:	
  4465                           
  4466                           	psect	text25
  4467  0797                     __ptext25:	
  4468 ;; *************** function _LCD_init *****************
  4469 ;; Defined at:
  4470 ;;		line 181 in file "LCD.h"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4484 ;;      Params:         0       0       0       0
  4485 ;;      Locals:         0       0       0       0
  4486 ;;      Temps:          0       1       0       0
  4487 ;;      Totals:         0       1       0       0
  4488 ;;Total ram usage:        1 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    7
  4491 ;; This function calls:
  4492 ;;		_DELAY
  4493 ;;		_lcd_clear
  4494 ;;		_lcd_info
  4495 ;;		_shift_reg_set_pin_lcd
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function _LCD_init
  4503  0797                     _LCD_init:	
  4504                           
  4505                           ;LCD.h: 183: shift_reg_set_pin_lcd(1, 0);
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  4509  0797  01F6               	clrf	shift_reg_set_pin_lcd@pin_value
  4510  0798  3001               	movlw	1
  4511  0799  318E  261F  3187   	fcall	_shift_reg_set_pin_lcd
  4512                           
  4513                           ;LCD.h: 185: shift_reg_set_pin_lcd(2, 0);
  4514  079C  01F6               	clrf	shift_reg_set_pin_lcd@pin_value
  4515  079D  3002               	movlw	2
  4516  079E  318E  261F  3187   	fcall	_shift_reg_set_pin_lcd
  4517                           
  4518                           ;LCD.h: 188: lcd_info(0x02, 2);
  4519  07A1  3002               	movlw	2
  4520  07A2  0020               	movlb	0	; select bank0
  4521  07A3  00A6               	movwf	??_LCD_init
  4522  07A4  0826               	movf	??_LCD_init,w
  4523  07A5  00FA               	movwf	lcd_info@data_type
  4524  07A6  3002               	movlw	2
  4525  07A7  3185  25C3  3187   	fcall	_lcd_info
  4526                           
  4527                           ;LCD.h: 189: DELAY(10);
  4528  07AA  300A               	movlw	10
  4529  07AB  318C  24E3  3187   	fcall	_DELAY
  4530                           
  4531                           ;LCD.h: 190: lcd_info(0x28, 2);
  4532  07AE  3002               	movlw	2
  4533  07AF  0020               	movlb	0	; select bank0
  4534  07B0  00A6               	movwf	??_LCD_init
  4535  07B1  0826               	movf	??_LCD_init,w
  4536  07B2  00FA               	movwf	lcd_info@data_type
  4537  07B3  3028               	movlw	40
  4538  07B4  3185  25C3  3187   	fcall	_lcd_info
  4539                           
  4540                           ;LCD.h: 191: DELAY(10);
  4541  07B7  300A               	movlw	10
  4542  07B8  318C  24E3  3187   	fcall	_DELAY
  4543                           
  4544                           ;LCD.h: 193: lcd_info(0x06, 2);
  4545  07BB  3002               	movlw	2
  4546  07BC  0020               	movlb	0	; select bank0
  4547  07BD  00A6               	movwf	??_LCD_init
  4548  07BE  0826               	movf	??_LCD_init,w
  4549  07BF  00FA               	movwf	lcd_info@data_type
  4550  07C0  3006               	movlw	6
  4551  07C1  3185  25C3  3187   	fcall	_lcd_info
  4552                           
  4553                           ;LCD.h: 195: lcd_info(0x0C, 2);
  4554  07C4  3002               	movlw	2
  4555  07C5  0020               	movlb	0	; select bank0
  4556  07C6  00A6               	movwf	??_LCD_init
  4557  07C7  0826               	movf	??_LCD_init,w
  4558  07C8  00FA               	movwf	lcd_info@data_type
  4559  07C9  300C               	movlw	12
  4560  07CA  3185  25C3  3187   	fcall	_lcd_info
  4561                           
  4562                           ;LCD.h: 197: lcd_clear();
  4563  07CD  318D  257F  3187   	fcall	_lcd_clear
  4564                           
  4565                           ;LCD.h: 199: lcd_info(0x80, 2);
  4566  07D0  3002               	movlw	2
  4567  07D1  0020               	movlb	0	; select bank0
  4568  07D2  00A6               	movwf	??_LCD_init
  4569  07D3  0826               	movf	??_LCD_init,w
  4570  07D4  00FA               	movwf	lcd_info@data_type
  4571  07D5  3080               	movlw	128
  4572  07D6  3185  25C3  3187   	fcall	_lcd_info
  4573                           
  4574                           ;LCD.h: 200: DELAY(10);
  4575  07D9  300A               	movlw	10
  4576  07DA  318C  24E3         	fcall	_DELAY
  4577  07DC  0008               	return
  4578  07DD                     __end_of_LCD_init:	
  4579                           
  4580                           	psect	text26
  4581  0D7F                     __ptext26:	
  4582 ;; *************** function _lcd_clear *****************
  4583 ;; Defined at:
  4584 ;;		line 133 in file "LCD.h"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4598 ;;      Params:         0       0       0       0
  4599 ;;      Locals:         0       0       0       0
  4600 ;;      Temps:          0       1       0       0
  4601 ;;      Totals:         0       1       0       0
  4602 ;;Total ram usage:        1 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    6
  4605 ;; This function calls:
  4606 ;;		_lcd_goto
  4607 ;;		_lcd_info
  4608 ;; This function is called by:
  4609 ;;		_LCD_init
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _lcd_clear
  4615  0D7F                     _lcd_clear:	
  4616                           
  4617                           ;LCD.h: 136: _y = 1; _x = 1;
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4621  0D7F  0020               	movlb	0	; select bank0
  4622  0D80  01EF               	clrf	__y
  4623  0D81  0AEF               	incf	__y,f
  4624  0D82  01EE               	clrf	__x
  4625  0D83  0AEE               	incf	__x,f
  4626                           
  4627                           ;LCD.h: 137: lcd_info(0x01, 2);
  4628  0D84  3002               	movlw	2
  4629  0D85  00A5               	movwf	??_lcd_clear
  4630  0D86  0825               	movf	??_lcd_clear,w
  4631  0D87  00FA               	movwf	lcd_info@data_type
  4632  0D88  3001               	movlw	1
  4633  0D89  3185  25C3  318D   	fcall	_lcd_info
  4634                           
  4635                           ;LCD.h: 138: lcd_goto(_y, _x);
  4636  0D8C  0020               	movlb	0	; select bank0
  4637  0D8D  086E               	movf	__x,w
  4638  0D8E  00A5               	movwf	??_lcd_clear
  4639  0D8F  0825               	movf	??_lcd_clear,w
  4640  0D90  00A2               	movwf	lcd_goto@p_2
  4641  0D91  086F               	movf	__y,w
  4642  0D92  3187  27DD         	fcall	_lcd_goto
  4643  0D94  0008               	return
  4644  0D95                     __end_of_lcd_clear:	
  4645                           
  4646                           	psect	text27
  4647  07DD                     __ptext27:	
  4648 ;; *************** function _lcd_goto *****************
  4649 ;; Defined at:
  4650 ;;		line 169 in file "LCD.h"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  p_1             1    wreg     unsigned char 
  4653 ;;  p_2             1    2[BANK0 ] unsigned char 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;  p_1             1    4[BANK0 ] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0, pclath, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4665 ;;      Params:         0       1       0       0
  4666 ;;      Locals:         0       1       0       0
  4667 ;;      Temps:          0       1       0       0
  4668 ;;      Totals:         0       3       0       0
  4669 ;;Total ram usage:        3 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    5
  4672 ;; This function calls:
  4673 ;;		_lcd_info
  4674 ;; This function is called by:
  4675 ;;		_lcd_clear
  4676 ;;		_lcd_yaz
  4677 ;;		_main
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function _lcd_goto
  4683  07DD                     _lcd_goto:	
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4687                           ;lcd_goto@p_1 stored from wreg
  4688  07DD  0020               	movlb	0	; select bank0
  4689  07DE  00A4               	movwf	lcd_goto@p_1
  4690                           
  4691                           ;LCD.h: 171: _y = p_1;
  4692  07DF  0824               	movf	lcd_goto@p_1,w
  4693  07E0  00A3               	movwf	??_lcd_goto
  4694  07E1  0823               	movf	??_lcd_goto,w
  4695  07E2  00EF               	movwf	__y
  4696                           
  4697                           ;LCD.h: 172: _x = p_2;
  4698  07E3  0822               	movf	lcd_goto@p_2,w
  4699  07E4  00A3               	movwf	??_lcd_goto
  4700  07E5  0823               	movf	??_lcd_goto,w
  4701  07E6  00EE               	movwf	__x
  4702                           
  4703                           ;LCD.h: 173: if(p_1==1)
  4704  07E7  0324               	decf	lcd_goto@p_1,w
  4705  07E8  1D03               	btfss	3,2
  4706  07E9  2FF3               	goto	l2311
  4707                           
  4708                           ;LCD.h: 174: {lcd_info(0x80+((p_2-1)), 2);
  4709  07EA  3002               	movlw	2
  4710  07EB  00A3               	movwf	??_lcd_goto
  4711  07EC  0823               	movf	??_lcd_goto,w
  4712  07ED  00FA               	movwf	lcd_info@data_type
  4713  07EE  0822               	movf	lcd_goto@p_2,w
  4714  07EF  3E7F               	addlw	127
  4715  07F0  3185  25C3         	fcall	_lcd_info
  4716                           
  4717                           ;LCD.h: 175: }else{
  4718  07F2  0008               	return
  4719  07F3                     l2311:	
  4720                           
  4721                           ;LCD.h: 176: lcd_info(0xC0+((p_2-1)), 2);
  4722  07F3  3002               	movlw	2
  4723  07F4  0020               	movlb	0	; select bank0
  4724  07F5  00A3               	movwf	??_lcd_goto
  4725  07F6  0823               	movf	??_lcd_goto,w
  4726  07F7  00FA               	movwf	lcd_info@data_type
  4727  07F8  0822               	movf	lcd_goto@p_2,w
  4728  07F9  3EBF               	addlw	191
  4729  07FA  3185  25C3         	fcall	_lcd_info
  4730  07FC  0008               	return
  4731  07FD                     __end_of_lcd_goto:	
  4732                           
  4733                           	psect	text28
  4734  05C3                     __ptext28:	
  4735 ;; *************** function _lcd_info *****************
  4736 ;; Defined at:
  4737 ;;		line 76 in file "LCD.h"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  c               1    wreg     unsigned char 
  4740 ;;  data_type       1   10[COMMON] unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  c               1   11[COMMON] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4752 ;;      Params:         1       0       0       0
  4753 ;;      Locals:         1       0       0       0
  4754 ;;      Temps:          0       2       0       0
  4755 ;;      Totals:         2       2       0       0
  4756 ;;Total ram usage:        4 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    4
  4759 ;; This function calls:
  4760 ;;		_DELAY
  4761 ;;		_PCF8574_load_data
  4762 ;;		_shift_reg_set_pin_lcd
  4763 ;; This function is called by:
  4764 ;;		_lcd_clear
  4765 ;;		_lcd_yaz
  4766 ;;		_lcd_goto
  4767 ;;		_LCD_init
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _lcd_info
  4773  05C3                     _lcd_info:	
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _lcd_info: [wreg+status,2+status,0+pclath+cstack]
  4777                           ;lcd_info@c stored from wreg
  4778  05C3  00FB               	movwf	lcd_info@c
  4779                           
  4780                           ;LCD.h: 78: if(data_type == 2)saim =0;
  4781  05C4  3002               	movlw	2
  4782  05C5  067A               	xorwf	lcd_info@data_type,w
  4783  05C6  1D03               	btfss	3,2
  4784  05C7  2DCB               	goto	l162
  4785  05C8  0020               	movlb	0	; select bank0
  4786  05C9  01EA               	clrf	_saim
  4787  05CA  2DCE               	goto	l2275
  4788  05CB                     l162:	
  4789                           
  4790                           ;LCD.h: 79: else saim=1;
  4791  05CB  0020               	movlb	0	; select bank0
  4792  05CC  01EA               	clrf	_saim
  4793  05CD  0AEA               	incf	_saim,f
  4794  05CE                     l2275:	
  4795                           
  4796                           ;LCD.h: 80: shift_reg_set_pin_lcd(1, saim);
  4797  05CE  086A               	movf	_saim,w
  4798  05CF  00A0               	movwf	??_lcd_info
  4799  05D0  0820               	movf	??_lcd_info,w
  4800  05D1  00F6               	movwf	shift_reg_set_pin_lcd@pin_value
  4801  05D2  3001               	movlw	1
  4802  05D3  318E  261F  3185   	fcall	_shift_reg_set_pin_lcd
  4803                           
  4804                           ;LCD.h: 83: shift_reg_set_pin_lcd(2, 1);
  4805  05D6  01F6               	clrf	shift_reg_set_pin_lcd@pin_value
  4806  05D7  0AF6               	incf	shift_reg_set_pin_lcd@pin_value,f
  4807  05D8  3002               	movlw	2
  4808  05D9  318E  261F  3185   	fcall	_shift_reg_set_pin_lcd
  4809                           
  4810                           ;LCD.h: 87: _temp_ = (c&0xF0) >> 1 ;
  4811  05DC  367B               	lsrf	lcd_info@c,w
  4812  05DD  3978               	andlw	120
  4813  05DE  0020               	movlb	0	; select bank0
  4814  05DF  00A0               	movwf	??_lcd_info
  4815  05E0  0820               	movf	??_lcd_info,w
  4816  05E1  00E7               	movwf	__temp_
  4817                           
  4818                           ;LCD.h: 89: LCDData = LCDData & 0x87;
  4819  05E2  087C               	movf	_LCDData,w
  4820  05E3  3987               	andlw	135
  4821  05E4  00A0               	movwf	??_lcd_info
  4822  05E5  0820               	movf	??_lcd_info,w
  4823  05E6  00FC               	movwf	_LCDData
  4824                           
  4825                           ;LCD.h: 90: LCDData |= _temp_;
  4826  05E7  0867               	movf	__temp_,w
  4827  05E8  00A0               	movwf	??_lcd_info
  4828  05E9  0820               	movf	??_lcd_info,w
  4829  05EA  04FC               	iorwf	_LCDData,f
  4830                           
  4831                           ;LCD.h: 96: PCF8574_load_data(LCDData);
  4832  05EB  087C               	movf	_LCDData,w
  4833  05EC  318D  252B  3185   	fcall	_PCF8574_load_data
  4834                           
  4835                           ;LCD.h: 100: DELAY( 4 );
  4836  05EF  3004               	movlw	4
  4837  05F0  318C  24E3  3185   	fcall	_DELAY
  4838                           
  4839                           ;LCD.h: 101: shift_reg_set_pin_lcd(2, 0);
  4840  05F3  01F6               	clrf	shift_reg_set_pin_lcd@pin_value
  4841  05F4  3002               	movlw	2
  4842  05F5  318E  261F  3185   	fcall	_shift_reg_set_pin_lcd
  4843                           
  4844                           ;LCD.h: 104: DELAY(4);
  4845  05F8  3004               	movlw	4
  4846  05F9  318C  24E3  3185   	fcall	_DELAY
  4847                           
  4848                           ;LCD.h: 105: shift_reg_set_pin_lcd(2, 1);
  4849  05FC  01F6               	clrf	shift_reg_set_pin_lcd@pin_value
  4850  05FD  0AF6               	incf	shift_reg_set_pin_lcd@pin_value,f
  4851  05FE  3002               	movlw	2
  4852  05FF  318E  261F  3185   	fcall	_shift_reg_set_pin_lcd
  4853                           
  4854                           ;LCD.h: 107: _temp_ = ((c & 0x0F)<<3) ;
  4855  0602  087B               	movf	lcd_info@c,w
  4856  0603  390F               	andlw	15
  4857  0604  0020               	movlb	0	; select bank0
  4858  0605  00A0               	movwf	??_lcd_info
  4859  0606  3002               	movlw	2
  4860  0607                     u2835:	
  4861  0607  35A0               	lslf	??_lcd_info,f
  4862  0608  3EFF               	addlw	-1
  4863  0609  1D03               	skipz
  4864  060A  2E07               	goto	u2835
  4865  060B  3520               	lslf	??_lcd_info,w
  4866  060C  00A1               	movwf	??_lcd_info+1
  4867  060D  0821               	movf	??_lcd_info+1,w
  4868  060E  00E7               	movwf	__temp_
  4869                           
  4870                           ;LCD.h: 109: LCDData = LCDData & 0x87;
  4871  060F  087C               	movf	_LCDData,w
  4872  0610  3987               	andlw	135
  4873  0611  00A0               	movwf	??_lcd_info
  4874  0612  0820               	movf	??_lcd_info,w
  4875  0613  00FC               	movwf	_LCDData
  4876                           
  4877                           ;LCD.h: 110: LCDData |= _temp_;
  4878  0614  0867               	movf	__temp_,w
  4879  0615  00A0               	movwf	??_lcd_info
  4880  0616  0820               	movf	??_lcd_info,w
  4881  0617  04FC               	iorwf	_LCDData,f
  4882                           
  4883                           ;LCD.h: 116: PCF8574_load_data(LCDData);
  4884  0618  087C               	movf	_LCDData,w
  4885  0619  318D  252B  3185   	fcall	_PCF8574_load_data
  4886                           
  4887                           ;LCD.h: 126: DELAY( 4 );
  4888  061C  3004               	movlw	4
  4889  061D  318C  24E3  3185   	fcall	_DELAY
  4890                           
  4891                           ;LCD.h: 127: shift_reg_set_pin_lcd(2, 0);
  4892  0620  01F6               	clrf	shift_reg_set_pin_lcd@pin_value
  4893  0621  3002               	movlw	2
  4894  0622  318E  261F  3185   	fcall	_shift_reg_set_pin_lcd
  4895                           
  4896                           ;LCD.h: 130: DELAY(10);
  4897  0625  300A               	movlw	10
  4898  0626  318C  24E3         	fcall	_DELAY
  4899  0628  0008               	return
  4900  0629                     __end_of_lcd_info:	
  4901                           
  4902                           	psect	text29
  4903  0E1F                     __ptext29:	
  4904 ;; *************** function _shift_reg_set_pin_lcd *****************
  4905 ;; Defined at:
  4906 ;;		line 26 in file "LCD.h"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  pin_number      1    wreg     unsigned char 
  4909 ;;  pin_value       1    6[COMMON] unsigned char 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  pin_number      1    9[COMMON] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4921 ;;      Params:         1       0       0       0
  4922 ;;      Locals:         1       0       0       0
  4923 ;;      Temps:          2       0       0       0
  4924 ;;      Totals:         4       0       0       0
  4925 ;;Total ram usage:        4 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    3
  4928 ;; This function calls:
  4929 ;;		_PCF8574_load_data
  4930 ;; This function is called by:
  4931 ;;		_lcd_info
  4932 ;;		_LCD_init
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           
  4937                           ;psect for function _shift_reg_set_pin_lcd
  4938  0E1F                     _shift_reg_set_pin_lcd:	
  4939                           
  4940                           ;incstack = 0
  4941                           ; Regs used in _shift_reg_set_pin_lcd: [wreg+status,2+status,0+pclath+cstack]
  4942                           ;shift_reg_set_pin_lcd@pin_number stored from wreg
  4943  0E1F  00F9               	movwf	shift_reg_set_pin_lcd@pin_number
  4944                           
  4945                           ;LCD.h: 29: if(pin_value)
  4946  0E20  0876               	movf	shift_reg_set_pin_lcd@pin_value,w
  4947  0E21  1903               	btfsc	3,2
  4948  0E22  2E2F               	goto	l2267
  4949                           
  4950                           ;LCD.h: 30: {
  4951                           ;LCD.h: 31: LCDData |= 1 << (pin_number);
  4952  0E23  3001               	movlw	1
  4953  0E24  00F7               	movwf	??_shift_reg_set_pin_lcd
  4954  0E25  0A79               	incf	shift_reg_set_pin_lcd@pin_number,w
  4955  0E26  2E28               	goto	u2804
  4956  0E27                     u2805:	
  4957  0E27  35F7               	lslf	??_shift_reg_set_pin_lcd,f
  4958  0E28                     u2804:	
  4959  0E28  0B89               	decfsz	9,f
  4960  0E29  2E27               	goto	u2805
  4961  0E2A  0877               	movf	??_shift_reg_set_pin_lcd,w
  4962  0E2B  00F8               	movwf	??_shift_reg_set_pin_lcd+1
  4963  0E2C  0878               	movf	??_shift_reg_set_pin_lcd+1,w
  4964  0E2D  04FC               	iorwf	_LCDData,f
  4965                           
  4966                           ;LCD.h: 32: }
  4967  0E2E  2E3B               	goto	l2269
  4968  0E2F                     l2267:	
  4969                           
  4970                           ;LCD.h: 33: else LCDData &= ~(1 << (pin_number));
  4971  0E2F  3001               	movlw	1
  4972  0E30  00F7               	movwf	??_shift_reg_set_pin_lcd
  4973  0E31  0A79               	incf	shift_reg_set_pin_lcd@pin_number,w
  4974  0E32  2E34               	goto	u2814
  4975  0E33                     u2815:	
  4976  0E33  35F7               	lslf	??_shift_reg_set_pin_lcd,f
  4977  0E34                     u2814:	
  4978  0E34  0B89               	decfsz	9,f
  4979  0E35  2E33               	goto	u2815
  4980  0E36  0877               	movf	??_shift_reg_set_pin_lcd,w
  4981  0E37  3AFF               	xorlw	255
  4982  0E38  00F8               	movwf	??_shift_reg_set_pin_lcd+1
  4983  0E39  0878               	movf	??_shift_reg_set_pin_lcd+1,w
  4984  0E3A  05FC               	andwf	_LCDData,f
  4985  0E3B                     l2269:	
  4986                           
  4987                           ;LCD.h: 35: PCF8574_load_data(LCDData);
  4988  0E3B  087C               	movf	_LCDData,w
  4989  0E3C  318D  252B         	fcall	_PCF8574_load_data
  4990  0E3E  0008               	return
  4991  0E3F                     __end_of_shift_reg_set_pin_lcd:	
  4992                           
  4993                           	psect	text30
  4994  0D2B                     __ptext30:	
  4995 ;; *************** function _PCF8574_load_data *****************
  4996 ;; Defined at:
  4997 ;;		line 16 in file "PCF8574.h"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  data            1    wreg     unsigned char 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  data            1    5[COMMON] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5011 ;;      Params:         0       0       0       0
  5012 ;;      Locals:         1       0       0       0
  5013 ;;      Temps:          1       0       0       0
  5014 ;;      Totals:         2       0       0       0
  5015 ;;Total ram usage:        2 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    2
  5018 ;; This function calls:
  5019 ;;		_I2C_Start
  5020 ;;		_I2C_Stop
  5021 ;;		_I2C_data_send
  5022 ;; This function is called by:
  5023 ;;		_shift_reg_set_pin_lcd
  5024 ;;		_lcd_info
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function _PCF8574_load_data
  5030  0D2B                     _PCF8574_load_data:	
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in _PCF8574_load_data: [wreg+status,2+status,0+pclath+cstack]
  5034                           ;PCF8574_load_data@data stored from wreg
  5035  0D2B  00F5               	movwf	PCF8574_load_data@data
  5036                           
  5037                           ;PCF8574.h: 18: PCF8574_value = data;
  5038  0D2C  0875               	movf	PCF8574_load_data@data,w
  5039  0D2D  00F4               	movwf	??_PCF8574_load_data
  5040  0D2E  0874               	movf	??_PCF8574_load_data,w
  5041  0D2F  0020               	movlb	0	; select bank0
  5042  0D30  00E6               	movwf	_PCF8574_value
  5043                           
  5044                           ;PCF8574.h: 19: I2C_Start();
  5045  0D31  318C  24B2  318D   	fcall	_I2C_Start
  5046                           
  5047                           ;PCF8574.h: 20: I2C_data_send(0x40);
  5048  0D34  3040               	movlw	64
  5049  0D35  318D  2569  318D   	fcall	_I2C_data_send
  5050                           
  5051                           ;PCF8574.h: 22: I2C_data_send(data);
  5052  0D38  0875               	movf	PCF8574_load_data@data,w
  5053  0D39  318D  2569  318D   	fcall	_I2C_data_send
  5054                           
  5055                           ;PCF8574.h: 24: I2C_Stop();
  5056  0D3C  318C  24B9         	fcall	_I2C_Stop
  5057  0D3E  0008               	return
  5058  0D3F                     __end_of_PCF8574_load_data:	
  5059                           
  5060                           	psect	text31
  5061  0CE3                     __ptext31:	
  5062 ;; *************** function _DELAY *****************
  5063 ;; Defined at:
  5064 ;;		line 6 in file "TimeCounterf1840OnlyLCD.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  milisecond      1    wreg     unsigned char 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  milisecond      1    3[COMMON] unsigned char 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5078 ;;      Params:         0       0       0       0
  5079 ;;      Locals:         1       0       0       0
  5080 ;;      Temps:          2       0       0       0
  5081 ;;      Totals:         3       0       0       0
  5082 ;;Total ram usage:        3 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    1
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_lcd_info
  5089 ;;		_lcd_write
  5090 ;;		_LCD_init
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _DELAY
  5097  0CE3                     _DELAY:	
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in _DELAY: [wreg+status,2+status,0]
  5101                           ;DELAY@milisecond stored from wreg
  5102  0CE3  00F3               	movwf	DELAY@milisecond
  5103  0CE4                     L6:	
  5104                           
  5105                           ;TimeCounterf1840OnlyLCD.c: 8: for(; milisecond >0; milisecond --)
  5106  0CE4  0873               	movf	DELAY@milisecond,w
  5107  0CE5  1903               	btfsc	3,2
  5108  0CE6  0008               	return
  5109                           
  5110                           ;TimeCounterf1840OnlyLCD.c: 9: _delay((unsigned long)((1)*(16000000L/4000.0)));
  5111  0CE7  3006               	movlw	6
  5112  0CE8  00F2               	movwf	??_DELAY+1
  5113  0CE9  3030               	movlw	48
  5114  0CEA  00F1               	movwf	??_DELAY
  5115  0CEB                     u3767:	
  5116  0CEB  0BF1               	decfsz	??_DELAY,f
  5117  0CEC  2CEB               	goto	u3767
  5118  0CED  0BF2               	decfsz	??_DELAY+1,f
  5119  0CEE  2CEB               	goto	u3767
  5120  0CEF  0000               	nop
  5121  0CF0  3001               	movlw	1
  5122  0CF1  02F3               	subwf	DELAY@milisecond,f
  5123  0CF2  2CE4               	goto	L6
  5124  0CF3                     __end_of_DELAY:	
  5125                           
  5126                           	psect	text32
  5127  0D17                     __ptext32:	
  5128 ;; *************** function _I2C_initialize *****************
  5129 ;; Defined at:
  5130 ;;		line 146 in file "I2C.h"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5144 ;;      Params:         0       0       0       0
  5145 ;;      Locals:         0       0       0       0
  5146 ;;      Temps:          2       0       0       0
  5147 ;;      Totals:         2       0       0       0
  5148 ;;Total ram usage:        2 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    1
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_main
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _I2C_initialize
  5160  0D17                     _I2C_initialize:	
  5161                           
  5162                           ;I2C.h: 156: SSPM3 = 1;
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _I2C_initialize: [wreg]
  5166  0D17  0024               	movlb	4	; select bank4
  5167  0D18  1595               	bsf	21,3	;volatile
  5168                           
  5169                           ;I2C.h: 157: SSPM2 = 0;
  5170  0D19  1115               	bcf	21,2	;volatile
  5171                           
  5172                           ;I2C.h: 158: SSPM1 = 0;
  5173  0D1A  1095               	bcf	21,1	;volatile
  5174                           
  5175                           ;I2C.h: 159: SSPM0 = 0;
  5176  0D1B  1015               	bcf	21,0	;volatile
  5177                           
  5178                           ;I2C.h: 191: SSPADD = 79;
  5179  0D1C  304F               	movlw	79
  5180  0D1D  0092               	movwf	18	;volatile
  5181                           
  5182                           ;I2C.h: 197: SSPEN = 1 ;
  5183  0D1E  1695               	bsf	21,5	;volatile
  5184                           
  5185                           ;I2C.h: 198: SSP1IF = 0;
  5186  0D1F  0020               	movlb	0	; select bank0
  5187  0D20  1191               	bcf	17,3	;volatile
  5188                           
  5189                           ;I2C.h: 199: _delay((unsigned long)((5)*(16000000L/4000.0)));
  5190  0D21  301A               	movlw	26
  5191  0D22  00F2               	movwf	??_I2C_initialize+1
  5192  0D23  30F8               	movlw	248
  5193  0D24  00F1               	movwf	??_I2C_initialize
  5194  0D25                     u3777:	
  5195  0D25  0BF1               	decfsz	??_I2C_initialize,f
  5196  0D26  2D25               	goto	u3777
  5197  0D27  0BF2               	decfsz	??_I2C_initialize+1,f
  5198  0D28  2D25               	goto	u3777
  5199  0D29  0000               	nop
  5200  0D2A  0008               	return
  5201  0D2B                     __end_of_I2C_initialize:	
  5202                           
  5203                           	psect	text33
  5204  0CD0                     __ptext33:	
  5205 ;; *************** function _DS1307_time *****************
  5206 ;; Defined at:
  5207 ;;		line 69 in file "DS1307.h"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5221 ;;      Params:         0       0       0       0
  5222 ;;      Locals:         0       0       0       0
  5223 ;;      Temps:          1       0       0       0
  5224 ;;      Totals:         1       0       0       0
  5225 ;;Total ram usage:        1 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    3
  5228 ;; This function calls:
  5229 ;;		_DS1307_shared_get
  5230 ;; This function is called by:
  5231 ;;		_main
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _DS1307_time
  5237  0CD0                     _DS1307_time:	
  5238                           
  5239                           ;DS1307.h: 77: DS1307_shared_get(0, zaman+4);
  5240                           
  5241                           ;incstack = 0
  5242                           ; Regs used in _DS1307_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5243  0CD0  30D1               	movlw	(low ((_zaman| 0+4)))& (0+255)
  5244  0CD1  00FA               	movwf	??_DS1307_time
  5245  0CD2  087A               	movf	??_DS1307_time,w
  5246  0CD3  00F5               	movwf	DS1307_shared_get@reg
  5247  0CD4  3000               	movlw	0
  5248  0CD5  3184  24E1         	fcall	_DS1307_shared_get
  5249  0CD7  0008               	return
  5250  0CD8                     __end_of_DS1307_time:	
  5251                           
  5252                           	psect	text34
  5253  0D3F                     __ptext34:	
  5254 ;; *************** function _DS1307_date *****************
  5255 ;; Defined at:
  5256 ;;		line 81 in file "DS1307.h"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5270 ;;      Params:         0       0       0       0
  5271 ;;      Locals:         0       0       0       0
  5272 ;;      Temps:          1       0       0       0
  5273 ;;      Totals:         1       0       0       0
  5274 ;;Total ram usage:        1 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    3
  5277 ;; This function calls:
  5278 ;;		_DS1307_shared_get
  5279 ;; This function is called by:
  5280 ;;		_main
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           
  5285                           ;psect for function _DS1307_date
  5286  0D3F                     _DS1307_date:	
  5287                           
  5288                           ;DS1307.h: 89: DS1307_shared_get(4, zaman);
  5289                           
  5290                           ;incstack = 0
  5291                           ; Regs used in _DS1307_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5292  0D3F  30CD               	movlw	(low (_zaman| 0))& (0+255)
  5293  0D40  00FA               	movwf	??_DS1307_date
  5294  0D41  087A               	movf	??_DS1307_date,w
  5295  0D42  00F5               	movwf	DS1307_shared_get@reg
  5296  0D43  3004               	movlw	4
  5297  0D44  3184  24E1         	fcall	_DS1307_shared_get
  5298                           
  5299                           ;DS1307.h: 91: zaman[3] = zaman[2];
  5300  0D46  0021               	movlb	1	; select bank1
  5301  0D47  084F               	movf	(_zaman^(0+128)+2),w
  5302  0D48  00FA               	movwf	??_DS1307_date
  5303  0D49  087A               	movf	??_DS1307_date,w
  5304  0D4A  00D0               	movwf	(_zaman^(0+128)+3)
  5305                           
  5306                           ;DS1307.h: 92: zaman[2]= zaman[1];
  5307  0D4B  084E               	movf	(_zaman^(0+128)+1),w
  5308  0D4C  00FA               	movwf	??_DS1307_date
  5309  0D4D  087A               	movf	??_DS1307_date,w
  5310  0D4E  00CF               	movwf	(_zaman^(0+128)+2)
  5311                           
  5312                           ;DS1307.h: 93: zaman[1] = 20;
  5313  0D4F  3014               	movlw	20
  5314  0D50  00FA               	movwf	??_DS1307_date
  5315  0D51  087A               	movf	??_DS1307_date,w
  5316  0D52  00CE               	movwf	(_zaman^(0+128)+1)
  5317  0D53  0008               	return
  5318  0D54                     __end_of_DS1307_date:	
  5319                           
  5320                           	psect	text35
  5321  04E1                     __ptext35:	
  5322 ;; *************** function _DS1307_shared_get *****************
  5323 ;; Defined at:
  5324 ;;		line 36 in file "DS1307.h"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  addr            1    wreg     unsigned char 
  5327 ;;  reg             1    5[COMMON] PTR unsigned char 
  5328 ;;		 -> zaman(7), 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  addr            1    0[BANK0 ] unsigned char 
  5331 ;;  k               1    1[BANK0 ] char 
  5332 ;;  den             1    2[BANK0 ] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5342 ;;      Params:         1       0       0       0
  5343 ;;      Locals:         0       3       0       0
  5344 ;;      Temps:          4       0       0       0
  5345 ;;      Totals:         5       3       0       0
  5346 ;;Total ram usage:        8 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    2
  5349 ;; This function calls:
  5350 ;;		_I2C_SendACK
  5351 ;;		_I2C_SendNACK
  5352 ;;		_I2C_Start
  5353 ;;		_I2C_Stop
  5354 ;;		_I2C_data_receive
  5355 ;;		_I2C_data_send
  5356 ;;		___bmul
  5357 ;; This function is called by:
  5358 ;;		_DS1307_time
  5359 ;;		_DS1307_date
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           
  5364                           ;psect for function _DS1307_shared_get
  5365  04E1                     _DS1307_shared_get:	
  5366                           
  5367                           ;incstack = 0
  5368                           ; Regs used in _DS1307_shared_get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5369                           ;DS1307_shared_get@addr stored from wreg
  5370  04E1  0020               	movlb	0	; select bank0
  5371  04E2  00A0               	movwf	DS1307_shared_get@addr
  5372                           
  5373                           ;DS1307.h: 39: I2C_Start();
  5374  04E3  318C  24B2  3184   	fcall	_I2C_Start
  5375                           
  5376                           ;DS1307.h: 40: I2C_data_send(0b11010000);
  5377  04E6  30D0               	movlw	208
  5378  04E7  318D  2569  3184   	fcall	_I2C_data_send
  5379                           
  5380                           ;DS1307.h: 41: I2C_data_send(addr);
  5381  04EA  0020               	movlb	0	; select bank0
  5382  04EB  0820               	movf	DS1307_shared_get@addr,w
  5383  04EC  318D  2569  3184   	fcall	_I2C_data_send
  5384                           
  5385                           ;DS1307.h: 43: I2C_Stop();
  5386  04EF  318C  24B9  3184   	fcall	_I2C_Stop
  5387                           
  5388                           ;DS1307.h: 45: I2C_Start();
  5389  04F2  318C  24B2  3184   	fcall	_I2C_Start
  5390                           
  5391                           ;DS1307.h: 46: I2C_data_send(0b11010001);
  5392  04F5  30D1               	movlw	209
  5393  04F6  318D  2569  3184   	fcall	_I2C_data_send
  5394                           
  5395                           ;DS1307.h: 47: byte den;
  5396                           ;DS1307.h: 48: for(signed char k=2; k != -1; k--)
  5397  04F9  3002               	movlw	2
  5398  04FA  00F6               	movwf	??_DS1307_shared_get
  5399  04FB  0876               	movf	??_DS1307_shared_get,w
  5400  04FC  0020               	movlb	0	; select bank0
  5401  04FD  00A1               	movwf	DS1307_shared_get@k
  5402  04FE  0A21               	incf	DS1307_shared_get@k,w
  5403  04FF  1903               	btfsc	3,2
  5404  0500  2D50               	goto	l2583
  5405  0501                     l2561:	
  5406                           
  5407                           ;DS1307.h: 49: {
  5408                           ;DS1307.h: 50: den = I2C_data_receive();
  5409  0501  318C  24D8  3184   	fcall	_I2C_data_receive
  5410  0504  00F6               	movwf	??_DS1307_shared_get
  5411  0505  0876               	movf	??_DS1307_shared_get,w
  5412  0506  0020               	movlb	0	; select bank0
  5413  0507  00A2               	movwf	DS1307_shared_get@den
  5414                           
  5415                           ;DS1307.h: 51: if(k == 0 && addr==0)
  5416  0508  0821               	movf	DS1307_shared_get@k,w
  5417  0509  1D03               	btfss	3,2
  5418  050A  2D1E               	goto	l2569
  5419  050B  0820               	movf	DS1307_shared_get@addr,w
  5420  050C  1D03               	btfss	3,2
  5421  050D  2D1E               	goto	l2569
  5422                           
  5423                           ;DS1307.h: 52: {
  5424                           ;DS1307.h: 53: den = ((den>>4)&0b11)*10 + (den&0xf);
  5425  050E  300F               	movlw	15
  5426  050F  0522               	andwf	DS1307_shared_get@den,w
  5427  0510  00F6               	movwf	??_DS1307_shared_get
  5428  0511  300A               	movlw	10
  5429  0512  00F7               	movwf	??_DS1307_shared_get+1
  5430  0513  0877               	movf	??_DS1307_shared_get+1,w
  5431  0514  00F1               	movwf	___bmul@multiplicand
  5432  0515  0822               	movf	DS1307_shared_get@den,w
  5433  0516  00F8               	movwf	??_DS1307_shared_get+2
  5434  0517  3004               	movlw	4
  5435  0518                     u3425:	
  5436  0518  36F8               	lsrf	??_DS1307_shared_get+2,f
  5437  0519  0B89               	decfsz	9,f
  5438  051A  2D18               	goto	u3425
  5439  051B  0878               	movf	??_DS1307_shared_get+2,w
  5440  051C  3903               	andlw	3
  5441  051D  2D2C               	goto	L8
  5442  051E                     l2569:	
  5443                           ;DS1307.h: 54: }
  5444                           
  5445                           
  5446                           ;DS1307.h: 55: else den = (den >>4)*10 + (den&0xf);
  5447  051E  300F               	movlw	15
  5448  051F  0522               	andwf	DS1307_shared_get@den,w
  5449  0520  00F6               	movwf	??_DS1307_shared_get
  5450  0521  300A               	movlw	10
  5451  0522  00F7               	movwf	??_DS1307_shared_get+1
  5452  0523  0877               	movf	??_DS1307_shared_get+1,w
  5453  0524  00F1               	movwf	___bmul@multiplicand
  5454  0525  0822               	movf	DS1307_shared_get@den,w
  5455  0526  00F8               	movwf	??_DS1307_shared_get+2
  5456  0527  3004               	movlw	4
  5457  0528                     u3435:	
  5458  0528  36F8               	lsrf	??_DS1307_shared_get+2,f
  5459  0529  0B89               	decfsz	9,f
  5460  052A  2D28               	goto	u3435
  5461  052B  0878               	movf	??_DS1307_shared_get+2,w
  5462  052C                     L8:	
  5463  052C  318C  24F3  3184   	fcall	___bmul
  5464  052F  0776               	addwf	??_DS1307_shared_get,w
  5465  0530  00F9               	movwf	??_DS1307_shared_get+3
  5466  0531  0879               	movf	??_DS1307_shared_get+3,w
  5467  0532  0020               	movlb	0	; select bank0
  5468  0533  00A2               	movwf	DS1307_shared_get@den
  5469                           
  5470                           ;DS1307.h: 57: reg[k] = den;
  5471  0534  0822               	movf	DS1307_shared_get@den,w
  5472  0535  00F6               	movwf	??_DS1307_shared_get
  5473  0536  0821               	movf	DS1307_shared_get@k,w
  5474  0537  0775               	addwf	DS1307_shared_get@reg,w
  5475  0538  00F7               	movwf	??_DS1307_shared_get+1
  5476  0539  0877               	movf	??_DS1307_shared_get+1,w
  5477  053A  0086               	movwf	6
  5478  053B  0187               	clrf	7
  5479  053C  0876               	movf	??_DS1307_shared_get,w
  5480  053D  0081               	movwf	1
  5481                           
  5482                           ;DS1307.h: 58: if(k!=0)
  5483  053E  0821               	movf	DS1307_shared_get@k,w
  5484  053F  1903               	btfsc	3,2
  5485  0540  2D45               	goto	l2577
  5486                           
  5487                           ;DS1307.h: 60: I2C_SendACK();
  5488  0541  318C  24C0  3184   	fcall	_I2C_SendACK
  5489  0544  2D48               	goto	l2579
  5490  0545                     l2577:	
  5491                           
  5492                           ;DS1307.h: 61: else I2C_SendNACK();
  5493  0545  318C  24C8  3184   	fcall	_I2C_SendNACK
  5494  0548                     l2579:	
  5495  0548  30FF               	movlw	255
  5496  0549  00F6               	movwf	??_DS1307_shared_get
  5497  054A  0876               	movf	??_DS1307_shared_get,w
  5498  054B  0020               	movlb	0	; select bank0
  5499  054C  07A1               	addwf	DS1307_shared_get@k,f
  5500  054D  0A21               	incf	DS1307_shared_get@k,w
  5501  054E  1D03               	btfss	3,2
  5502  054F  2D01               	goto	l2561
  5503  0550                     l2583:	
  5504                           
  5505                           ;DS1307.h: 62: }
  5506                           ;DS1307.h: 64: I2C_Stop();
  5507  0550  318C  24B9         	fcall	_I2C_Stop
  5508  0552  0008               	return
  5509  0553                     __end_of_DS1307_shared_get:	
  5510                           
  5511                           	psect	text36
  5512  0CF3                     __ptext36:	
  5513 ;; *************** function ___bmul *****************
  5514 ;; Defined at:
  5515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  multiplier      1    wreg     unsigned char 
  5518 ;;  multiplicand    1    1[COMMON] unsigned char 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  multiplier      1    4[COMMON] unsigned char 
  5521 ;;  product         1    3[COMMON] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      unsigned char 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5531 ;;      Params:         1       0       0       0
  5532 ;;      Locals:         2       0       0       0
  5533 ;;      Temps:          1       0       0       0
  5534 ;;      Totals:         4       0       0       0
  5535 ;;Total ram usage:        4 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    1
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_DS1307_shared_get
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           
  5546                           ;psect for function ___bmul
  5547  0CF3                     ___bmul:	
  5548                           
  5549                           ;incstack = 0
  5550                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5551                           ;___bmul@multiplier stored from wreg
  5552  0CF3  00F4               	movwf	___bmul@multiplier
  5553  0CF4  01F3               	clrf	___bmul@product
  5554  0CF5                     l2443:	
  5555  0CF5  1C74               	btfss	___bmul@multiplier,0
  5556  0CF6  2CFB               	goto	l2447
  5557  0CF7  0871               	movf	___bmul@multiplicand,w
  5558  0CF8  00F2               	movwf	??___bmul
  5559  0CF9  0872               	movf	??___bmul,w
  5560  0CFA  07F3               	addwf	___bmul@product,f
  5561  0CFB                     l2447:	
  5562  0CFB  1003               	clrc
  5563  0CFC  0DF1               	rlf	___bmul@multiplicand,f
  5564  0CFD  1003               	clrc
  5565  0CFE  0CF4               	rrf	___bmul@multiplier,f
  5566  0CFF  0874               	movf	___bmul@multiplier,w
  5567  0D00  1D03               	btfss	3,2
  5568  0D01  2CF5               	goto	l2443
  5569  0D02  0873               	movf	___bmul@product,w
  5570  0D03  0008               	return
  5571  0D04                     __end_of___bmul:	
  5572                           
  5573                           	psect	text37
  5574  0D69                     __ptext37:	
  5575 ;; *************** function _I2C_data_send *****************
  5576 ;; Defined at:
  5577 ;;		line 236 in file "I2C.h"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  data            1    wreg     unsigned char 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  data            1    3[COMMON] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      void 
  5584 ;; Registers used:
  5585 ;;		wreg
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5591 ;;      Params:         0       0       0       0
  5592 ;;      Locals:         1       0       0       0
  5593 ;;      Temps:          2       0       0       0
  5594 ;;      Totals:         3       0       0       0
  5595 ;;Total ram usage:        3 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_PCF8574_load_data
  5602 ;;		_DS1307_shared_get
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           
  5607                           ;psect for function _I2C_data_send
  5608  0D69                     _I2C_data_send:	
  5609                           
  5610                           ;incstack = 0
  5611                           ; Regs used in _I2C_data_send: [wreg]
  5612                           ;I2C_data_send@data stored from wreg
  5613  0D69  00F3               	movwf	I2C_data_send@data
  5614                           
  5615                           ;I2C.h: 284: SSP1IF = 0;
  5616  0D6A  0020               	movlb	0	; select bank0
  5617  0D6B  1191               	bcf	17,3	;volatile
  5618                           
  5619                           ;I2C.h: 287: SSPBUF = data ;
  5620  0D6C  0873               	movf	I2C_data_send@data,w
  5621  0D6D  0024               	movlb	4	; select bank4
  5622  0D6E  0091               	movwf	17	;volatile
  5623  0D6F                     l109:	
  5624                           ;I2C.h: 289: while (BF);
  5625                           
  5626  0D6F  1814               	btfsc	20,0	;volatile
  5627  0D70  2D6F               	goto	l109
  5628                           
  5629                           ;I2C.h: 290: _delay((unsigned long)((1)*(16000000L/4000.0)));
  5630  0D71  3006               	movlw	6
  5631  0D72  00F2               	movwf	??_I2C_data_send+1
  5632  0D73  3030               	movlw	48
  5633  0D74  00F1               	movwf	??_I2C_data_send
  5634  0D75                     u3787:	
  5635  0D75  0BF1               	decfsz	??_I2C_data_send,f
  5636  0D76  2D75               	goto	u3787
  5637  0D77  0BF2               	decfsz	??_I2C_data_send+1,f
  5638  0D78  2D75               	goto	u3787
  5639  0D79  0000               	nop
  5640  0D7A                     l112:	
  5641                           ;I2C.h: 306: while(SSP1IF ==0){};
  5642                           
  5643  0D7A  0020               	movlb	0	; select bank0
  5644  0D7B  1D91               	btfss	17,3	;volatile
  5645  0D7C  2D7A               	goto	l112
  5646                           
  5647                           ;I2C.h: 307: SSP1IF = 0;
  5648  0D7D  1191               	bcf	17,3	;volatile
  5649  0D7E  0008               	return
  5650  0D7F                     __end_of_I2C_data_send:	
  5651                           
  5652                           	psect	text38
  5653  0CD8                     __ptext38:	
  5654 ;; *************** function _I2C_data_receive *****************
  5655 ;; Defined at:
  5656 ;;		line 222 in file "I2C.h"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;		None
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      unsigned char 
  5663 ;; Registers used:
  5664 ;;		wreg
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5670 ;;      Params:         0       0       0       0
  5671 ;;      Locals:         0       0       0       0
  5672 ;;      Temps:          0       0       0       0
  5673 ;;      Totals:         0       0       0       0
  5674 ;;Total ram usage:        0 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_DS1307_shared_get
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           
  5685                           ;psect for function _I2C_data_receive
  5686  0CD8                     _I2C_data_receive:	
  5687                           
  5688                           ;I2C.h: 224: RCEN = 1;
  5689                           
  5690                           ;incstack = 0
  5691                           ; Regs used in _I2C_data_receive: [wreg]
  5692  0CD8  0024               	movlb	4	; select bank4
  5693  0CD9  1596               	bsf	22,3	;volatile
  5694  0CDA                     l98:	
  5695                           ;I2C.h: 226: while(BF == 0 );
  5696                           
  5697  0CDA  1C14               	btfss	20,0	;volatile
  5698  0CDB  2CDA               	goto	l98
  5699  0CDC                     l101:	
  5700                           ;I2C.h: 227: while(SSP1IF==0);
  5701                           
  5702  0CDC  0020               	movlb	0	; select bank0
  5703  0CDD  1D91               	btfss	17,3	;volatile
  5704  0CDE  2CDC               	goto	l101
  5705                           
  5706                           ;I2C.h: 228: SSP1IF = 0;
  5707  0CDF  1191               	bcf	17,3	;volatile
  5708                           
  5709                           ;I2C.h: 230: return SSPBUF;
  5710  0CE0  0024               	movlb	4	; select bank4
  5711  0CE1  0811               	movf	17,w	;volatile
  5712  0CE2  0008               	return
  5713  0CE3                     __end_of_I2C_data_receive:	
  5714                           
  5715                           	psect	text39
  5716  0CB9                     __ptext39:	
  5717 ;; *************** function _I2C_Stop *****************
  5718 ;; Defined at:
  5719 ;;		line 351 in file "I2C.h"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		None
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5733 ;;      Params:         0       0       0       0
  5734 ;;      Locals:         0       0       0       0
  5735 ;;      Temps:          0       0       0       0
  5736 ;;      Totals:         0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_PCF8574_load_data
  5744 ;;		_DS1307_shared_get
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _I2C_Stop
  5750  0CB9                     _I2C_Stop:	
  5751                           
  5752                           ;I2C.h: 353: PEN = 1;
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _I2C_Stop: []
  5756  0CB9  0024               	movlb	4	; select bank4
  5757  0CBA  1516               	bsf	22,2	;volatile
  5758  0CBB                     l130:	
  5759                           ;I2C.h: 354: while(PEN);
  5760                           
  5761  0CBB  1916               	btfsc	22,2	;volatile
  5762  0CBC  2CBB               	goto	l130
  5763                           
  5764                           ;I2C.h: 356: SSP1IF = 0;
  5765  0CBD  0020               	movlb	0	; select bank0
  5766  0CBE  1191               	bcf	17,3	;volatile
  5767  0CBF  0008               	return
  5768  0CC0                     __end_of_I2C_Stop:	
  5769                           
  5770                           	psect	text40
  5771  0CB2                     __ptext40:	
  5772 ;; *************** function _I2C_Start *****************
  5773 ;; Defined at:
  5774 ;;		line 203 in file "I2C.h"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		None
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5788 ;;      Params:         0       0       0       0
  5789 ;;      Locals:         0       0       0       0
  5790 ;;      Temps:          0       0       0       0
  5791 ;;      Totals:         0       0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_PCF8574_load_data
  5799 ;;		_DS1307_shared_get
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _I2C_Start
  5805  0CB2                     _I2C_Start:	
  5806                           
  5807                           ;I2C.h: 206: SEN = 1;
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in _I2C_Start: []
  5811  0CB2  0024               	movlb	4	; select bank4
  5812  0CB3  1416               	bsf	22,0	;volatile
  5813  0CB4                     l92:	
  5814                           ;I2C.h: 209: while ( SEN);
  5815                           
  5816  0CB4  1816               	btfsc	22,0	;volatile
  5817  0CB5  2CB4               	goto	l92
  5818                           
  5819                           ;I2C.h: 210: SSP1IF = 0;
  5820  0CB6  0020               	movlb	0	; select bank0
  5821  0CB7  1191               	bcf	17,3	;volatile
  5822  0CB8  0008               	return
  5823  0CB9                     __end_of_I2C_Start:	
  5824                           
  5825                           	psect	text41
  5826  0CC8                     __ptext41:	
  5827 ;; *************** function _I2C_SendNACK *****************
  5828 ;; Defined at:
  5829 ;;		line 327 in file "I2C.h"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		None
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5843 ;;      Params:         0       0       0       0
  5844 ;;      Locals:         0       0       0       0
  5845 ;;      Temps:          0       0       0       0
  5846 ;;      Totals:         0       0       0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    1
  5850 ;; This function calls:
  5851 ;;		Nothing
  5852 ;; This function is called by:
  5853 ;;		_DS1307_shared_get
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           
  5858                           ;psect for function _I2C_SendNACK
  5859  0CC8                     _I2C_SendNACK:	
  5860                           
  5861                           ;I2C.h: 329: ACKDT = 1 ;
  5862                           
  5863                           ;incstack = 0
  5864                           ; Regs used in _I2C_SendNACK: []
  5865  0CC8  0024               	movlb	4	; select bank4
  5866  0CC9  1696               	bsf	22,5	;volatile
  5867                           
  5868                           ;I2C.h: 330: ACKEN = 1;
  5869  0CCA  1616               	bsf	22,4	;volatile
  5870  0CCB                     l124:	
  5871                           ;I2C.h: 331: while (ACKEN);
  5872                           
  5873  0CCB  1A16               	btfsc	22,4	;volatile
  5874  0CCC  2CCB               	goto	l124
  5875                           
  5876                           ;I2C.h: 332: SSP1IF = 0;
  5877  0CCD  0020               	movlb	0	; select bank0
  5878  0CCE  1191               	bcf	17,3	;volatile
  5879  0CCF  0008               	return
  5880  0CD0                     __end_of_I2C_SendNACK:	
  5881                           
  5882                           	psect	text42
  5883  0CC0                     __ptext42:	
  5884 ;; *************** function _I2C_SendACK *****************
  5885 ;; Defined at:
  5886 ;;		line 314 in file "I2C.h"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		None
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5900 ;;      Params:         0       0       0       0
  5901 ;;      Locals:         0       0       0       0
  5902 ;;      Temps:          0       0       0       0
  5903 ;;      Totals:         0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    1
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_DS1307_shared_get
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           
  5915                           ;psect for function _I2C_SendACK
  5916  0CC0                     _I2C_SendACK:	
  5917                           
  5918                           ;I2C.h: 321: ACKDT = 0 ;
  5919                           
  5920                           ;incstack = 0
  5921                           ; Regs used in _I2C_SendACK: []
  5922  0CC0  0024               	movlb	4	; select bank4
  5923  0CC1  1296               	bcf	22,5	;volatile
  5924                           
  5925                           ;I2C.h: 322: ACKEN = 1;
  5926  0CC2  1616               	bsf	22,4	;volatile
  5927  0CC3                     l118:	
  5928                           ;I2C.h: 323: while (ACKEN);
  5929                           
  5930  0CC3  1A16               	btfsc	22,4	;volatile
  5931  0CC4  2CC3               	goto	l118
  5932                           
  5933                           ;I2C.h: 324: SSP1IF = 0;
  5934  0CC5  0020               	movlb	0	; select bank0
  5935  0CC6  1191               	bcf	17,3	;volatile
  5936  0CC7  0008               	return
  5937  0CC8                     __end_of_I2C_SendACK:	
  5938                           
  5939                           	psect	text43
  5940  0D04                     __ptext43:	
  5941 ;; *************** function _DELAY100 *****************
  5942 ;; Defined at:
  5943 ;;		line 13 in file "TimeCounterf1840OnlyLCD.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  milisecond      1    wreg     unsigned char 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  milisecond      1    4[COMMON] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5957 ;;      Params:         0       0       0       0
  5958 ;;      Locals:         1       0       0       0
  5959 ;;      Temps:          3       0       0       0
  5960 ;;      Totals:         4       0       0       0
  5961 ;;Total ram usage:        4 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_main
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           
  5972                           ;psect for function _DELAY100
  5973  0D04                     _DELAY100:	
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in _DELAY100: [wreg+status,2+status,0]
  5977                           ;DELAY100@milisecond stored from wreg
  5978  0D04  00F4               	movwf	DELAY100@milisecond
  5979  0D05                     L9:	
  5980                           
  5981                           ;TimeCounterf1840OnlyLCD.c: 15: for(; milisecond >0; milisecond --)
  5982  0D05  0874               	movf	DELAY100@milisecond,w
  5983  0D06  1903               	btfsc	3,2
  5984  0D07  0008               	return
  5985                           
  5986                           ;TimeCounterf1840OnlyLCD.c: 16: _delay((unsigned long)((100)*(16000000L/4000.0)));
  5987  0D08  3003               	movlw	3
  5988  0D09  00F3               	movwf	??_DELAY100+2
  5989  0D0A  3008               	movlw	8
  5990  0D0B  00F2               	movwf	??_DELAY100+1
  5991  0D0C  3078               	movlw	120
  5992  0D0D  00F1               	movwf	??_DELAY100
  5993  0D0E                     u3797:	
  5994  0D0E  0BF1               	decfsz	??_DELAY100,f
  5995  0D0F  2D0E               	goto	u3797
  5996  0D10  0BF2               	decfsz	??_DELAY100+1,f
  5997  0D11  2D0E               	goto	u3797
  5998  0D12  0BF3               	decfsz	??_DELAY100+2,f
  5999  0D13  2D0E               	goto	u3797
  6000  0D14  3001               	movlw	1
  6001  0D15  02F4               	subwf	DELAY100@milisecond,f
  6002  0D16  2D05               	goto	L9
  6003  0D17                     __end_of_DELAY100:	
  6004                           
  6005                           	psect	intentry
  6006  0004                     __pintentry:	
  6007 ;; *************** function _FNC *****************
  6008 ;; Defined at:
  6009 ;;		line 17 in file "INTERRUPT.h"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		None
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6023 ;;      Params:         0       0       0       0
  6024 ;;      Locals:         0       0       0       0
  6025 ;;      Temps:          1       0       0       0
  6026 ;;      Totals:         1       0       0       0
  6027 ;;Total ram usage:        1 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		Interrupt level 1
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036  0004                     _FNC:	
  6037                           
  6038                           ;incstack = 0
  6039                           ; Regs used in _FNC: []
  6040  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6041  0005  3180               	pagesel	$
  6042  0006  0020               	movlb	0	; select bank0
  6043  0007  087F               	movf	127,w
  6044  0008  00F0               	movwf	??_FNC
  6045                           
  6046                           ;INTERRUPT.h: 20: if(TMR1IF)
  6047  0009  1C11               	btfss	17,0	;volatile
  6048  000A  280D               	goto	i1l136
  6049                           
  6050                           ;INTERRUPT.h: 21: {
  6051                           ;INTERRUPT.h: 24: TMR1IF = 0;
  6052  000B  1011               	bcf	17,0	;volatile
  6053                           
  6054                           ;INTERRUPT.h: 25: }
  6055  000C  2810               	goto	i1l139
  6056  000D                     i1l136:	
  6057                           
  6058                           ;INTERRUPT.h: 26: else
  6059                           ;INTERRUPT.h: 27: if(IOCIF == 1)
  6060  000D  1C0B               	btfss	11,0	;volatile
  6061  000E  2810               	goto	i1l139
  6062                           
  6063                           ;INTERRUPT.h: 28: {
  6064                           ;INTERRUPT.h: 31: IOCIF = 0;
  6065  000F  100B               	bcf	11,0	;volatile
  6066  0010                     i1l139:	
  6067  0010  0870               	movf	??_FNC,w
  6068  0011  00FF               	movwf	127
  6069  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6070  0013  0009               	retfie
  6071  0014                     __end_of_FNC:	
  6072  007E                     btemp	set	126	;btemp
  6073  007E                     int$flags	set	126
  6074  007E                     wtemp	set	126
  6075  007E                     wtemp0	set	126
  6076  0080                     wtemp1	set	128
  6077  0082                     wtemp2	set	130
  6078  0084                     wtemp3	set	132
  6079  0086                     wtemp4	set	134
  6080  0088                     wtemp5	set	136
  6081  007F                     wtemp6	set	127
  6082  007E                     ttemp	set	126
  6083  007E                     ttemp0	set	126
  6084  0081                     ttemp1	set	129
  6085  0084                     ttemp2	set	132
  6086  0087                     ttemp3	set	135
  6087  007F                     ttemp4	set	127
  6088  007E                     ltemp	set	126
  6089  007E                     ltemp0	set	126
  6090  0082                     ltemp1	set	130
  6091  0086                     ltemp2	set	134
  6092  0080                     ltemp3	set	128


Data Sizes:
    Strings     5
    Constant    0
    Data        26
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     67      80
    BANK1            80      0      57
    BANK2            80      0      48

Pointer List with Targets:

    mktime@timeptr	PTR struct tm size(1) Largest target is 18
		 -> Time1End(BANK1[18]), Time1Start(BANK1[18]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> number_array(BANK1[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> number_array(BANK1[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> number_array(BANK1[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> number_array(BANK1[5]), 

    DS1307_shared_get@reg	PTR unsigned char  size(1) Largest target is 7
		 -> zaman(BANK1[7]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> number_array(BANK1[5]), 

    lcd_write@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), number_array(BANK1[5]), 


Critical Paths under _main in COMMON

    _ymd_to_scalar->_isleap
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    _isleap->___lwmod
    ___lltoft->___ftpack
    ___lltoft->___lmul
    ___fttol->___lltoft
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftdiv->___lltoft
    _lcd_yaz->_lcd_info
    _utoa->___lwdiv
    ___lwdiv->___wmul
    _LCD_init->_lcd_info
    _lcd_clear->_lcd_info
    _lcd_goto->_lcd_info
    _lcd_info->_shift_reg_set_pin_lcd
    _shift_reg_set_pin_lcd->_PCF8574_load_data
    _PCF8574_load_data->_I2C_data_send
    _DS1307_time->_DS1307_shared_get
    _DS1307_date->_DS1307_shared_get
    _DS1307_shared_get->___bmul

Critical Paths under _FNC in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getTimeDifference
    _getTimeDifference->___altoft
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lmul
    _months_to_days->___lwdiv
    ___lltoft->___lmul
    ___fttol->___ftdiv
    ___ftsub->___ftadd
    ___ftdiv->___lltoft
    ___altoft->_mktime
    _displayTime->_lcd_write_number
    _displayDate->_lcd_write_number
    _lcd_write_number->_itoa
    _lcd_write->_lcd_yaz
    _lcd_yaz->_lcd_goto
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_init->_lcd_clear
    _lcd_clear->_lcd_goto
    _lcd_goto->_lcd_info
    _DS1307_time->_DS1307_shared_get
    _DS1307_date->_DS1307_shared_get

Critical Paths under _FNC in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _FNC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _FNC in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   49905
                                             66 BANK0      1     1      0
                              _DELAY
                           _DELAY100
                        _DS1307_date
                        _DS1307_time
                     _I2C_initialize
                           _LCD_init
                        _displayDate
                        _displayTime
                  _getTimeDifference
                           _lcd_goto
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _getTimeDifference                                    5     5      0   17517
                                             61 BANK0      5     5      0
                           ___altoft
                            ___ftdiv
                            ___ftsub
                            ___fttol
                           ___lltoft
                             ___lmul
                             _mktime
 ---------------------------------------------------------------------------------
 (2) _mktime                                              15    11      4    5113
                                             38 BANK0     15    11      4
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (3) _ymd_to_scalar                                       16    10      6    3877
                                             22 BANK0     16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (4) _years_to_days                                       18    14      4    1667
                                              4 BANK0     18    14      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     786
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _months_to_days                                       2     0      2     965
                                              3 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     198
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _isleap                                               5     3      2     620
                                              7 COMMON     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2300
                                              9 COMMON     2     2      0
                                              4 BANK0      4     0      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             24 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3649
                                             10 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3423
                                              9 COMMON     3     3      0
                                              0 BANK0     10     4      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2618
                                              8 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2337
                                             53 BANK0      8     4      4
                           ___ftpack
                             _mktime (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2068
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _displayTime                                          3     3      0    9643
                                             21 BANK0      3     3      0
                   _lcd_write_number
                            _lcd_yaz
 ---------------------------------------------------------------------------------
 (1) _displayDate                                          3     3      0    9643
                                             21 BANK0      3     3      0
                   _lcd_write_number
                            _lcd_yaz
 ---------------------------------------------------------------------------------
 (2) _lcd_write_number                                     2     0      2    6048
                                             19 BANK0      2     0      2
                               _itoa
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_write                                            3     1      2    3725
                                              7 BANK0      3     1      2
                              _DELAY
                            _lcd_yaz
 ---------------------------------------------------------------------------------
 (2) _lcd_yaz                                              2     2      0    3465
                                              5 BANK0      2     2      0
                           _lcd_goto
                           _lcd_info
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 7     3      4    2162
                                             12 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     5      4    1769
                                              3 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     477
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     692
                                              7 COMMON     5     1      4
                                              0 BANK0      3     3      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0    5617
                                              6 BANK0      1     1      0
                              _DELAY
                          _lcd_clear
                           _lcd_info
              _shift_reg_set_pin_lcd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0    3434
                                              5 BANK0      1     1      0
                           _lcd_goto
                           _lcd_info
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             3     2      1    1957
                                              2 BANK0      3     2      1
                           _lcd_info
 ---------------------------------------------------------------------------------
 (3) _lcd_info                                             4     3      1    1477
                                             10 COMMON     2     1      1
                                              0 BANK0      2     2      0
                              _DELAY
                  _PCF8574_load_data
              _shift_reg_set_pin_lcd
 ---------------------------------------------------------------------------------
 (4) _shift_reg_set_pin_lcd                                4     3      1     641
                                              6 COMMON     4     3      1
                  _PCF8574_load_data
 ---------------------------------------------------------------------------------
 (5) _PCF8574_load_data                                    2     2      0      93
                                              4 COMMON     2     2      0
                          _I2C_Start
                           _I2C_Stop
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (4) _DELAY                                                3     3      0      65
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_initialize                                       2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DS1307_time                                          1     1      0     845
                                             10 COMMON     1     1      0
                  _DS1307_shared_get
 ---------------------------------------------------------------------------------
 (1) _DS1307_date                                          1     1      0     845
                                             10 COMMON     1     1      0
                  _DS1307_shared_get
 ---------------------------------------------------------------------------------
 (2) _DS1307_shared_get                                    8     7      1     845
                                              5 COMMON     5     4      1
                                              0 BANK0      3     3      0
                        _I2C_SendACK
                       _I2C_SendNACK
                          _I2C_Start
                           _I2C_Stop
                   _I2C_data_receive
                      _I2C_data_send
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     266
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _I2C_data_send                                        3     3      0      31
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _I2C_data_receive                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_SendNACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_SendACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DELAY100                                             4     4      0      45
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _FNC                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY
   _DELAY100
   _DS1307_date
     _DS1307_shared_get
       _I2C_SendACK
       _I2C_SendNACK
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
       ___bmul
   _DS1307_time
     _DS1307_shared_get
       _I2C_SendACK
       _I2C_SendNACK
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
       ___bmul
   _I2C_initialize
   _LCD_init
     _DELAY
     _lcd_clear
       _lcd_goto
         _lcd_info
           _DELAY
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
           _shift_reg_set_pin_lcd
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
       _lcd_info
         _DELAY
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
         _shift_reg_set_pin_lcd
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
     _lcd_info
       _DELAY
       _PCF8574_load_data
         _I2C_Start
         _I2C_Stop
         _I2C_data_send
       _shift_reg_set_pin_lcd
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
     _shift_reg_set_pin_lcd
       _PCF8574_load_data
         _I2C_Start
         _I2C_Stop
         _I2C_data_send
   _displayDate
     _lcd_write_number
       _itoa
         _utoa
           ___lwdiv
             ___wmul (ARG)
           ___lwmod
       _lcd_write
         _DELAY
         _lcd_yaz
           _lcd_goto
             _lcd_info
               _DELAY
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
               _shift_reg_set_pin_lcd
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
           _lcd_info
             _DELAY
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
             _shift_reg_set_pin_lcd
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_yaz
       _lcd_goto
         _lcd_info
           _DELAY
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
           _shift_reg_set_pin_lcd
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
       _lcd_info
         _DELAY
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
         _shift_reg_set_pin_lcd
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
   _displayTime
     _lcd_write_number
       _itoa
         _utoa
           ___lwdiv
             ___wmul (ARG)
           ___lwmod
       _lcd_write
         _DELAY
         _lcd_yaz
           _lcd_goto
             _lcd_info
               _DELAY
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
               _shift_reg_set_pin_lcd
                 _PCF8574_load_data
                   _I2C_Start
                   _I2C_Stop
                   _I2C_data_send
           _lcd_info
             _DELAY
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
             _shift_reg_set_pin_lcd
               _PCF8574_load_data
                 _I2C_Start
                 _I2C_Stop
                 _I2C_data_send
     _lcd_yaz
       _lcd_goto
         _lcd_info
           _DELAY
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
           _shift_reg_set_pin_lcd
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
       _lcd_info
         _DELAY
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
         _shift_reg_set_pin_lcd
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
   _getTimeDifference
     ___altoft
       ___ftpack
       _mktime (ARG)
         ___lmul
         _ymd_to_scalar
           _isleap
             ___lwmod
           _months_to_days
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _years_to_days
             ___lmul
             ___lwdiv
               ___wmul (ARG)
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
     ___ftsub
       ___ftadd
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _mktime
       ___lmul
       _ymd_to_scalar
         _isleap
           ___lwmod
         _months_to_days
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _years_to_days
           ___lmul
           ___lwdiv
             ___wmul (ARG)
   _lcd_goto
     _lcd_info
       _DELAY
       _PCF8574_load_data
         _I2C_Start
         _I2C_Stop
         _I2C_data_send
       _shift_reg_set_pin_lcd
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
   _lcd_write
     _DELAY
     _lcd_yaz
       _lcd_goto
         _lcd_info
           _DELAY
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send
           _shift_reg_set_pin_lcd
             _PCF8574_load_data
               _I2C_Start
               _I2C_Stop
               _I2C_data_send
       _lcd_info
         _DELAY
         _PCF8574_load_data
           _I2C_Start
           _I2C_Stop
           _I2C_data_send
         _shift_reg_set_pin_lcd
           _PCF8574_load_data
             _I2C_Start
             _I2C_Stop
             _I2C_data_send

 _FNC (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      39       8       71.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      30      10       60.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      C6      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jan 07 00:37:02 2020

                   ___altoft@exp 005B                    _years_to_days 0553                     ?_displayDate 0070  
                 ___bmul@product 0073                     ?_displayTime 0070               __size_of_I2C_Start 0007  
                  ___altoft@sign 005C                               _BF 10A0                               l92 0CB4  
                             l98 0CDA              months_to_days@month 0023                               __x 006E  
                             __y 006F              ___wmul@multiplicand 0073                     ___ftadd@exp1 007B  
                   ___ftadd@exp2 007A                     ___ftadd@sign 0079                              l101 0CDC  
                            l112 0D7A                              l130 0CBB                              l124 0CCB  
                            l109 0D6F                              l118 0CC3                              l162 05CB  
                            l505 066E                              l337 0DD0                              l506 0676  
                            l604 06D9                              l529 035A                              l719 072A  
                            l498 065B                              l589 04C7                              _GIE 005F  
                            _FNC 0004                              _PEN 10B2                              _SEN 10B0  
                    _unnecessary 006D                              _t_i 006C             __size_of_I2C_SendACK 0008  
                    lcd_goto@p_1 0024                      lcd_goto@p_2 0022                              wreg 0009  
                           ?_FNC 0070                     ___ftdiv@cntr 0032                     ___ftdiv@sign 0037  
                           l2027 0473                             l2053 04BE                             l2045 04A3  
                           l2311 07F3                             l2055 04CA                             l2047 04B1  
                           l2059 04D8                             l2315 0F65                             l1621 0F97  
                           l2501 034C                             l1623 0FA3                             l2351 0642  
                           l2511 037E                             l2503 0356                             l2319 0F70  
                           l1633 0FBE                             l2425 0DAD                             l2361 0668  
                           l2353 0647                             l2345 0631                             l2521 0399  
                           l2443 0CF5                             l2267 0E2F                             l2275 05CE  
                           l1651 0F1D                             l2339 0E80                             l2507 036C  
                           l2269 0E3B                             l1629 0FB5                             l1645 0F05  
                           l2437 0E57                             l2349 0638                             l2461 02E3  
                           l2533 0714                             l2447 0CFB                             l1647 0F11  
                           l1655 0F26                             l2375 0693                             l2703 0ECE  
                           l2359 0660                             l2615 0FD8                             l2471 02F9  
                           l1743 0F53                             l2561 0501                             l2385 06B1  
                           l2617 0FE8                             l2633 03DE                             l2465 02EA  
                           l1745 0F54                             l1585 0DCA                             l2627 03C8  
                           l2491 0330                             l2483 0313                             l2493 0335  
                           l2813 0775                             l2583 0550                             l2719 0EA8  
                           l2655 0438                             l2647 041F                             l2495 0339  
                           l2591 01CC                             l2577 0545                             l2569 051E  
                           l2489 0326                             l2753 00CF                             l2579 0548  
                           l2667 0DEB                             l2675 0ED8                             l2763 0183  
                           l2677 0EEA                             l2589 01C3                             l2769 0197  
                           STR_1 07FD                             u3015 067D                             u1515 0DD1  
                           u1525 0DD6                             u1615 0FA4                             u1625 0FAE  
                           u1635 0FB6                             u3235 0314                             u3325 034D  
                           u2525 04BF                             u3425 0518                             u1665 0F08  
                           u3265 0327                             u2465 047A                      main@counter 0062  
                           u3435 0528                             u1595 0F9A                             u2804 0E28  
                           u2805 0E27                             u1685 0F17                             u3605 0EDE  
                           u2814 0E34                             u2815 0E33                             u1695 0F1E  
                           u3535 03F0                             u3295 033A                             u2495 04A4  
                           u3545 0400                             u3465 01AD                             u3705 0104  
                           u2835 0607                             u3555 0420                             u3475 01C1  
                           u3715 0118                             _PEIE 005E                             u3565 042F  
                           u3725 012C                             u2935 063D                             u3495 0FDD  
                           u3575 0439                             u3735 0140                             u2865 0F71  
                           u2955 0656                             u2875 0F78                             _RCEN 10B3  
                           u3767 0CEB                             u2975 0663                             u3695 00D8  
                           u3777 0D25                             _SCS0 04C8                             u3787 0D75  
                           _SCS1 04C9                             u3797 0D0E                             _main 0746  
                   ___ftpack@arg 0071                             _saat 0069                             _itoa 0E3F  
                           _saim 006A                     ___ftpack@exp 0074                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           _utoa 068D                 __end_of_DELAY100 0D17                 __end_of_I2C_Stop 0CC0  
          __size_of_I2C_SendNACK 0008                             ltemp 007E                             start 0014  
                           ttemp 007E                             wtemp 007E                 ??_I2C_initialize 0071  
              ___bmul@multiplier 0074                   ?_years_to_days 0024                            ??_FNC 0070  
                   ___fttol@exp1 0045                     ___fttol@lval 0041                 __end_of_LCD_init 07DD  
     __size_of_getTimeDifference 0154                            ?_main 0070           __size_of_ymd_to_scalar 0057  
                          _ACKEN 10B4                            _ACKDT 10B5                            ?_itoa 002C  
                __end_of___ftadd 03B1                            _DELAY 0CE3                  __end_of___ftdiv 045A  
                          ?_utoa 0023                  __end_of___ftsub 0E01                  __end_of___fttol 04E1  
                          _IRCF0 04CB                            _IRCF1 04CC                            _IRCF2 04CD  
                          _IRCF3 04CE                            _IOCIF 0058                  __end_of___lwdiv 0FC3  
                          i1l136 000D                            i1l139 0010                  __end_of___lwmod 0F2B  
                          _PORTA 000C                            _SSPM0 10A8                            _SSPM1 10A9  
                          _SSPM2 10AA                            _SSPM3 10AB                            _SSPEN 10AD  
            ___lmul@multiplicand 0075                     ___lltoft@exp 007A                     displayDate@c 0037  
                __end_of_lcd_yaz 0E88                            _diffs 00A0                     _I2C_SendNACK 0CC8  
                  ___ftpack@sign 0075                            _zaman 00CD                     displayTime@c 0037  
              __end_of_I2C_Start 0CB9                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                 ymd_to_scalar@day 003A  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            utoa@c 002A  
                          utoa@v 0028                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
                years_to_days@yr 0024                  DELAY@milisecond 0073                  __initialization 0016  
                   __end_of_main 0797                     __end_of_itoa 0E63                     __end_of_utoa 06EF  
                         ??_main 007C                    ___fttol@sign1 0040                           ??_itoa 0030  
                         ?_DELAY 0070                           ??_utoa 0027        __size_of_I2C_data_receive 000B  
               __end_of___altoft 1000                           _ANSELA 018C                 __end_of___ftpack 068D  
                     _Time1Start 00BB                 __end_of___lltoft 0EFF          ??_shift_reg_set_pin_lcd 0077  
                         _TMR1IF 0088                    _ymd_to_scalar 06EF                           _SSP1IF 008B  
                         _SPLLEN 04CF                           _SSPADD 0212                           _TRISA0 0460  
                         _TRISA1 0461                           _TRISA2 0462                           _TRISA3 0463  
                         _TRISA4 0464                           _TRISA5 0465                           _SSPBUF 0211  
                ??_years_to_days 0028           __size_of_I2C_data_send 0016                 __end_of_lcd_info 0629  
               __end_of_lcd_goto 07FD                           ___bmul 0CF3                           ___lmul 0F5C  
                         ___wmul 0DC8                        ??___ftadd 0026                           _dakika 0068  
                      ??___ftdiv 002E                        ??___ftsub 007C                        ??___fttol 003C  
                         __temp_ 0067                        ??___lwdiv 007B                        ??___lwmod 0075  
              _DS1307_shared_get 04E1               getTimeDifference@i 0061         __end_of_lcd_write_number 0D69  
                         _isleap 0F2B                           _mktime 019A                           _saniye 006B  
           __size_of_displayDate 0026               ?_DS1307_shared_get 0075             __size_of_displayTime 0026  
                      ??_lcd_yaz 0025                           itoa@cp 0031            PCF8574_load_data@data 0075  
                      ?_DELAY100 0070                        ?_I2C_Stop 0070              ??_DS1307_shared_get 0076  
             DELAY100@milisecond 0074                   ?_ymd_to_scalar 0036          __end_of__initialization 0042  
                     ___altoft@c 0055                       ___ftadd@f1 0020                       ___ftadd@f2 0023  
                      ?_LCD_init 0070                    __end_of_DELAY 0CF3                       ___ftdiv@f1 002B  
                     ___ftdiv@f2 0028                       ___ftdiv@f3 0033              ___bmul@multiplicand 0071  
                     ___ftsub@f1 002D                       ___ftsub@f2 002A                       ___fttol@f1 0038  
                 __pcstackCOMMON 0070        __end_of_DS1307_shared_get 0553                     __pidataBANK0 0002  
                   __pidataBANK2 0D95                       ___lltoft@c 0024                          ??_DELAY 0071  
                     ??_DELAY100 0071                    _I2C_data_send 0D69                       ??_I2C_Stop 0071  
        __size_of_months_to_days 001E               __size_of_lcd_clear 0016               __size_of_lcd_write 001B  
                     __pbssBANK0 0063                       __pbssBANK1 00A0                       __pbssBANK2 0120  
                  ??_DS1307_date 007A                    ??_DS1307_time 007A                       ??_LCD_init 0026  
                     _difference 0120                       __pmaintext 0746                          ?___bmul 0071  
                        ?___lmul 0071                          ?___wmul 0071                       __pintentry 0004  
                      ?___altoft 0055                          ?_isleap 0077                   ___lmul@product 0020  
                        ?_mktime 0046                        ?___ftpack 0071                    ??_I2C_SendACK 0071  
                      ?___lltoft 0024  shift_reg_set_pin_lcd@pin_number 0079                          _LCDData 007C  
                 ?_I2C_data_send 0070                 _I2C_data_receive 0CD8                  ??_ymd_to_scalar 003C  
                      ?_lcd_info 007A                        ?_lcd_goto 0022                _PCF8574_load_data 0D2B  
 shift_reg_set_pin_lcd@pin_value 0076               ?_PCF8574_load_data 0070                        _I2C_Start 0CB2  
            __end_of_DS1307_date 0D54                __end_of_lcd_clear 0D95              __end_of_DS1307_time 0CD8  
            ??_PCF8574_load_data 0074       __size_of_DS1307_shared_get 0072                  __size_of___bmul 0011  
                __size_of___lmul 0032                          ___ftadd 02BB                          ___ftdiv 03B1  
              __end_of_lcd_write 0DC8                  __size_of___wmul 001B                          ___ftsub 0DE3  
                        ___fttol 045A                          ___lwdiv 0F8E                          ___lwmod 0EFF  
                     _isleap$459 007B                       ??___altoft 0059                       ??___ftpack 0076  
                __size_of_isleap 0031                  __size_of_mktime 0121                       ??___lltoft 0079  
                        __ptext1 0046                          __ptext2 019A                          __ptext3 06EF  
                        __ptext4 0553                          __ptext5 0F5C                          __ptext6 0E01  
                        __ptext7 0DC8                          __ptext8 0F2B                          __ptext9 0ED4  
                        _lcd_yaz 0E63                     __size_of_FNC 0010                    mktime@timeptr 0054  
                        _seconds 0063              __end_of_I2C_SendACK 0CC8        __end_of_PCF8574_load_data 0D3F  
                        clrloop0 0CAD                       ??_lcd_info 0020                       ??_lcd_goto 0023  
           end_of_initialization 0042                          itoa@buf 0032                          init_ram 0CA6  
                        itoa@val 002C                          initloop 0CA7   __size_of_shift_reg_set_pin_lcd 0020  
  __end_of_shift_reg_set_pin_lcd 0E3F                       ?_I2C_Start 0070                     __pstringtext 07FD  
                        utoa@buf 002B                       _time_array 00A6                          utoa@val 0023  
              ?_lcd_write_number 0033                  ??_I2C_data_send 0071               DS1307_shared_get@k 0021  
        __size_of_I2C_initialize 0014               ??_lcd_write_number 007C           lcd_write_number@number 0033  
                 _months_to_days 0E01                __size_of_DELAY100 0013                __size_of_I2C_Stop 0007  
                    _DS1307_date 0D3F                      _DS1307_time 0CD0                      ___ftdiv@exp 0036  
                     lcd_write@s 0027                __size_of_LCD_init 0046            __end_of_years_to_days 05C3  
                  ??_displayDate 0035                    ??_displayTime 0035                   __end_of___bmul 0D04  
                 __end_of___lmul 0F8E                   __end_of___wmul 0DE3                      _I2C_SendACK 0CC0  
                 __end_of_isleap 0F5C           __end_of_months_to_days 0E1F                   __end_of_mktime 02BB  
              lcd_info@data_type 007A                  ymd_to_scalar@mo 0038                  ymd_to_scalar@yr 0036  
            start_initialization 0016                      __end_of_FNC 0014       __size_of_PCF8574_load_data 0014  
                    ??_I2C_Start 0071         __end_of_I2C_data_receive 0CE3                         ??___bmul 0072  
                       ??___lmul 0079                         ??___wmul 0075                      __pdataBANK0 006E  
                    __pdataBANK2 0138                         ??_isleap 0079                         ??_mktime 004A  
                ?_months_to_days 0023                __size_of___altoft 003D              __end_of_displayDate 0EAE  
              __size_of___ftpack 0064              __end_of_displayTime 0ED4                __size_of___lltoft 002B  
                    __pbssCOMMON 007C                        ___latbits 0001                    __pcstackBANK0 0020  
                  ?_I2C_SendNACK 0070                __size_of_lcd_info 0066                __size_of_lcd_goto 0020  
               ___lwdiv@dividend 0079                         ?___ftadd 0020                         ?___ftdiv 0028  
                       ?___ftsub 002A                         ?___fttol 0038                         ?___lwdiv 0077  
                       ?___lwmod 0071                        _lcd_clear 0D7F                   _I2C_initialize 0D17  
                      _lcd_write 0DAD                         ?_lcd_yaz 0070                        _divisions 0138  
                 __size_of_DELAY 0010                         _DELAY100 0D04                         _I2C_Stop 0CB9  
                 ??_I2C_SendNACK 0071                 ___lwdiv@quotient 0020                    _PCF8574_value 0066  
          __end_of_ymd_to_scalar 0746                   ___wmul@product 0075                         _LCD_init 0797  
                      clear_ram0 0CAC                      _displayDate 0E88                      _displayTime 0EAE  
         __end_of_I2C_initialize 0D2B                       ?_lcd_clear 0070                       ?_lcd_write 0027  
              ___wmul@multiplier 0071                        lcd_info@c 007B                I2C_data_send@data 0073  
              ___lmul@multiplier 0071        __size_of_lcd_write_number 0015                     ?_DS1307_date 0070  
                   ?_DS1307_time 0070                         _Time1End 00A9            _shift_reg_set_pin_lcd 0E1F  
               __size_of___ftadd 00F6                  ?_I2C_initialize 0070                 __size_of___ftdiv 00A9  
                       ___altoft 0FC3                 __size_of___ftsub 001E                 __size_of___fttol 0087  
               __size_of___lwdiv 0035                 __size_of___lwmod 002C                         ___ftpack 0629  
                   ?_I2C_SendACK 0070                         ___lltoft 0ED4            __end_of_I2C_data_send 0D7F  
               __size_of_lcd_yaz 0025                  ___lwdiv@divisor 0077                  ___lwdiv@counter 0022  
                       __ptext10 045A                         __ptext11 0DE3                         __ptext20 0E63  
                       __ptext12 02BB                         __ptext21 0E3F                         __ptext13 03B1  
                       __ptext30 0D2B                         __ptext22 068D                         __ptext14 0FC3  
                       __ptext31 0CE3                         __ptext23 0EFF                         __ptext15 0629  
                       __ptext40 0CB2                         __ptext32 0D17                         __ptext24 0F8E  
                       __ptext16 0EAE                         __ptext41 0CC8                         __ptext33 0CD0  
                       __ptext25 0797                         __ptext17 0E88                         __ptext42 0CC0  
                       __ptext34 0D3F                         __ptext26 0D7F                         __ptext18 0D54  
                       __ptext43 0D04                         __ptext35 04E1                         __ptext27 07DD  
                       __ptext19 0DAD                         __ptext36 0CF3                         __ptext28 05C3  
                       __ptext37 0D69                         __ptext29 0E1F                         __ptext38 0CD8  
                       __ptext39 0CB9                         _lcd_info 05C3                         _lcd_goto 07DD  
                  __size_of_main 0051                    __size_of_itoa 0024                    __size_of_utoa 0062  
              ?_I2C_data_receive 0070               ??_I2C_data_receive 0071             __end_of_I2C_SendNACK 0CD0  
                       int$flags 007E                 ??_months_to_days 007C                      ??_lcd_clear 0025  
                       lcd_yaz@s 0026                      ??_lcd_write 0029            DS1307_shared_get@addr 0020  
              _getTimeDifference 0046               ?_getTimeDifference 0070                         itoa@base 002E  
         __size_of_years_to_days 0070                         isleap@yr 0077                         intlevel1 0000  
                   _number_array 00D4              ??_getTimeDifference 005D                 ___lwmod@dividend 0073  
                       mktime@tt 0050           ?_shift_reg_set_pin_lcd 0076              ymd_to_scalar@scalar 0042  
              _ymd_to_scalar$471 0040             DS1307_shared_get@den 0022             DS1307_shared_get@reg 0075  
      __end_of_getTimeDifference 019A                         utoa@base 0025                  ___lwmod@divisor 0071  
                ___lwmod@counter 0076                 _lcd_write_number 0D54             __size_of_DS1307_date 0015  
           __size_of_DS1307_time 0008  
