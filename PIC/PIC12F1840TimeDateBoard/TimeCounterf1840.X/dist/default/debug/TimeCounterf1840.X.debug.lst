

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Oct 19 11:19:17 2019

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011D                     	;# 
   109  018C                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0391                     	;# 
   156  0392                     	;# 
   157  0393                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0FE4                     	;# 
   164  0FE5                     	;# 
   165  0FE6                     	;# 
   166  0FE7                     	;# 
   167  0FE8                     	;# 
   168  0FE9                     	;# 
   169  0FEA                     	;# 
   170  0FEB                     	;# 
   171  0FED                     	;# 
   172  0FEE                     	;# 
   173  0FEF                     	;# 
   174                           
   175                           	psect	idataBANK2
   176  0E4E                     __pidataBANK2:	
   177                           
   178                           ;initializer for _divisions
   179  0E4E  3400               	retlw	0
   180  0E4F  349C               	retlw	156
   181  0E50  34FF               	retlw	255
   182  0E51  34FF               	retlw	255
   183  0E52  3400               	retlw	0
   184  0E53  348D               	retlw	141
   185  0E54  34FF               	retlw	255
   186  0E55  34FF               	retlw	255
   187  0E56  3480               	retlw	128
   188  0E57  3451               	retlw	81
   189  0E58  3400               	retlw	0
   190  0E59  3400               	retlw	0
   191  0E5A  3410               	retlw	16
   192  0E5B  340E               	retlw	14
   193  0E5C  3400               	retlw	0
   194  0E5D  3400               	retlw	0
   195  0E5E  343C               	retlw	60
   196  0E5F  3400               	retlw	0
   197  0E60  3400               	retlw	0
   198  0E61  3400               	retlw	0
   199  0E62  3401               	retlw	1
   200  0E63  3400               	retlw	0
   201  0E64  3400               	retlw	0
   202  0E65  3400               	retlw	0
   203                           
   204                           ;initializer for _rakamlar
   205  0E66  34C0               	retlw	192
   206  0E67  34F9               	retlw	249
   207  0E68  34A4               	retlw	164
   208  0E69  34B0               	retlw	176
   209  0E6A  3499               	retlw	153
   210  0E6B  3492               	retlw	146
   211  0E6C  3482               	retlw	130
   212  0E6D  34F8               	retlw	248
   213  0E6E  3480               	retlw	128
   214  0E6F  3490               	retlw	144
   215  0016                     _TMR1	set	22
   216  000C                     _PORTA	set	12
   217  0017                     _TMR1H	set	23
   218  0016                     _TMR1L	set	22
   219  0094                     _EEIF	set	148
   220  005F                     _GIE	set	95
   221  005B                     _IOCIE	set	91
   222  0058                     _IOCIF	set	88
   223  005E                     _PEIE	set	94
   224  0060                     _RA0	set	96
   225  0064                     _RA4	set	100
   226  0065                     _RA5	set	101
   227  008B                     _SSP1IF	set	139
   228  00C4                     _T1CKPS0	set	196
   229  00C5                     _T1CKPS1	set	197
   230  00C6                     _TMR1CS0	set	198
   231  00C7                     _TMR1CS1	set	199
   232  0088                     _TMR1IF	set	136
   233  00C0                     _TMR1ON	set	192
   234  04CB                     _IRCF0	set	1227
   235  04CC                     _IRCF1	set	1228
   236  04CD                     _IRCF2	set	1229
   237  04CE                     _IRCF3	set	1230
   238  04C8                     _SCS0	set	1224
   239  04C9                     _SCS1	set	1225
   240  04CF                     _SPLLEN	set	1231
   241  0488                     _TMR1IE	set	1160
   242  0460                     _TRISA0	set	1120
   243  0461                     _TRISA1	set	1121
   244  0462                     _TRISA2	set	1122
   245  0463                     _TRISA3	set	1123
   246  0464                     _TRISA4	set	1124
   247  0465                     _TRISA5	set	1125
   248  018C                     _ANSELA	set	396
   249  0191                     _EEADRL	set	401
   250  0196                     _EECON2	set	406
   251  0193                     _EEDATL	set	403
   252  0CAE                     _CFGS	set	3246
   253  0CAF                     _EEPGD	set	3247
   254  0CA8                     _RD	set	3240
   255  0CA9                     _WR	set	3241
   256  0CAA                     _WREN	set	3242
   257  0212                     _SSPADD	set	530
   258  0211                     _SSPBUF	set	529
   259  10B5                     _ACKDT	set	4277
   260  10B4                     _ACKEN	set	4276
   261  10A0                     _BF	set	4256
   262  10B2                     _PEN	set	4274
   263  10B3                     _RCEN	set	4275
   264  10B0                     _SEN	set	4272
   265  10AD                     _SSPEN	set	4269
   266  10A8                     _SSPM0	set	4264
   267  10A9                     _SSPM1	set	4265
   268  10AA                     _SSPM2	set	4266
   269  10AB                     _SSPM3	set	4267
   270  0392                     _IOCAN	set	914
   271  0391                     _IOCAP	set	913
   272  1C8B                     _IOCAP3	set	7307
   273                           
   274                           	psect	cinit
   275  0016                     start_initialization:	
   276                           ; #config settings
   277                           
   278  0016                     __initialization:	
   279                           
   280                           ; Clear objects allocated to COMMON
   281  0016  01FC               	clrf	__pbssCOMMON& (0+127)
   282                           
   283                           ; Clear objects allocated to BANK0
   284  0017  3063               	movlw	low __pbssBANK0
   285  0018  0084               	movwf	4
   286  0019  3000               	movlw	high __pbssBANK0
   287  001A  0085               	movwf	5
   288  001B  300B               	movlw	11
   289  001C  318C  24F3  3180   	fcall	clear_ram0
   290                           
   291                           ; Clear objects allocated to BANK1
   292  001F  30A0               	movlw	low __pbssBANK1
   293  0020  0084               	movwf	4
   294  0021  3000               	movlw	high __pbssBANK1
   295  0022  0085               	movwf	5
   296  0023  304E               	movlw	78
   297  0024  318C  24F3  3180   	fcall	clear_ram0
   298                           
   299                           ; Initialize objects allocated to BANK2
   300  0027  304E               	movlw	low __pidataBANK2
   301  0028  0084               	movwf	4
   302  0029  308E               	movlw	(high __pidataBANK2)| (0+128)
   303  002A  0085               	movwf	5
   304  002B  3020               	movlw	low __pdataBANK2
   305  002C  0086               	movwf	6
   306  002D  3001               	movlw	high __pdataBANK2
   307  002E  0087               	movwf	7
   308  002F  3022               	movlw	34
   309  0030  318C  24ED         	fcall	init_ram
   310  0032                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0032                     __end_of__initialization:	
   314  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   315  0033  0020               	movlb	0
   316  0034  318F  2F59         	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMMON
   319  007C                     __pbssCOMMON:	
   320  007C                     _t_i:	
   321  007C                     	ds	1
   322                           
   323                           	psect	bssBANK0
   324  0063                     __pbssBANK0:	
   325  0063                     _seconds:	
   326  0063                     	ds	3
   327  0066                     _time_array:	
   328  0066                     	ds	3
   329  0069                     _MAIN_SHIFT_DATA:	
   330  0069                     	ds	1
   331  006A                     _dakika:	
   332  006A                     	ds	1
   333  006B                     _saat:	
   334  006B                     	ds	1
   335  006C                     _saniye:	
   336  006C                     	ds	1
   337  006D                     _unnecessary:	
   338  006D                     	ds	1
   339                           
   340                           	psect	bssBANK1
   341  00A0                     __pbssBANK1:	
   342  00A0                     _difference:	
   343  00A0                     	ds	24
   344  00B8                     _diffs:	
   345  00B8                     	ds	6
   346  00BE                     _Time1End:	
   347  00BE                     	ds	18
   348  00D0                     _Time1Start:	
   349  00D0                     	ds	18
   350  00E2                     _zaman:	
   351  00E2                     	ds	7
   352  00E9                     _CENTER_DATA:	
   353  00E9                     	ds	5
   354                           
   355                           	psect	dataBANK2
   356  0120                     __pdataBANK2:	
   357  0120                     _divisions:	
   358  0120                     	ds	24
   359  0138                     _rakamlar:	
   360  0138                     	ds	10
   361                           
   362                           	psect	clrtext
   363  0CF3                     clear_ram0:	
   364                           ;	Called with FSR0 containing the base address, and
   365                           ;	WREG with the size to clear
   366                           
   367  0CF3  0064               	clrwdt	;clear the watchdog before getting into this loop
   368  0CF4                     clrloop0:	
   369  0CF4  0180               	clrf	0	;clear RAM location pointed to by FSR
   370  0CF5  3101               	addfsr 0,1
   371  0CF6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   372  0CF7  2CF4               	goto	clrloop0	;have we reached the end yet?
   373  0CF8  3400               	retlw	0	;all done for this memory range, return
   374                           
   375                           	psect	inittext
   376  0CED                     init_ram:	
   377  0CED  00FE               	movwf	126
   378  0CEE                     initloop:	
   379  0CEE  0012               	moviw fsr0++
   380  0CEF  001E               	movwi fsr1++
   381  0CF0  0BFE               	decfsz	126,f
   382  0CF1  2CEE               	goto	initloop
   383  0CF2  3400               	retlw	0
   384                           
   385                           	psect	cstackCOMMON
   386  0070                     __pcstackCOMMON:	
   387  0070                     ?_DELAY:	
   388  0070                     ?_DELAY100:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_I2C_initialize:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_I2C_Start:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_I2C_data_receive:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_I2C_data_send:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_I2C_SendACK:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_I2C_SendNACK:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_I2C_Stop:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_LoadMainShift:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_DisplayDate:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_DisplayTime:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_FNC:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_FNC:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_DS1307_time:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_DS1307_date:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_getTimeDifference:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_main:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     ??_DELAY:	
   443  0071                     ??_DELAY100:	
   444                           ; 1 bytes @ 0x1
   445                           
   446  0071                     ??_I2C_initialize:	
   447                           ; 1 bytes @ 0x1
   448                           
   449  0071                     ??_I2C_Start:	
   450                           ; 1 bytes @ 0x1
   451                           
   452  0071                     ??_I2C_data_receive:	
   453                           ; 1 bytes @ 0x1
   454                           
   455  0071                     ??_I2C_data_send:	
   456                           ; 1 bytes @ 0x1
   457                           
   458  0071                     ??_I2C_SendACK:	
   459                           ; 1 bytes @ 0x1
   460                           
   461  0071                     ??_I2C_SendNACK:	
   462                           ; 1 bytes @ 0x1
   463                           
   464  0071                     ??_I2C_Stop:	
   465                           ; 1 bytes @ 0x1
   466                           
   467  0071                     ??_LoadMainShift:	
   468                           ; 1 bytes @ 0x1
   469                           
   470  0071                     ?___bmul:	
   471                           ; 1 bytes @ 0x1
   472                           
   473  0071                     ?___wmul:	
   474                           ; 1 bytes @ 0x1
   475                           
   476  0071                     ?___awdiv:	
   477                           ; 2 bytes @ 0x1
   478                           
   479  0071                     ?___awmod:	
   480                           ; 2 bytes @ 0x1
   481                           
   482  0071                     ?___lwmod:	
   483                           ; 2 bytes @ 0x1
   484                           
   485  0071                     ?___ftpack:	
   486                           ; 2 bytes @ 0x1
   487                           
   488  0071                     ?___lmul:	
   489                           ; 3 bytes @ 0x1
   490                           
   491  0071                     ___bmul@multiplicand:	
   492                           ; 4 bytes @ 0x1
   493                           
   494  0071                     ___wmul@multiplier:	
   495                           ; 1 bytes @ 0x1
   496                           
   497  0071                     ___awdiv@divisor:	
   498                           ; 2 bytes @ 0x1
   499                           
   500  0071                     ___awmod@divisor:	
   501                           ; 2 bytes @ 0x1
   502                           
   503  0071                     ___lwmod@divisor:	
   504                           ; 2 bytes @ 0x1
   505                           
   506  0071                     ___ftpack@arg:	
   507                           ; 2 bytes @ 0x1
   508                           
   509  0071                     ___lmul@multiplier:	
   510                           ; 3 bytes @ 0x1
   511                           
   512                           
   513                           ; 4 bytes @ 0x1
   514  0071                     	ds	1
   515  0072                     ??___bmul:	
   516  0072                     LoadMainShift@data:	
   517                           ; 1 bytes @ 0x2
   518                           
   519                           
   520                           ; 1 bytes @ 0x2
   521  0072                     	ds	1
   522  0073                     DELAY@milisecond:	
   523  0073                     I2C_data_send@data:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  0073                     LoadMainShift@index:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0073                     ___bmul@product:	
   530                           ; 1 bytes @ 0x3
   531                           
   532  0073                     ___wmul@multiplicand:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     ___awdiv@dividend:	
   536                           ; 2 bytes @ 0x3
   537                           
   538  0073                     ___awmod@dividend:	
   539                           ; 2 bytes @ 0x3
   540                           
   541  0073                     ___lwmod@dividend:	
   542                           ; 2 bytes @ 0x3
   543                           
   544                           
   545                           ; 2 bytes @ 0x3
   546  0073                     	ds	1
   547  0074                     ?_SetMainShiftPin:	
   548  0074                     DELAY100@milisecond:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0074                     SetMainShiftPin@pin_value:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0074                     ___bmul@multiplier:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0074                     ___ftpack@exp:	
   558                           ; 1 bytes @ 0x4
   559                           
   560                           
   561                           ; 1 bytes @ 0x4
   562  0074                     	ds	1
   563  0075                     ??_SetMainShiftPin:	
   564  0075                     ?_DS1307_shared_get:	
   565                           ; 1 bytes @ 0x5
   566                           
   567  0075                     ??___wmul:	
   568                           ; 1 bytes @ 0x5
   569                           
   570  0075                     ??___awdiv:	
   571                           ; 1 bytes @ 0x5
   572                           
   573  0075                     ??___awmod:	
   574                           ; 1 bytes @ 0x5
   575                           
   576  0075                     ??___lwmod:	
   577                           ; 1 bytes @ 0x5
   578                           
   579  0075                     DS1307_shared_get@reg:	
   580                           ; 1 bytes @ 0x5
   581                           
   582  0075                     ___ftpack@sign:	
   583                           ; 1 bytes @ 0x5
   584                           
   585  0075                     ___wmul@product:	
   586                           ; 1 bytes @ 0x5
   587                           
   588  0075                     ___lmul@multiplicand:	
   589                           ; 2 bytes @ 0x5
   590                           
   591                           
   592                           ; 4 bytes @ 0x5
   593  0075                     	ds	1
   594  0076                     ??___ftpack:	
   595  0076                     ??_DS1307_shared_get:	
   596                           ; 1 bytes @ 0x6
   597                           
   598  0076                     ___awdiv@counter:	
   599                           ; 1 bytes @ 0x6
   600                           
   601  0076                     ___awmod@counter:	
   602                           ; 1 bytes @ 0x6
   603                           
   604  0076                     ___lwmod@counter:	
   605                           ; 1 bytes @ 0x6
   606                           
   607                           
   608                           ; 1 bytes @ 0x6
   609  0076                     	ds	1
   610  0077                     ?___lwdiv:	
   611  0077                     ?_isleap:	
   612                           ; 2 bytes @ 0x7
   613                           
   614  0077                     SetMainShiftPin@pin_number:	
   615                           ; 2 bytes @ 0x7
   616                           
   617  0077                     ___awdiv@sign:	
   618                           ; 1 bytes @ 0x7
   619                           
   620  0077                     ___awmod@sign:	
   621                           ; 1 bytes @ 0x7
   622                           
   623  0077                     ___lwdiv@divisor:	
   624                           ; 1 bytes @ 0x7
   625                           
   626  0077                     isleap@yr:	
   627                           ; 2 bytes @ 0x7
   628                           
   629                           
   630                           ; 2 bytes @ 0x7
   631  0077                     	ds	1
   632  0078                     ?_LoadDataCenter:	
   633  0078                     LoadDataCenter@center_data:	
   634                           ; 1 bytes @ 0x8
   635                           
   636  0078                     ___awdiv@quotient:	
   637                           ; 1 bytes @ 0x8
   638                           
   639                           
   640                           ; 2 bytes @ 0x8
   641  0078                     	ds	1
   642  0079                     ??_LoadDataCenter:	
   643  0079                     ??___lmul:	
   644                           ; 1 bytes @ 0x9
   645                           
   646  0079                     ??___lltoft:	
   647                           ; 1 bytes @ 0x9
   648                           
   649  0079                     ??_isleap:	
   650                           ; 1 bytes @ 0x9
   651                           
   652  0079                     ___ftadd@sign:	
   653                           ; 1 bytes @ 0x9
   654                           
   655  0079                     ___lwdiv@dividend:	
   656                           ; 1 bytes @ 0x9
   657                           
   658                           
   659                           ; 2 bytes @ 0x9
   660  0079                     	ds	1
   661  007A                     ??_DS1307_time:	
   662  007A                     ??_DS1307_date:	
   663                           ; 1 bytes @ 0xA
   664                           
   665  007A                     ___ftadd@exp2:	
   666                           ; 1 bytes @ 0xA
   667                           
   668  007A                     ___lltoft@exp:	
   669                           ; 1 bytes @ 0xA
   670                           
   671                           
   672                           ; 1 bytes @ 0xA
   673  007A                     	ds	1
   674  007B                     ??_DisplayDate:	
   675  007B                     ??_DisplayTime:	
   676                           ; 1 bytes @ 0xB
   677                           
   678  007B                     ??___lwdiv:	
   679                           ; 1 bytes @ 0xB
   680                           
   681  007B                     ___ftadd@exp1:	
   682                           ; 1 bytes @ 0xB
   683                           
   684  007B                     _isleap$458:	
   685                           ; 1 bytes @ 0xB
   686                           
   687                           
   688                           ; 1 bytes @ 0xB
   689  007B                     	ds	1
   690  007C                     ??_main:	
   691  007C                     ??___ftsub:	
   692                           ; 1 bytes @ 0xC
   693                           
   694  007C                     ??_months_to_days:	
   695                           ; 1 bytes @ 0xC
   696                           
   697                           
   698                           	psect	cstackBANK0
   699  0020                     __pcstackBANK0:	
   700                           ; 1 bytes @ 0xC
   701                           
   702  0020                     ?___ftadd:	
   703  0020                     LoadDataCenter@center_no:	
   704                           ; 3 bytes @ 0x0
   705                           
   706  0020                     DS1307_shared_get@addr:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0020                     ___lwdiv@quotient:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0020                     ___ftadd@f1:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0020                     ___lmul@product:	
   716                           ; 3 bytes @ 0x0
   717                           
   718                           
   719                           ; 4 bytes @ 0x0
   720  0020                     	ds	1
   721  0021                     LoadDataCenter@index:	
   722  0021                     DS1307_shared_get@k:	
   723                           ; 1 bytes @ 0x1
   724                           
   725                           
   726                           ; 1 bytes @ 0x1
   727  0021                     	ds	1
   728  0022                     ?_SetDataCenterPin:	
   729  0022                     SetDataCenterPin@pin_value:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0022                     DS1307_shared_get@den:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0022                     ___lwdiv@counter:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 1 bytes @ 0x2
   740  0022                     	ds	1
   741  0023                     ??_SetDataCenterPin:	
   742  0023                     ?_months_to_days:	
   743                           ; 1 bytes @ 0x3
   744                           
   745  0023                     months_to_days@month:	
   746                           ; 2 bytes @ 0x3
   747                           
   748  0023                     ___ftadd@f2:	
   749                           ; 2 bytes @ 0x3
   750                           
   751                           
   752                           ; 3 bytes @ 0x3
   753  0023                     	ds	1
   754  0024                     ?___lltoft:	
   755  0024                     ?_years_to_days:	
   756                           ; 3 bytes @ 0x4
   757                           
   758  0024                     years_to_days@yr:	
   759                           ; 4 bytes @ 0x4
   760                           
   761  0024                     ___lltoft@c:	
   762                           ; 2 bytes @ 0x4
   763                           
   764                           
   765                           ; 4 bytes @ 0x4
   766  0024                     	ds	2
   767  0026                     ??___ftadd:	
   768  0026                     SetDataCenterPin@center_no:	
   769                           ; 1 bytes @ 0x6
   770                           
   771                           
   772                           ; 1 bytes @ 0x6
   773  0026                     	ds	1
   774  0027                     SetDataCenterPin@pin_number:	
   775                           
   776                           ; 1 bytes @ 0x7
   777  0027                     	ds	1
   778  0028                     ??_years_to_days:	
   779  0028                     ?___ftdiv:	
   780                           ; 1 bytes @ 0x8
   781                           
   782  0028                     SetDataCenterPin@p:	
   783                           ; 3 bytes @ 0x8
   784                           
   785  0028                     ___ftdiv@f2:	
   786                           ; 1 bytes @ 0x8
   787                           
   788                           
   789                           ; 3 bytes @ 0x8
   790  0028                     	ds	1
   791  0029                     ?_LoadSevenSegment:	
   792  0029                     LoadSevenSegment@value:	
   793                           ; 1 bytes @ 0x9
   794                           
   795                           
   796                           ; 1 bytes @ 0x9
   797  0029                     	ds	1
   798  002A                     ??_LoadSevenSegment:	
   799  002A                     ?___ftsub:	
   800                           ; 1 bytes @ 0xA
   801                           
   802  002A                     ___ftsub@f2:	
   803                           ; 3 bytes @ 0xA
   804                           
   805                           
   806                           ; 3 bytes @ 0xA
   807  002A                     	ds	1
   808  002B                     ___ftdiv@f1:	
   809                           
   810                           ; 3 bytes @ 0xB
   811  002B                     	ds	1
   812  002C                     LoadSevenSegment@segment_no:	
   813                           
   814                           ; 1 bytes @ 0xC
   815  002C                     	ds	1
   816  002D                     LoadSevenSegment@index:	
   817  002D                     ___ftsub@f1:	
   818                           ; 1 bytes @ 0xD
   819                           
   820                           
   821                           ; 3 bytes @ 0xD
   822  002D                     	ds	1
   823  002E                     ?_DisplayNumber:	
   824  002E                     ??___ftdiv:	
   825                           ; 1 bytes @ 0xE
   826                           
   827  002E                     DisplayNumber@value:	
   828                           ; 1 bytes @ 0xE
   829                           
   830                           
   831                           ; 1 bytes @ 0xE
   832  002E                     	ds	1
   833  002F                     ??_DisplayNumber:	
   834                           
   835                           ; 1 bytes @ 0xF
   836  002F                     	ds	3
   837  0032                     ___ftdiv@cntr:	
   838  0032                     _DisplayNumber$700:	
   839                           ; 1 bytes @ 0x12
   840                           
   841                           
   842                           ; 1 bytes @ 0x12
   843  0032                     	ds	1
   844  0033                     DisplayNumber@s:	
   845  0033                     ___ftdiv@f3:	
   846                           ; 1 bytes @ 0x13
   847                           
   848                           
   849                           ; 3 bytes @ 0x13
   850  0033                     	ds	1
   851  0034                     DisplayDate@k:	
   852  0034                     DisplayTime@k:	
   853                           ; 1 bytes @ 0x14
   854                           
   855                           
   856                           ; 1 bytes @ 0x14
   857  0034                     	ds	2
   858  0036                     ?_ymd_to_scalar:	
   859  0036                     ___ftdiv@exp:	
   860                           ; 4 bytes @ 0x16
   861                           
   862  0036                     ymd_to_scalar@yr:	
   863                           ; 1 bytes @ 0x16
   864                           
   865                           
   866                           ; 2 bytes @ 0x16
   867  0036                     	ds	1
   868  0037                     ___ftdiv@sign:	
   869                           
   870                           ; 1 bytes @ 0x17
   871  0037                     	ds	1
   872  0038                     ?___fttol:	
   873  0038                     ymd_to_scalar@mo:	
   874                           ; 4 bytes @ 0x18
   875                           
   876  0038                     ___fttol@f1:	
   877                           ; 2 bytes @ 0x18
   878                           
   879                           
   880                           ; 3 bytes @ 0x18
   881  0038                     	ds	2
   882  003A                     ymd_to_scalar@day:	
   883                           
   884                           ; 2 bytes @ 0x1A
   885  003A                     	ds	2
   886  003C                     ??___fttol:	
   887  003C                     ??_ymd_to_scalar:	
   888                           ; 1 bytes @ 0x1C
   889                           
   890                           
   891                           ; 1 bytes @ 0x1C
   892  003C                     	ds	4
   893  0040                     ___fttol@sign1:	
   894  0040                     _ymd_to_scalar$470:	
   895                           ; 1 bytes @ 0x20
   896                           
   897                           
   898                           ; 2 bytes @ 0x20
   899  0040                     	ds	1
   900  0041                     ___fttol@lval:	
   901                           
   902                           ; 4 bytes @ 0x21
   903  0041                     	ds	1
   904  0042                     ymd_to_scalar@scalar:	
   905                           
   906                           ; 4 bytes @ 0x22
   907  0042                     	ds	3
   908  0045                     ___fttol@exp1:	
   909                           
   910                           ; 1 bytes @ 0x25
   911  0045                     	ds	1
   912  0046                     ?_mktime:	
   913                           
   914                           ; 4 bytes @ 0x26
   915  0046                     	ds	4
   916  004A                     ??_mktime:	
   917                           
   918                           ; 1 bytes @ 0x2A
   919  004A                     	ds	6
   920  0050                     mktime@tt:	
   921                           
   922                           ; 4 bytes @ 0x30
   923  0050                     	ds	4
   924  0054                     mktime@timeptr:	
   925                           
   926                           ; 1 bytes @ 0x34
   927  0054                     	ds	1
   928  0055                     ?___altoft:	
   929  0055                     ___altoft@c:	
   930                           ; 3 bytes @ 0x35
   931                           
   932                           
   933                           ; 4 bytes @ 0x35
   934  0055                     	ds	4
   935  0059                     ??___altoft:	
   936                           
   937                           ; 1 bytes @ 0x39
   938  0059                     	ds	2
   939  005B                     ___altoft@exp:	
   940                           
   941                           ; 1 bytes @ 0x3B
   942  005B                     	ds	1
   943  005C                     ___altoft@sign:	
   944                           
   945                           ; 1 bytes @ 0x3C
   946  005C                     	ds	1
   947  005D                     ??_getTimeDifference:	
   948                           
   949                           ; 1 bytes @ 0x3D
   950  005D                     	ds	4
   951  0061                     getTimeDifference@i:	
   952                           
   953                           ; 1 bytes @ 0x41
   954  0061                     	ds	1
   955  0062                     main@counter:	
   956                           
   957                           ; 1 bytes @ 0x42
   958  0062                     	ds	1
   959                           
   960                           	psect	maintext
   961  0F59                     __pmaintext:	
   962 ;;
   963 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   964 ;;
   965 ;; *************** function _main *****************
   966 ;; Defined at:
   967 ;;		line 83 in file "TimeCounterF1840.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  counter         1   66[BANK0 ] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : B1F/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   981 ;;      Params:         0       0       0       0
   982 ;;      Locals:         0       1       0       0
   983 ;;      Temps:          0       0       0       0
   984 ;;      Totals:         0       1       0       0
   985 ;;Total ram usage:        1 bytes
   986 ;; Hardware stack levels required when called:    8
   987 ;; This function calls:
   988 ;;		_DELAY
   989 ;;		_DELAY100
   990 ;;		_DS1307_date
   991 ;;		_DS1307_time
   992 ;;		_DisplayDate
   993 ;;		_DisplayTime
   994 ;;		_I2C_initialize
   995 ;;		_getTimeDifference
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _main
  1003  0F59                     _main:	
  1004                           
  1005                           ;TimeCounterF1840.c: 90: ANSELA = 0;
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1009  0F59  0023               	movlb	3	; select bank3
  1010  0F5A  018C               	clrf	12	;volatile
  1011                           
  1012                           ;TimeCounterF1840.c: 91: SPLLEN = 0;
  1013  0F5B  0021               	movlb	1	; select bank1
  1014  0F5C  1399               	bcf	25,7	;volatile
  1015                           
  1016                           ;TimeCounterF1840.c: 93: IRCF3 = 1;
  1017  0F5D  1719               	bsf	25,6	;volatile
  1018                           
  1019                           ;TimeCounterF1840.c: 94: IRCF2 = 1;
  1020  0F5E  1699               	bsf	25,5	;volatile
  1021                           
  1022                           ;TimeCounterF1840.c: 95: IRCF1 = 1;
  1023  0F5F  1619               	bsf	25,4	;volatile
  1024                           
  1025                           ;TimeCounterF1840.c: 96: IRCF0 = 1;
  1026  0F60  1599               	bsf	25,3	;volatile
  1027                           
  1028                           ;TimeCounterF1840.c: 98: SCS1 = 1 ;
  1029  0F61  1499               	bsf	25,1	;volatile
  1030                           
  1031                           ;TimeCounterF1840.c: 99: SCS0 = 0;
  1032  0F62  1019               	bcf	25,0	;volatile
  1033                           
  1034                           ;TimeCounterF1840.c: 102: TRISA0 = 0;
  1035  0F63  100C               	bcf	12,0	;volatile
  1036                           
  1037                           ;TimeCounterF1840.c: 103: PORTA = 0;
  1038  0F64  0020               	movlb	0	; select bank0
  1039  0F65  018C               	clrf	12	;volatile
  1040                           
  1041                           ;TimeCounterF1840.c: 104: TRISA3 = 1;
  1042  0F66  0021               	movlb	1	; select bank1
  1043  0F67  158C               	bsf	12,3	;volatile
  1044                           
  1045                           ;TimeCounterF1840.c: 105: TRISA4 = 0;
  1046  0F68  120C               	bcf	12,4	;volatile
  1047                           
  1048                           ;TimeCounterF1840.c: 106: TRISA5 = 0;
  1049  0F69  128C               	bcf	12,5	;volatile
  1050                           
  1051                           ;TimeCounterF1840.c: 108: TRISA1 = 1;
  1052  0F6A  148C               	bsf	12,1	;volatile
  1053                           
  1054                           ;TimeCounterF1840.c: 109: TRISA2 = 1;
  1055  0F6B  150C               	bsf	12,2	;volatile
  1056                           
  1057                           ;TimeCounterF1840.c: 111: I2C_initialize();
  1058  0F6C  318D  255E  318F   	fcall	_I2C_initialize
  1059                           
  1060                           ;TimeCounterF1840.c: 113: DELAY(100);
  1061  0F6F  3064               	movlw	100
  1062  0F70  318D  252A  318F   	fcall	_DELAY
  1063                           
  1064                           ;TimeCounterF1840.c: 114: PEIE = 1;
  1065  0F73  170B               	bsf	11,6	;volatile
  1066                           
  1067                           ;TimeCounterF1840.c: 115: GIE = 1;
  1068  0F74  178B               	bsf	11,7	;volatile
  1069                           
  1070                           ;TimeCounterF1840.c: 116: byte counter=0;
  1071  0F75  0020               	movlb	0	; select bank0
  1072  0F76  01E2               	clrf	main@counter
  1073  0F77                     l2880:	
  1074                           ;TimeCounterF1840.c: 123: while(1)
  1075                           
  1076                           
  1077                           ;TimeCounterF1840.c: 124: {
  1078                           ;TimeCounterF1840.c: 130: DS1307_time();
  1079  0F77  318D  2517  318F   	fcall	_DS1307_time
  1080                           
  1081                           ;TimeCounterF1840.c: 131: DS1307_date();
  1082  0F7A  318D  2572  318F   	fcall	_DS1307_date
  1083                           
  1084                           ;TimeCounterF1840.c: 132: getTimeDifference();
  1085  0F7D  3180  2036  318F   	fcall	_getTimeDifference
  1086                           
  1087                           ;TimeCounterF1840.c: 135: DisplayDate();
  1088  0F80  318D  25D3  318F   	fcall	_DisplayDate
  1089                           
  1090                           ;TimeCounterF1840.c: 136: DisplayTime();
  1091  0F83  318D  259D  318F   	fcall	_DisplayTime
  1092                           
  1093                           ;TimeCounterF1840.c: 137: DELAY100(9);
  1094  0F86  3009               	movlw	9
  1095  0F87  318D  254B  318F   	fcall	_DELAY100
  1096  0F8A  2F77               	goto	l2880
  1097  0F8B                     __end_of_main:	
  1098                           
  1099                           	psect	text1
  1100  0036                     __ptext1:	
  1101 ;; *************** function _getTimeDifference *****************
  1102 ;; Defined at:
  1103 ;;		line 44 in file "TimeCounterF1840.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  i               1   65[BANK0 ] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1117 ;;      Params:         0       0       0       0
  1118 ;;      Locals:         0       1       0       0
  1119 ;;      Temps:          0       4       0       0
  1120 ;;      Totals:         0       5       0       0
  1121 ;;Total ram usage:        5 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    5
  1124 ;; This function calls:
  1125 ;;		___altoft
  1126 ;;		___ftdiv
  1127 ;;		___ftsub
  1128 ;;		___fttol
  1129 ;;		___lltoft
  1130 ;;		___lmul
  1131 ;;		_mktime
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _getTimeDifference
  1139  0036                     _getTimeDifference:	
  1140                           
  1141                           ;TimeCounterF1840.c: 53: Time1Start.tm_hour=12;
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _getTimeDifference: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1145  0036  300C               	movlw	12
  1146  0037  0021               	movlb	1	; select bank1
  1147  0038  00D4               	movwf	(_Time1Start^(0+128)+4)
  1148  0039  3000               	movlw	0
  1149  003A  00D5               	movwf	(_Time1Start^(0+128)+5)
  1150                           
  1151                           ;TimeCounterF1840.c: 54: Time1Start.tm_min=30;
  1152  003B  301E               	movlw	30
  1153  003C  00D2               	movwf	(_Time1Start^(0+128)+2)
  1154  003D  3000               	movlw	0
  1155  003E  00D3               	movwf	(_Time1Start^(0+128)+3)
  1156                           
  1157                           ;TimeCounterF1840.c: 55: Time1Start.tm_sec=0;
  1158  003F  01D0               	clrf	_Time1Start^(0+128)
  1159  0040  01D1               	clrf	(_Time1Start+1)^(0+128)
  1160                           
  1161                           ;TimeCounterF1840.c: 56: Time1Start.tm_year=118;
  1162  0041  3076               	movlw	118
  1163  0042  00DA               	movwf	(_Time1Start^(0+128)+10)
  1164  0043  3000               	movlw	0
  1165  0044  00DB               	movwf	(_Time1Start^(0+128)+11)
  1166                           
  1167                           ;TimeCounterF1840.c: 57: Time1Start.tm_mon=5-1;
  1168  0045  3004               	movlw	4
  1169  0046  00D8               	movwf	(_Time1Start^(0+128)+8)
  1170  0047  3000               	movlw	0
  1171  0048  00D9               	movwf	(_Time1Start^(0+128)+9)
  1172                           
  1173                           ;TimeCounterF1840.c: 58: Time1Start.tm_mday=2;
  1174  0049  3002               	movlw	2
  1175  004A  00D6               	movwf	(_Time1Start^(0+128)+6)
  1176  004B  3000               	movlw	0
  1177  004C  00D7               	movwf	(_Time1Start^(0+128)+7)
  1178                           
  1179                           ;TimeCounterF1840.c: 61: Time1End.tm_hour= zaman[4];
  1180  004D  0866               	movf	(_zaman^(0+128)+4),w
  1181  004E  0020               	movlb	0	; select bank0
  1182  004F  00DD               	movwf	??_getTimeDifference
  1183  0050  01DE               	clrf	??_getTimeDifference+1
  1184  0051  085D               	movf	??_getTimeDifference,w
  1185  0052  0021               	movlb	1	; select bank1
  1186  0053  00C2               	movwf	(_Time1End^(0+128)+4)
  1187  0054  0020               	movlb	0	; select bank0
  1188  0055  085E               	movf	??_getTimeDifference+1,w
  1189  0056  0021               	movlb	1	; select bank1
  1190  0057  00C3               	movwf	((_Time1End+1)^(0+128)+4)
  1191                           
  1192                           ;TimeCounterF1840.c: 62: Time1End.tm_min=zaman[5];
  1193  0058  0867               	movf	(_zaman^(0+128)+5),w
  1194  0059  0020               	movlb	0	; select bank0
  1195  005A  00DD               	movwf	??_getTimeDifference
  1196  005B  01DE               	clrf	??_getTimeDifference+1
  1197  005C  085D               	movf	??_getTimeDifference,w
  1198  005D  0021               	movlb	1	; select bank1
  1199  005E  00C0               	movwf	(_Time1End^(0+128)+2)
  1200  005F  0020               	movlb	0	; select bank0
  1201  0060  085E               	movf	??_getTimeDifference+1,w
  1202  0061  0021               	movlb	1	; select bank1
  1203  0062  00C1               	movwf	((_Time1End+1)^(0+128)+2)
  1204                           
  1205                           ;TimeCounterF1840.c: 63: Time1End.tm_sec=zaman[6];
  1206  0063  0868               	movf	(_zaman^(0+128)+6),w
  1207  0064  0020               	movlb	0	; select bank0
  1208  0065  00DD               	movwf	??_getTimeDifference
  1209  0066  01DE               	clrf	??_getTimeDifference+1
  1210  0067  085D               	movf	??_getTimeDifference,w
  1211  0068  0021               	movlb	1	; select bank1
  1212  0069  00BE               	movwf	_Time1End^(0+128)
  1213  006A  0020               	movlb	0	; select bank0
  1214  006B  085E               	movf	??_getTimeDifference+1,w
  1215  006C  0021               	movlb	1	; select bank1
  1216  006D  00BF               	movwf	(_Time1End+1)^(0+128)
  1217                           
  1218                           ;TimeCounterF1840.c: 64: Time1End.tm_year=100+zaman[0];
  1219  006E  0862               	movf	_zaman^(0+128),w
  1220  006F  3E64               	addlw	100
  1221  0070  00C8               	movwf	(_Time1End^(0+128)+10)
  1222  0071  3000               	movlw	0
  1223  0072  1803               	skipnc
  1224  0073  3001               	movlw	1
  1225  0074  00C9               	movwf	(_Time1End^(0+128)+11)
  1226                           
  1227                           ;TimeCounterF1840.c: 65: Time1End.tm_mon=zaman[2]-1;
  1228  0075  0864               	movf	(_zaman^(0+128)+2),w
  1229  0076  3EFF               	addlw	255
  1230  0077  00C6               	movwf	(_Time1End^(0+128)+8)
  1231  0078  30FF               	movlw	255
  1232  0079  1803               	skipnc
  1233  007A  3000               	movlw	0
  1234  007B  00C7               	movwf	(_Time1End^(0+128)+9)
  1235                           
  1236                           ;TimeCounterF1840.c: 66: Time1End.tm_mday=zaman[3];
  1237  007C  0865               	movf	(_zaman^(0+128)+3),w
  1238  007D  0020               	movlb	0	; select bank0
  1239  007E  00DD               	movwf	??_getTimeDifference
  1240  007F  01DE               	clrf	??_getTimeDifference+1
  1241  0080  085D               	movf	??_getTimeDifference,w
  1242  0081  0021               	movlb	1	; select bank1
  1243  0082  00C4               	movwf	(_Time1End^(0+128)+6)
  1244  0083  0020               	movlb	0	; select bank0
  1245  0084  085E               	movf	??_getTimeDifference+1,w
  1246  0085  0021               	movlb	1	; select bank1
  1247  0086  00C5               	movwf	((_Time1End+1)^(0+128)+6)
  1248                           
  1249                           ;TimeCounterF1840.c: 68: seconds = ((double)((time_t)(mktime(&Time1End))-(time_t)(mktime
      +                          (&Time1Start))));
  1250  0087  30D0               	movlw	(low (_Time1Start| 0))& (0+255)
  1251  0088  3181  2187  3180   	fcall	_mktime
  1252  008B  0020               	movlb	0	; select bank0
  1253  008C  0946               	comf	?_mktime,w
  1254  008D  00DD               	movwf	??_getTimeDifference
  1255  008E  0947               	comf	?_mktime+1,w
  1256  008F  00DE               	movwf	??_getTimeDifference+1
  1257  0090  0948               	comf	?_mktime+2,w
  1258  0091  00DF               	movwf	??_getTimeDifference+2
  1259  0092  0949               	comf	?_mktime+3,w
  1260  0093  00E0               	movwf	??_getTimeDifference+3
  1261  0094  0ADD               	incf	??_getTimeDifference,f
  1262  0095  1903               	skipnz
  1263  0096  0ADE               	incf	??_getTimeDifference+1,f
  1264  0097  1903               	skipnz
  1265  0098  0ADF               	incf	??_getTimeDifference+2,f
  1266  0099  1903               	skipnz
  1267  009A  0AE0               	incf	??_getTimeDifference+3,f
  1268  009B  30BE               	movlw	(low (_Time1End| 0))& (0+255)
  1269  009C  3181  2187  3180   	fcall	_mktime
  1270  009F  0020               	movlb	0	; select bank0
  1271  00A0  0846               	movf	?_mktime,w
  1272  00A1  07DD               	addwf	??_getTimeDifference,f
  1273  00A2  0847               	movf	?_mktime+1,w
  1274  00A3  3DDE               	addwfc	??_getTimeDifference+1,f
  1275  00A4  0848               	movf	?_mktime+2,w
  1276  00A5  3DDF               	addwfc	??_getTimeDifference+2,f
  1277  00A6  0849               	movf	?_mktime+3,w
  1278  00A7  3DE0               	addwfc	??_getTimeDifference+3,f
  1279  00A8  0860               	movf	??_getTimeDifference+3,w
  1280  00A9  00D8               	movwf	___altoft@c+3
  1281  00AA  085F               	movf	??_getTimeDifference+2,w
  1282  00AB  00D7               	movwf	___altoft@c+2
  1283  00AC  085E               	movf	??_getTimeDifference+1,w
  1284  00AD  00D6               	movwf	___altoft@c+1
  1285  00AE  085D               	movf	??_getTimeDifference,w
  1286  00AF  00D5               	movwf	___altoft@c
  1287  00B0  318F  27C3  3180   	fcall	___altoft
  1288  00B3  0020               	movlb	0	; select bank0
  1289  00B4  0855               	movf	?___altoft,w
  1290  00B5  00E3               	movwf	_seconds
  1291  00B6  0856               	movf	?___altoft+1,w
  1292  00B7  00E4               	movwf	_seconds+1
  1293  00B8  0857               	movf	?___altoft+2,w
  1294  00B9  00E5               	movwf	_seconds+2
  1295                           
  1296                           ;TimeCounterF1840.c: 69: for(char i=0; i < 6; i++)
  1297  00BA  01E1               	clrf	getTimeDifference@i
  1298  00BB  3006               	movlw	6
  1299  00BC  0261               	subwf	getTimeDifference@i,w
  1300  00BD  1803               	btfsc	3,0
  1301  00BE  2984               	goto	l2822
  1302  00BF                     l2806:	
  1303                           
  1304                           ;TimeCounterF1840.c: 70: {
  1305                           ;TimeCounterF1840.c: 71: difference[i] = seconds/divisions[i];
  1306  00BF  0863               	movf	_seconds,w
  1307  00C0  00AB               	movwf	___ftdiv@f1
  1308  00C1  0864               	movf	_seconds+1,w
  1309  00C2  00AC               	movwf	___ftdiv@f1+1
  1310  00C3  0865               	movf	_seconds+2,w
  1311  00C4  00AD               	movwf	___ftdiv@f1+2
  1312  00C5  0861               	movf	getTimeDifference@i,w
  1313  00C6  00DD               	movwf	??_getTimeDifference
  1314  00C7  3001               	movlw	1
  1315  00C8                     u4175:	
  1316  00C8  35DD               	lslf	??_getTimeDifference,f
  1317  00C9  3EFF               	addlw	-1
  1318  00CA  1D03               	skipz
  1319  00CB  28C8               	goto	u4175
  1320  00CC  355D               	lslf	??_getTimeDifference,w
  1321  00CD  3E20               	addlw	(low (_divisions| (0+256)))& (0+255)
  1322  00CE  0086               	movwf	6
  1323  00CF  3001               	movlw	1	; select bank2/3
  1324  00D0  0087               	movwf	7
  1325  00D1  3F40               	moviw [0]fsr1
  1326  00D2  00A4               	movwf	___lltoft@c
  1327  00D3  3F41               	moviw [1]fsr1
  1328  00D4  00A5               	movwf	___lltoft@c+1
  1329  00D5  3F42               	moviw [2]fsr1
  1330  00D6  00A6               	movwf	___lltoft@c+2
  1331  00D7  3F43               	moviw [3]fsr1
  1332  00D8  00A7               	movwf	___lltoft@c+3
  1333  00D9  318E  2670  3180   	fcall	___lltoft
  1334  00DC  0020               	movlb	0	; select bank0
  1335  00DD  0824               	movf	?___lltoft,w
  1336  00DE  00A8               	movwf	___ftdiv@f2
  1337  00DF  0825               	movf	?___lltoft+1,w
  1338  00E0  00A9               	movwf	___ftdiv@f2+1
  1339  00E1  0826               	movf	?___lltoft+2,w
  1340  00E2  00AA               	movwf	___ftdiv@f2+2
  1341  00E3  3183  239E  3180   	fcall	___ftdiv
  1342  00E6  0020               	movlb	0	; select bank0
  1343  00E7  0828               	movf	?___ftdiv,w
  1344  00E8  00B8               	movwf	___fttol@f1
  1345  00E9  0829               	movf	?___ftdiv+1,w
  1346  00EA  00B9               	movwf	___fttol@f1+1
  1347  00EB  082A               	movf	?___ftdiv+2,w
  1348  00EC  00BA               	movwf	___fttol@f1+2
  1349  00ED  3184  2447  3180   	fcall	___fttol
  1350  00F0  0020               	movlb	0	; select bank0
  1351  00F1  0861               	movf	getTimeDifference@i,w
  1352  00F2  00DE               	movwf	??_getTimeDifference+1
  1353  00F3  3001               	movlw	1
  1354  00F4                     u4185:	
  1355  00F4  35DE               	lslf	??_getTimeDifference+1,f
  1356  00F5  3EFF               	addlw	-1
  1357  00F6  1D03               	skipz
  1358  00F7  28F4               	goto	u4185
  1359  00F8  355E               	lslf	??_getTimeDifference+1,w
  1360  00F9  3EA0               	addlw	(low (_difference| 0))& (0+255)
  1361  00FA  0086               	movwf	6
  1362  00FB  0187               	clrf	7
  1363  00FC  0838               	movf	?___fttol,w
  1364  00FD  3FC0               	movwi [0]fsr1
  1365  00FE  0839               	movf	?___fttol+1,w
  1366  00FF  3FC1               	movwi [1]fsr1
  1367  0100  083A               	movf	?___fttol+2,w
  1368  0101  3FC2               	movwi [2]fsr1
  1369  0102  083B               	movf	?___fttol+3,w
  1370  0103  3FC3               	movwi [3]fsr1
  1371                           
  1372                           ;TimeCounterF1840.c: 72: diffs[i] = (unsigned int)difference[i];
  1373  0104  0861               	movf	getTimeDifference@i,w
  1374  0105  00DD               	movwf	??_getTimeDifference
  1375  0106  3001               	movlw	1
  1376  0107                     u4195:	
  1377  0107  35DD               	lslf	??_getTimeDifference,f
  1378  0108  3EFF               	addlw	-1
  1379  0109  1D03               	skipz
  1380  010A  2907               	goto	u4195
  1381  010B  355D               	lslf	??_getTimeDifference,w
  1382  010C  3EA0               	addlw	(low (_difference| 0))& (0+255)
  1383  010D  0086               	movwf	6
  1384  010E  0187               	clrf	7
  1385  010F  0801               	movf	1,w
  1386  0110  00DE               	movwf	??_getTimeDifference+1
  1387  0111  0861               	movf	getTimeDifference@i,w
  1388  0112  3EB8               	addlw	(low (_diffs| 0))& (0+255)
  1389  0113  0086               	movwf	6
  1390  0114  0187               	clrf	7
  1391  0115  085E               	movf	??_getTimeDifference+1,w
  1392  0116  0081               	movwf	1
  1393                           
  1394                           ;TimeCounterF1840.c: 73: seconds -= difference[i]*divisions[i];
  1395  0117  0861               	movf	getTimeDifference@i,w
  1396  0118  00DD               	movwf	??_getTimeDifference
  1397  0119  3001               	movlw	1
  1398  011A                     u4205:	
  1399  011A  35DD               	lslf	??_getTimeDifference,f
  1400  011B  3EFF               	addlw	-1
  1401  011C  1D03               	skipz
  1402  011D  291A               	goto	u4205
  1403  011E  355D               	lslf	??_getTimeDifference,w
  1404  011F  3E20               	addlw	(low (_divisions| (0+256)))& (0+255)
  1405  0120  0086               	movwf	6
  1406  0121  3001               	movlw	1	; select bank2/3
  1407  0122  0087               	movwf	7
  1408  0123  3F40               	moviw [0]fsr1
  1409  0124  00F5               	movwf	___lmul@multiplicand
  1410  0125  3F41               	moviw [1]fsr1
  1411  0126  00F6               	movwf	___lmul@multiplicand+1
  1412  0127  3F42               	moviw [2]fsr1
  1413  0128  00F7               	movwf	___lmul@multiplicand+2
  1414  0129  3F43               	moviw [3]fsr1
  1415  012A  00F8               	movwf	___lmul@multiplicand+3
  1416  012B  0861               	movf	getTimeDifference@i,w
  1417  012C  00DE               	movwf	??_getTimeDifference+1
  1418  012D  3001               	movlw	1
  1419  012E                     u4215:	
  1420  012E  35DE               	lslf	??_getTimeDifference+1,f
  1421  012F  3EFF               	addlw	-1
  1422  0130  1D03               	skipz
  1423  0131  292E               	goto	u4215
  1424  0132  355E               	lslf	??_getTimeDifference+1,w
  1425  0133  3EA0               	addlw	(low (_difference| 0))& (0+255)
  1426  0134  0086               	movwf	6
  1427  0135  0187               	clrf	7
  1428  0136  3F40               	moviw [0]fsr1
  1429  0137  00F1               	movwf	___lmul@multiplier
  1430  0138  3F41               	moviw [1]fsr1
  1431  0139  00F2               	movwf	___lmul@multiplier+1
  1432  013A  3F42               	moviw [2]fsr1
  1433  013B  00F3               	movwf	___lmul@multiplier+2
  1434  013C  3F43               	moviw [3]fsr1
  1435  013D  00F4               	movwf	___lmul@multiplier+3
  1436  013E  318F  2727  3180   	fcall	___lmul
  1437  0141  0874               	movf	?___lmul+3,w
  1438  0142  0020               	movlb	0	; select bank0
  1439  0143  00A7               	movwf	___lltoft@c+3
  1440  0144  0873               	movf	?___lmul+2,w
  1441  0145  00A6               	movwf	___lltoft@c+2
  1442  0146  0872               	movf	?___lmul+1,w
  1443  0147  00A5               	movwf	___lltoft@c+1
  1444  0148  0871               	movf	?___lmul,w
  1445  0149  00A4               	movwf	___lltoft@c
  1446  014A  318E  2670  3180   	fcall	___lltoft
  1447  014D  0020               	movlb	0	; select bank0
  1448  014E  0824               	movf	?___lltoft,w
  1449  014F  00AA               	movwf	___ftsub@f2
  1450  0150  0825               	movf	?___lltoft+1,w
  1451  0151  00AB               	movwf	___ftsub@f2+1
  1452  0152  0826               	movf	?___lltoft+2,w
  1453  0153  00AC               	movwf	___ftsub@f2+2
  1454  0154  0863               	movf	_seconds,w
  1455  0155  00AD               	movwf	___ftsub@f1
  1456  0156  0864               	movf	_seconds+1,w
  1457  0157  00AE               	movwf	___ftsub@f1+1
  1458  0158  0865               	movf	_seconds+2,w
  1459  0159  00AF               	movwf	___ftsub@f1+2
  1460  015A  318D  25F0  3180   	fcall	___ftsub
  1461  015D  0020               	movlb	0	; select bank0
  1462  015E  082A               	movf	?___ftsub,w
  1463  015F  00E3               	movwf	_seconds
  1464  0160  082B               	movf	?___ftsub+1,w
  1465  0161  00E4               	movwf	_seconds+1
  1466  0162  082C               	movf	?___ftsub+2,w
  1467  0163  00E5               	movwf	_seconds+2
  1468                           
  1469                           ;TimeCounterF1840.c: 74: if (i > 0)
  1470  0164  0861               	movf	getTimeDifference@i,w
  1471  0165  1903               	btfsc	3,2
  1472  0166  2970               	goto	l2816
  1473                           
  1474                           ;TimeCounterF1840.c: 75: zaman[i+1] = diffs[i];
  1475  0167  0861               	movf	getTimeDifference@i,w
  1476  0168  3EB8               	addlw	(low (_diffs| 0))& (0+255)
  1477  0169  0086               	movwf	6
  1478  016A  0187               	clrf	7
  1479  016B  0801               	movf	1,w
  1480  016C  00DD               	movwf	??_getTimeDifference
  1481  016D  0861               	movf	getTimeDifference@i,w
  1482  016E  3E01               	addlw	1
  1483  016F  2977               	goto	L1
  1484  0170                     l2816:	
  1485                           
  1486                           ;TimeCounterF1840.c: 76: else
  1487                           ;TimeCounterF1840.c: 77: zaman[i] = diffs[i];
  1488  0170  0861               	movf	getTimeDifference@i,w
  1489  0171  3EB8               	addlw	(low (_diffs| 0))& (0+255)
  1490  0172  0086               	movwf	6
  1491  0173  0187               	clrf	7
  1492  0174  0801               	movf	1,w
  1493  0175  00DD               	movwf	??_getTimeDifference
  1494  0176  0861               	movf	getTimeDifference@i,w
  1495  0177                     L1:	
  1496  0177  3EE2               	addlw	(low (_zaman| 0))& (0+255)
  1497  0178  0086               	movwf	6
  1498  0179  0187               	clrf	7
  1499  017A  085D               	movf	??_getTimeDifference,w
  1500  017B  0081               	movwf	1
  1501  017C  3001               	movlw	1
  1502  017D  00DD               	movwf	??_getTimeDifference
  1503  017E  085D               	movf	??_getTimeDifference,w
  1504  017F  07E1               	addwf	getTimeDifference@i,f
  1505  0180  3006               	movlw	6
  1506  0181  0261               	subwf	getTimeDifference@i,w
  1507  0182  1C03               	skipc
  1508  0183  28BF               	goto	l2806
  1509  0184                     l2822:	
  1510                           
  1511                           ;TimeCounterF1840.c: 78: }
  1512                           ;TimeCounterF1840.c: 79: zaman[1] = 0;
  1513  0184  0021               	movlb	1	; select bank1
  1514  0185  01E3               	clrf	(_zaman^(0+128)+1)
  1515  0186  0008               	return
  1516  0187                     __end_of_getTimeDifference:	
  1517                           
  1518                           	psect	text2
  1519  0187                     __ptext2:	
  1520 ;; *************** function _mktime *****************
  1521 ;; Defined at:
  1522 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  timeptr         1    wreg     PTR struct tm
  1525 ;;		 -> Time1End(18), Time1Start(18), 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  timeptr         1   52[BANK0 ] PTR struct tm
  1528 ;;		 -> Time1End(18), Time1Start(18), 
  1529 ;;  tt              4   48[BANK0 ] long 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  4   38[BANK0 ] long 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1539 ;;      Params:         0       4       0       0
  1540 ;;      Locals:         0       5       0       0
  1541 ;;      Temps:          0       6       0       0
  1542 ;;      Totals:         0      15       0       0
  1543 ;;Total ram usage:       15 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    4
  1546 ;; This function calls:
  1547 ;;		___lmul
  1548 ;;		_ymd_to_scalar
  1549 ;; This function is called by:
  1550 ;;		_getTimeDifference
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function _mktime
  1556  0187                     _mktime:	
  1557                           
  1558                           ;incstack = 0
  1559                           ; Regs used in _mktime: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1560                           ;mktime@timeptr stored from wreg
  1561  0187  0020               	movlb	0	; select bank0
  1562  0188  00D4               	movwf	mktime@timeptr
  1563  0189  0854               	movf	mktime@timeptr,w
  1564  018A  3E0A               	addlw	10
  1565  018B  0086               	movwf	6
  1566  018C  0187               	clrf	7
  1567  018D  3F40               	moviw [0]fsr1
  1568  018E  00CA               	movwf	??_mktime
  1569  018F  3F41               	moviw [1]fsr1
  1570  0190  00CB               	movwf	??_mktime+1
  1571  0191  084B               	movf	??_mktime+1,w
  1572  0192  3A80               	xorlw	128
  1573  0193  00CC               	movwf	??_mktime+2
  1574  0194  3080               	movlw	128
  1575  0195  024C               	subwf	??_mktime+2,w
  1576  0196  1D03               	skipz
  1577  0197  299A               	goto	u3965
  1578  0198  3046               	movlw	70
  1579  0199  024A               	subwf	??_mktime,w
  1580  019A                     u3965:	
  1581  019A  1C03               	skipc
  1582  019B  29B0               	goto	l2652
  1583  019C  0020               	movlb	0	; select bank0
  1584  019D  0854               	movf	mktime@timeptr,w
  1585  019E  3E0A               	addlw	10
  1586  019F  0086               	movwf	6
  1587  01A0  0187               	clrf	7
  1588  01A1  3F40               	moviw [0]fsr1
  1589  01A2  00CA               	movwf	??_mktime
  1590  01A3  3F41               	moviw [1]fsr1
  1591  01A4  00CB               	movwf	??_mktime+1
  1592  01A5  084B               	movf	??_mktime+1,w
  1593  01A6  3A80               	xorlw	128
  1594  01A7  00CC               	movwf	??_mktime+2
  1595  01A8  3080               	movlw	128
  1596  01A9  024C               	subwf	??_mktime+2,w
  1597  01AA  1D03               	skipz
  1598  01AB  29AE               	goto	u3975
  1599  01AC  308B               	movlw	139
  1600  01AD  024A               	subwf	??_mktime,w
  1601  01AE                     u3975:	
  1602  01AE  1C03               	skipc
  1603  01AF  29B9               	goto	l2654
  1604  01B0                     l2652:	
  1605  01B0  30FF               	movlw	255
  1606  01B1  0020               	movlb	0	; select bank0
  1607  01B2  00D3               	movwf	mktime@tt+3
  1608  01B3  30FF               	movlw	255
  1609  01B4  00D2               	movwf	mktime@tt+2
  1610  01B5  30FF               	movlw	255
  1611  01B6  00D1               	movwf	mktime@tt+1
  1612  01B7  30FF               	movlw	255
  1613  01B8  2A9E               	goto	L2
  1614  01B9                     l2654:	
  1615  01B9  0020               	movlb	0	; select bank0
  1616  01BA  0854               	movf	mktime@timeptr,w
  1617  01BB  3E0A               	addlw	10
  1618  01BC  0086               	movwf	6
  1619  01BD  0187               	clrf	7
  1620  01BE  3F40               	moviw [0]fsr1
  1621  01BF  00CA               	movwf	??_mktime
  1622  01C0  3F41               	moviw [1]fsr1
  1623  01C1  00CB               	movwf	??_mktime+1
  1624  01C2  084A               	movf	??_mktime,w
  1625  01C3  3E6C               	addlw	108
  1626  01C4  00B6               	movwf	ymd_to_scalar@yr
  1627  01C5  3007               	movlw	7
  1628  01C6  3D4B               	addwfc	??_mktime+1,w
  1629  01C7  00B7               	movwf	ymd_to_scalar@yr+1
  1630  01C8  0854               	movf	mktime@timeptr,w
  1631  01C9  3E08               	addlw	8
  1632  01CA  0086               	movwf	6
  1633  01CB  0187               	clrf	7
  1634  01CC  3F40               	moviw [0]fsr1
  1635  01CD  00CC               	movwf	??_mktime+2
  1636  01CE  3F41               	moviw [1]fsr1
  1637  01CF  00CD               	movwf	??_mktime+3
  1638  01D0  084C               	movf	??_mktime+2,w
  1639  01D1  3E01               	addlw	1
  1640  01D2  00B8               	movwf	ymd_to_scalar@mo
  1641  01D3  3000               	movlw	0
  1642  01D4  3D4D               	addwfc	??_mktime+3,w
  1643  01D5  00B9               	movwf	ymd_to_scalar@mo+1
  1644  01D6  0854               	movf	mktime@timeptr,w
  1645  01D7  3E06               	addlw	6
  1646  01D8  0086               	movwf	6
  1647  01D9  0187               	clrf	7
  1648  01DA  3F40               	moviw [0]fsr1
  1649  01DB  00BA               	movwf	ymd_to_scalar@day
  1650  01DC  3F41               	moviw [1]fsr1
  1651  01DD  00BB               	movwf	ymd_to_scalar@day+1
  1652  01DE  3186  2614  3181   	fcall	_ymd_to_scalar
  1653  01E1  0020               	movlb	0	; select bank0
  1654  01E2  0839               	movf	?_ymd_to_scalar+3,w
  1655  01E3  00D3               	movwf	mktime@tt+3
  1656  01E4  0838               	movf	?_ymd_to_scalar+2,w
  1657  01E5  00D2               	movwf	mktime@tt+2
  1658  01E6  0837               	movf	?_ymd_to_scalar+1,w
  1659  01E7  00D1               	movwf	mktime@tt+1
  1660  01E8  0836               	movf	?_ymd_to_scalar,w
  1661  01E9  00D0               	movwf	mktime@tt
  1662  01EA  30B2               	movlw	178
  1663  01EB  00B6               	movwf	ymd_to_scalar@yr
  1664  01EC  3007               	movlw	7
  1665  01ED  00B7               	movwf	ymd_to_scalar@yr+1
  1666  01EE  3001               	movlw	1
  1667  01EF  00B8               	movwf	ymd_to_scalar@mo
  1668  01F0  3000               	movlw	0
  1669  01F1  00B9               	movwf	ymd_to_scalar@mo+1
  1670  01F2  3001               	movlw	1
  1671  01F3  00BA               	movwf	ymd_to_scalar@day
  1672  01F4  3000               	movlw	0
  1673  01F5  00BB               	movwf	ymd_to_scalar@day+1
  1674  01F6  3186  2614  3181   	fcall	_ymd_to_scalar
  1675  01F9  0020               	movlb	0	; select bank0
  1676  01FA  0836               	movf	?_ymd_to_scalar,w
  1677  01FB  02D0               	subwf	mktime@tt,f
  1678  01FC  0837               	movf	?_ymd_to_scalar+1,w
  1679  01FD  3BD1               	subwfb	mktime@tt+1,f
  1680  01FE  0838               	movf	?_ymd_to_scalar+2,w
  1681  01FF  3BD2               	subwfb	mktime@tt+2,f
  1682  0200  0839               	movf	?_ymd_to_scalar+3,w
  1683  0201  3BD3               	subwfb	mktime@tt+3,f
  1684  0202  0854               	movf	mktime@timeptr,w
  1685  0203  3E04               	addlw	4
  1686  0204  0086               	movwf	6
  1687  0205  0187               	clrf	7
  1688  0206  3F40               	moviw [0]fsr1
  1689  0207  00CA               	movwf	??_mktime
  1690  0208  3F41               	moviw [1]fsr1
  1691  0209  00CB               	movwf	??_mktime+1
  1692  020A  084A               	movf	??_mktime,w
  1693  020B  00CC               	movwf	??_mktime+2
  1694  020C  084B               	movf	??_mktime+1,w
  1695  020D  00CD               	movwf	??_mktime+3
  1696  020E  3000               	movlw	0
  1697  020F  1BCD               	btfsc	??_mktime+3,7
  1698  0210  30FF               	movlw	255
  1699  0211  00CE               	movwf	??_mktime+4
  1700  0212  00CF               	movwf	??_mktime+5
  1701  0213  0853               	movf	mktime@tt+3,w
  1702  0214  00F4               	movwf	___lmul@multiplier+3
  1703  0215  0852               	movf	mktime@tt+2,w
  1704  0216  00F3               	movwf	___lmul@multiplier+2
  1705  0217  0851               	movf	mktime@tt+1,w
  1706  0218  00F2               	movwf	___lmul@multiplier+1
  1707  0219  0850               	movf	mktime@tt,w
  1708  021A  00F1               	movwf	___lmul@multiplier
  1709  021B  3000               	movlw	0
  1710  021C  00F8               	movwf	___lmul@multiplicand+3
  1711  021D  3000               	movlw	0
  1712  021E  00F7               	movwf	___lmul@multiplicand+2
  1713  021F  3000               	movlw	0
  1714  0220  00F6               	movwf	___lmul@multiplicand+1
  1715  0221  3018               	movlw	24
  1716  0222  00F5               	movwf	___lmul@multiplicand
  1717  0223  318F  2727  3181   	fcall	___lmul
  1718  0226  0871               	movf	?___lmul,w
  1719  0227  0020               	movlb	0	; select bank0
  1720  0228  07CC               	addwf	??_mktime+2,f
  1721  0229  0872               	movf	?___lmul+1,w
  1722  022A  3DCD               	addwfc	??_mktime+3,f
  1723  022B  0873               	movf	?___lmul+2,w
  1724  022C  3DCE               	addwfc	??_mktime+4,f
  1725  022D  0874               	movf	?___lmul+3,w
  1726  022E  3DCF               	addwfc	??_mktime+5,f
  1727  022F  084F               	movf	??_mktime+5,w
  1728  0230  00D3               	movwf	mktime@tt+3
  1729  0231  084E               	movf	??_mktime+4,w
  1730  0232  00D2               	movwf	mktime@tt+2
  1731  0233  084D               	movf	??_mktime+3,w
  1732  0234  00D1               	movwf	mktime@tt+1
  1733  0235  084C               	movf	??_mktime+2,w
  1734  0236  00D0               	movwf	mktime@tt
  1735  0237  0854               	movf	mktime@timeptr,w
  1736  0238  3E02               	addlw	2
  1737  0239  0086               	movwf	6
  1738  023A  0187               	clrf	7
  1739  023B  3F40               	moviw [0]fsr1
  1740  023C  00CA               	movwf	??_mktime
  1741  023D  3F41               	moviw [1]fsr1
  1742  023E  00CB               	movwf	??_mktime+1
  1743  023F  084A               	movf	??_mktime,w
  1744  0240  00CC               	movwf	??_mktime+2
  1745  0241  084B               	movf	??_mktime+1,w
  1746  0242  00CD               	movwf	??_mktime+3
  1747  0243  3000               	movlw	0
  1748  0244  1BCD               	btfsc	??_mktime+3,7
  1749  0245  30FF               	movlw	255
  1750  0246  00CE               	movwf	??_mktime+4
  1751  0247  00CF               	movwf	??_mktime+5
  1752  0248  0853               	movf	mktime@tt+3,w
  1753  0249  00F4               	movwf	___lmul@multiplier+3
  1754  024A  0852               	movf	mktime@tt+2,w
  1755  024B  00F3               	movwf	___lmul@multiplier+2
  1756  024C  0851               	movf	mktime@tt+1,w
  1757  024D  00F2               	movwf	___lmul@multiplier+1
  1758  024E  0850               	movf	mktime@tt,w
  1759  024F  00F1               	movwf	___lmul@multiplier
  1760  0250  3000               	movlw	0
  1761  0251  00F8               	movwf	___lmul@multiplicand+3
  1762  0252  3000               	movlw	0
  1763  0253  00F7               	movwf	___lmul@multiplicand+2
  1764  0254  3000               	movlw	0
  1765  0255  00F6               	movwf	___lmul@multiplicand+1
  1766  0256  303C               	movlw	60
  1767  0257  00F5               	movwf	___lmul@multiplicand
  1768  0258  318F  2727  3181   	fcall	___lmul
  1769  025B  0871               	movf	?___lmul,w
  1770  025C  0020               	movlb	0	; select bank0
  1771  025D  07CC               	addwf	??_mktime+2,f
  1772  025E  0872               	movf	?___lmul+1,w
  1773  025F  3DCD               	addwfc	??_mktime+3,f
  1774  0260  0873               	movf	?___lmul+2,w
  1775  0261  3DCE               	addwfc	??_mktime+4,f
  1776  0262  0874               	movf	?___lmul+3,w
  1777  0263  3DCF               	addwfc	??_mktime+5,f
  1778  0264  084F               	movf	??_mktime+5,w
  1779  0265  00D3               	movwf	mktime@tt+3
  1780  0266  084E               	movf	??_mktime+4,w
  1781  0267  00D2               	movwf	mktime@tt+2
  1782  0268  084D               	movf	??_mktime+3,w
  1783  0269  00D1               	movwf	mktime@tt+1
  1784  026A  084C               	movf	??_mktime+2,w
  1785  026B  00D0               	movwf	mktime@tt
  1786  026C  0854               	movf	mktime@timeptr,w
  1787  026D  0086               	movwf	6
  1788  026E  0187               	clrf	7
  1789  026F  3F40               	moviw [0]fsr1
  1790  0270  00CA               	movwf	??_mktime
  1791  0271  3F41               	moviw [1]fsr1
  1792  0272  00CB               	movwf	??_mktime+1
  1793  0273  084A               	movf	??_mktime,w
  1794  0274  00CC               	movwf	??_mktime+2
  1795  0275  084B               	movf	??_mktime+1,w
  1796  0276  00CD               	movwf	??_mktime+3
  1797  0277  3000               	movlw	0
  1798  0278  1BCD               	btfsc	??_mktime+3,7
  1799  0279  30FF               	movlw	255
  1800  027A  00CE               	movwf	??_mktime+4
  1801  027B  00CF               	movwf	??_mktime+5
  1802  027C  0853               	movf	mktime@tt+3,w
  1803  027D  00F4               	movwf	___lmul@multiplier+3
  1804  027E  0852               	movf	mktime@tt+2,w
  1805  027F  00F3               	movwf	___lmul@multiplier+2
  1806  0280  0851               	movf	mktime@tt+1,w
  1807  0281  00F2               	movwf	___lmul@multiplier+1
  1808  0282  0850               	movf	mktime@tt,w
  1809  0283  00F1               	movwf	___lmul@multiplier
  1810  0284  3000               	movlw	0
  1811  0285  00F8               	movwf	___lmul@multiplicand+3
  1812  0286  3000               	movlw	0
  1813  0287  00F7               	movwf	___lmul@multiplicand+2
  1814  0288  3000               	movlw	0
  1815  0289  00F6               	movwf	___lmul@multiplicand+1
  1816  028A  303C               	movlw	60
  1817  028B  00F5               	movwf	___lmul@multiplicand
  1818  028C  318F  2727         	fcall	___lmul
  1819  028E  0871               	movf	?___lmul,w
  1820  028F  0020               	movlb	0	; select bank0
  1821  0290  07CC               	addwf	??_mktime+2,f
  1822  0291  0872               	movf	?___lmul+1,w
  1823  0292  3DCD               	addwfc	??_mktime+3,f
  1824  0293  0873               	movf	?___lmul+2,w
  1825  0294  3DCE               	addwfc	??_mktime+4,f
  1826  0295  0874               	movf	?___lmul+3,w
  1827  0296  3DCF               	addwfc	??_mktime+5,f
  1828  0297  084F               	movf	??_mktime+5,w
  1829  0298  00D3               	movwf	mktime@tt+3
  1830  0299  084E               	movf	??_mktime+4,w
  1831  029A  00D2               	movwf	mktime@tt+2
  1832  029B  084D               	movf	??_mktime+3,w
  1833  029C  00D1               	movwf	mktime@tt+1
  1834  029D  084C               	movf	??_mktime+2,w
  1835  029E                     L2:	
  1836  029E  00D0               	movwf	mktime@tt
  1837  029F  0853               	movf	mktime@tt+3,w
  1838  02A0  00C9               	movwf	?_mktime+3
  1839  02A1  0852               	movf	mktime@tt+2,w
  1840  02A2  00C8               	movwf	?_mktime+2
  1841  02A3  0851               	movf	mktime@tt+1,w
  1842  02A4  00C7               	movwf	?_mktime+1
  1843  02A5  0850               	movf	mktime@tt,w
  1844  02A6  00C6               	movwf	?_mktime
  1845  02A7  0008               	return
  1846  02A8                     __end_of_mktime:	
  1847                           
  1848                           	psect	text3
  1849  0614                     __ptext3:	
  1850 ;; *************** function _ymd_to_scalar *****************
  1851 ;; Defined at:
  1852 ;;		line 40 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  yr              2   22[BANK0 ] unsigned int 
  1855 ;;  mo              2   24[BANK0 ] unsigned int 
  1856 ;;  day             2   26[BANK0 ] unsigned int 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  scalar          4   34[BANK0 ] long 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  4   22[BANK0 ] long 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1868 ;;      Params:         0       6       0       0
  1869 ;;      Locals:         0       6       0       0
  1870 ;;      Temps:          0       4       0       0
  1871 ;;      Totals:         0      16       0       0
  1872 ;;Total ram usage:       16 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    3
  1875 ;; This function calls:
  1876 ;;		_isleap
  1877 ;;		_months_to_days
  1878 ;;		_years_to_days
  1879 ;; This function is called by:
  1880 ;;		_mktime
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _ymd_to_scalar
  1886  0614                     _ymd_to_scalar:	
  1887                           
  1888                           ;incstack = 0
  1889                           ; Regs used in _ymd_to_scalar: [wreg+status,2+status,0+pclath+cstack]
  1890  0614  0020               	movlb	0	; select bank0
  1891  0615  0839               	movf	ymd_to_scalar@mo+1,w
  1892  0616  00A4               	movwf	months_to_days@month+1
  1893  0617  0838               	movf	ymd_to_scalar@mo,w
  1894  0618  00A3               	movwf	months_to_days@month
  1895  0619  318E  260E  3186   	fcall	_months_to_days
  1896  061C  0020               	movlb	0	; select bank0
  1897  061D  083A               	movf	ymd_to_scalar@day,w
  1898  061E  0723               	addwf	?_months_to_days,w
  1899  061F  00C2               	movwf	ymd_to_scalar@scalar
  1900  0620  083B               	movf	ymd_to_scalar@day+1,w
  1901  0621  3D24               	addwfc	?_months_to_days+1,w
  1902  0622  00C3               	movwf	ymd_to_scalar@scalar+1
  1903  0623  01C4               	clrf	ymd_to_scalar@scalar+2
  1904  0624  01C5               	clrf	ymd_to_scalar@scalar+3
  1905  0625  3000               	movlw	0
  1906  0626  0239               	subwf	ymd_to_scalar@mo+1,w
  1907  0627  3003               	movlw	3
  1908  0628  1903               	skipnz
  1909  0629  0238               	subwf	ymd_to_scalar@mo,w
  1910  062A  1C03               	skipc
  1911  062B  2E4F               	goto	l754
  1912  062C  0837               	movf	ymd_to_scalar@yr+1,w
  1913  062D  00F8               	movwf	isleap@yr+1
  1914  062E  0836               	movf	ymd_to_scalar@yr,w
  1915  062F  00F7               	movwf	isleap@yr
  1916  0630  318E  26F6  3186   	fcall	_isleap
  1917  0633  0877               	movf	?_isleap,w
  1918  0634  0478               	iorwf	?_isleap+1,w
  1919  0635  1D03               	btfss	3,2
  1920  0636  2E39               	goto	l2602
  1921  0637  3002               	movlw	2
  1922  0638  2E3A               	goto	L3
  1923  0639                     l2602:	
  1924  0639  3001               	movlw	1
  1925  063A                     L3:	
  1926  063A  0020               	movlb	0	; select bank0
  1927  063B  00C0               	movwf	_ymd_to_scalar$470
  1928  063C  3000               	movlw	0
  1929  063D  00C1               	movwf	_ymd_to_scalar$470+1
  1930  063E  0840               	movf	_ymd_to_scalar$470,w
  1931  063F  00BC               	movwf	??_ymd_to_scalar
  1932  0640  0841               	movf	_ymd_to_scalar$470+1,w
  1933  0641  00BD               	movwf	??_ymd_to_scalar+1
  1934  0642  3000               	movlw	0
  1935  0643  1BBD               	btfsc	??_ymd_to_scalar+1,7
  1936  0644  30FF               	movlw	255
  1937  0645  00BE               	movwf	??_ymd_to_scalar+2
  1938  0646  00BF               	movwf	??_ymd_to_scalar+3
  1939  0647  083C               	movf	??_ymd_to_scalar,w
  1940  0648  02C2               	subwf	ymd_to_scalar@scalar,f
  1941  0649  083D               	movf	??_ymd_to_scalar+1,w
  1942  064A  3BC3               	subwfb	ymd_to_scalar@scalar+1,f
  1943  064B  083E               	movf	??_ymd_to_scalar+2,w
  1944  064C  3BC4               	subwfb	ymd_to_scalar@scalar+2,f
  1945  064D  083F               	movf	??_ymd_to_scalar+3,w
  1946  064E  3BC5               	subwfb	ymd_to_scalar@scalar+3,f
  1947  064F                     l754:	
  1948  064F  3001               	movlw	1
  1949  0650  02B6               	subwf	ymd_to_scalar@yr,f
  1950  0651  3000               	movlw	0
  1951  0652  3BB7               	subwfb	ymd_to_scalar@yr+1,f
  1952  0653  0837               	movf	ymd_to_scalar@yr+1,w
  1953  0654  00A5               	movwf	years_to_days@yr+1
  1954  0655  0836               	movf	ymd_to_scalar@yr,w
  1955  0656  00A4               	movwf	years_to_days@yr
  1956  0657  3185  2540         	fcall	_years_to_days
  1957  0659  0020               	movlb	0	; select bank0
  1958  065A  0824               	movf	?_years_to_days,w
  1959  065B  07C2               	addwf	ymd_to_scalar@scalar,f
  1960  065C  0825               	movf	?_years_to_days+1,w
  1961  065D  3DC3               	addwfc	ymd_to_scalar@scalar+1,f
  1962  065E  0826               	movf	?_years_to_days+2,w
  1963  065F  3DC4               	addwfc	ymd_to_scalar@scalar+2,f
  1964  0660  0827               	movf	?_years_to_days+3,w
  1965  0661  3DC5               	addwfc	ymd_to_scalar@scalar+3,f
  1966  0662  0845               	movf	ymd_to_scalar@scalar+3,w
  1967  0663  00B9               	movwf	?_ymd_to_scalar+3
  1968  0664  0844               	movf	ymd_to_scalar@scalar+2,w
  1969  0665  00B8               	movwf	?_ymd_to_scalar+2
  1970  0666  0843               	movf	ymd_to_scalar@scalar+1,w
  1971  0667  00B7               	movwf	?_ymd_to_scalar+1
  1972  0668  0842               	movf	ymd_to_scalar@scalar,w
  1973  0669  00B6               	movwf	?_ymd_to_scalar
  1974  066A  0008               	return
  1975  066B                     __end_of_ymd_to_scalar:	
  1976                           
  1977                           	psect	text4
  1978  0540                     __ptext4:	
  1979 ;; *************** function _years_to_days *****************
  1980 ;; Defined at:
  1981 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  yr              2    4[BANK0 ] unsigned int 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  4    4[BANK0 ] long 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0, pclath, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1995 ;;      Params:         0       4       0       0
  1996 ;;      Locals:         0       0       0       0
  1997 ;;      Temps:          0      14       0       0
  1998 ;;      Totals:         0      18       0       0
  1999 ;;Total ram usage:       18 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    2
  2002 ;; This function calls:
  2003 ;;		___lmul
  2004 ;;		___lwdiv
  2005 ;; This function is called by:
  2006 ;;		_ymd_to_scalar
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function _years_to_days
  2012  0540                     _years_to_days:	
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _years_to_days: [wreg+status,2+status,0+pclath+cstack]
  2016  0540  3064               	movlw	100
  2017  0541  00F7               	movwf	___lwdiv@divisor
  2018  0542  3000               	movlw	0
  2019  0543  00F8               	movwf	___lwdiv@divisor+1
  2020  0544  0020               	movlb	0	; select bank0
  2021  0545  0825               	movf	years_to_days@yr+1,w
  2022  0546  00FA               	movwf	___lwdiv@dividend+1
  2023  0547  0824               	movf	years_to_days@yr,w
  2024  0548  00F9               	movwf	___lwdiv@dividend
  2025  0549  3187  27CA  3185   	fcall	___lwdiv
  2026  054C  0877               	movf	?___lwdiv,w
  2027  054D  0020               	movlb	0	; select bank0
  2028  054E  00A8               	movwf	??_years_to_days
  2029  054F  0878               	movf	?___lwdiv+1,w
  2030  0550  00A9               	movwf	??_years_to_days+1
  2031  0551  01AA               	clrf	??_years_to_days+2
  2032  0552  01AB               	clrf	??_years_to_days+3
  2033  0553  09A8               	comf	??_years_to_days,f
  2034  0554  09A9               	comf	??_years_to_days+1,f
  2035  0555  09AA               	comf	??_years_to_days+2,f
  2036  0556  09AB               	comf	??_years_to_days+3,f
  2037  0557  0AA8               	incf	??_years_to_days,f
  2038  0558  1903               	skipnz
  2039  0559  0AA9               	incf	??_years_to_days+1,f
  2040  055A  1903               	skipnz
  2041  055B  0AAA               	incf	??_years_to_days+2,f
  2042  055C  1903               	skipnz
  2043  055D  0AAB               	incf	??_years_to_days+3,f
  2044  055E  3090               	movlw	144
  2045  055F  00F7               	movwf	___lwdiv@divisor
  2046  0560  3001               	movlw	1
  2047  0561  00F8               	movwf	___lwdiv@divisor+1
  2048  0562  0825               	movf	years_to_days@yr+1,w
  2049  0563  00FA               	movwf	___lwdiv@dividend+1
  2050  0564  0824               	movf	years_to_days@yr,w
  2051  0565  00F9               	movwf	___lwdiv@dividend
  2052  0566  3187  27CA  3185   	fcall	___lwdiv
  2053  0569  0877               	movf	?___lwdiv,w
  2054  056A  0020               	movlb	0	; select bank0
  2055  056B  00AC               	movwf	??_years_to_days+4
  2056  056C  0878               	movf	?___lwdiv+1,w
  2057  056D  00AD               	movwf	??_years_to_days+5
  2058  056E  01AE               	clrf	??_years_to_days+6
  2059  056F  01AF               	clrf	??_years_to_days+7
  2060  0570  0825               	movf	years_to_days@yr+1,w
  2061  0571  00B1               	movwf	??_years_to_days+9
  2062  0572  0824               	movf	years_to_days@yr,w
  2063  0573  00B0               	movwf	??_years_to_days+8
  2064  0574  36B1               	lsrf	??_years_to_days+9,f
  2065  0575  0CB0               	rrf	??_years_to_days+8,f
  2066  0576  36B1               	lsrf	??_years_to_days+9,f
  2067  0577  0CB0               	rrf	??_years_to_days+8,f
  2068  0578  0830               	movf	??_years_to_days+8,w
  2069  0579  00B2               	movwf	??_years_to_days+10
  2070  057A  0831               	movf	??_years_to_days+9,w
  2071  057B  00B3               	movwf	??_years_to_days+11
  2072  057C  01B4               	clrf	??_years_to_days+12
  2073  057D  01B5               	clrf	??_years_to_days+13
  2074  057E  0824               	movf	years_to_days@yr,w
  2075  057F  00F1               	movwf	___lmul@multiplier
  2076  0580  0825               	movf	years_to_days@yr+1,w
  2077  0581  00F2               	movwf	___lmul@multiplier+1
  2078  0582  01F3               	clrf	___lmul@multiplier+2
  2079  0583  01F4               	clrf	___lmul@multiplier+3
  2080  0584  3000               	movlw	0
  2081  0585  00F8               	movwf	___lmul@multiplicand+3
  2082  0586  3000               	movlw	0
  2083  0587  00F7               	movwf	___lmul@multiplicand+2
  2084  0588  3001               	movlw	1
  2085  0589  00F6               	movwf	___lmul@multiplicand+1
  2086  058A  306D               	movlw	109
  2087  058B  00F5               	movwf	___lmul@multiplicand
  2088  058C  318F  2727         	fcall	___lmul
  2089  058E  0871               	movf	?___lmul,w
  2090  058F  0020               	movlb	0	; select bank0
  2091  0590  07B2               	addwf	??_years_to_days+10,f
  2092  0591  0872               	movf	?___lmul+1,w
  2093  0592  3DB3               	addwfc	??_years_to_days+11,f
  2094  0593  0873               	movf	?___lmul+2,w
  2095  0594  3DB4               	addwfc	??_years_to_days+12,f
  2096  0595  0874               	movf	?___lmul+3,w
  2097  0596  3DB5               	addwfc	??_years_to_days+13,f
  2098  0597  0832               	movf	??_years_to_days+10,w
  2099  0598  07AC               	addwf	??_years_to_days+4,f
  2100  0599  0833               	movf	??_years_to_days+11,w
  2101  059A  3DAD               	addwfc	??_years_to_days+5,f
  2102  059B  0834               	movf	??_years_to_days+12,w
  2103  059C  3DAE               	addwfc	??_years_to_days+6,f
  2104  059D  0835               	movf	??_years_to_days+13,w
  2105  059E  3DAF               	addwfc	??_years_to_days+7,f
  2106  059F  082C               	movf	??_years_to_days+4,w
  2107  05A0  07A8               	addwf	??_years_to_days,f
  2108  05A1  082D               	movf	??_years_to_days+5,w
  2109  05A2  3DA9               	addwfc	??_years_to_days+1,f
  2110  05A3  082E               	movf	??_years_to_days+6,w
  2111  05A4  3DAA               	addwfc	??_years_to_days+2,f
  2112  05A5  082F               	movf	??_years_to_days+7,w
  2113  05A6  3DAB               	addwfc	??_years_to_days+3,f
  2114  05A7  082B               	movf	??_years_to_days+3,w
  2115  05A8  00A7               	movwf	?_years_to_days+3
  2116  05A9  082A               	movf	??_years_to_days+2,w
  2117  05AA  00A6               	movwf	?_years_to_days+2
  2118  05AB  0829               	movf	??_years_to_days+1,w
  2119  05AC  00A5               	movwf	?_years_to_days+1
  2120  05AD  0828               	movf	??_years_to_days,w
  2121  05AE  00A4               	movwf	?_years_to_days
  2122  05AF  0008               	return
  2123  05B0                     __end_of_years_to_days:	
  2124                           
  2125                           	psect	text5
  2126  0F27                     __ptext5:	
  2127 ;; *************** function ___lmul *****************
  2128 ;; Defined at:
  2129 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  multiplier      4    1[COMMON] unsigned long 
  2132 ;;  multiplicand    4    5[COMMON] unsigned long 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  product         4    0[BANK0 ] unsigned long 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  4    1[COMMON] unsigned long 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2144 ;;      Params:         8       0       0       0
  2145 ;;      Locals:         0       4       0       0
  2146 ;;      Temps:          0       0       0       0
  2147 ;;      Totals:         8       4       0       0
  2148 ;;Total ram usage:       12 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_getTimeDifference
  2155 ;;		_years_to_days
  2156 ;;		_mktime
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           
  2161                           ;psect for function ___lmul
  2162  0F27                     ___lmul:	
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2166  0F27  3000               	movlw	0
  2167  0F28  0020               	movlb	0	; select bank0
  2168  0F29  00A3               	movwf	___lmul@product+3
  2169  0F2A  3000               	movlw	0
  2170  0F2B  00A2               	movwf	___lmul@product+2
  2171  0F2C  3000               	movlw	0
  2172  0F2D  00A1               	movwf	___lmul@product+1
  2173  0F2E  3000               	movlw	0
  2174  0F2F  00A0               	movwf	___lmul@product
  2175  0F30                     l2414:	
  2176  0F30  1C71               	btfss	___lmul@multiplier,0
  2177  0F31  2F3B               	goto	l2418
  2178  0F32  0875               	movf	___lmul@multiplicand,w
  2179  0F33  0020               	movlb	0	; select bank0
  2180  0F34  07A0               	addwf	___lmul@product,f
  2181  0F35  0876               	movf	___lmul@multiplicand+1,w
  2182  0F36  3DA1               	addwfc	___lmul@product+1,f
  2183  0F37  0877               	movf	___lmul@multiplicand+2,w
  2184  0F38  3DA2               	addwfc	___lmul@product+2,f
  2185  0F39  0878               	movf	___lmul@multiplicand+3,w
  2186  0F3A  3DA3               	addwfc	___lmul@product+3,f
  2187  0F3B                     l2418:	
  2188  0F3B  3001               	movlw	1
  2189  0F3C                     u3335:	
  2190  0F3C  35F5               	lslf	___lmul@multiplicand,f
  2191  0F3D  0DF6               	rlf	___lmul@multiplicand+1,f
  2192  0F3E  0DF7               	rlf	___lmul@multiplicand+2,f
  2193  0F3F  0DF8               	rlf	___lmul@multiplicand+3,f
  2194  0F40  0B89               	decfsz	9,f
  2195  0F41  2F3C               	goto	u3335
  2196  0F42  3001               	movlw	1
  2197  0F43                     u3345:	
  2198  0F43  36F4               	lsrf	___lmul@multiplier+3,f
  2199  0F44  0CF3               	rrf	___lmul@multiplier+2,f
  2200  0F45  0CF2               	rrf	___lmul@multiplier+1,f
  2201  0F46  0CF1               	rrf	___lmul@multiplier,f
  2202  0F47  0B89               	decfsz	9,f
  2203  0F48  2F43               	goto	u3345
  2204  0F49  0874               	movf	___lmul@multiplier+3,w
  2205  0F4A  0473               	iorwf	___lmul@multiplier+2,w
  2206  0F4B  0472               	iorwf	___lmul@multiplier+1,w
  2207  0F4C  0471               	iorwf	___lmul@multiplier,w
  2208  0F4D  1D03               	skipz
  2209  0F4E  2F30               	goto	l2414
  2210  0F4F  0020               	movlb	0	; select bank0
  2211  0F50  0823               	movf	___lmul@product+3,w
  2212  0F51  00F4               	movwf	?___lmul+3
  2213  0F52  0822               	movf	___lmul@product+2,w
  2214  0F53  00F3               	movwf	?___lmul+2
  2215  0F54  0821               	movf	___lmul@product+1,w
  2216  0F55  00F2               	movwf	?___lmul+1
  2217  0F56  0820               	movf	___lmul@product,w
  2218  0F57  00F1               	movwf	?___lmul
  2219  0F58  0008               	return
  2220  0F59                     __end_of___lmul:	
  2221                           
  2222                           	psect	text6
  2223  0E0E                     __ptext6:	
  2224 ;; *************** function _months_to_days *****************
  2225 ;; Defined at:
  2226 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  month           2    3[BANK0 ] unsigned int 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  2    3[BANK0 ] unsigned int 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2240 ;;      Params:         0       2       0       0
  2241 ;;      Locals:         0       0       0       0
  2242 ;;      Temps:          0       0       0       0
  2243 ;;      Totals:         0       2       0       0
  2244 ;;Total ram usage:        2 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    2
  2247 ;; This function calls:
  2248 ;;		___lwdiv
  2249 ;;		___wmul
  2250 ;; This function is called by:
  2251 ;;		_ymd_to_scalar
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _months_to_days
  2257  0E0E                     _months_to_days:	
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _months_to_days: [wreg+status,2+status,0+pclath+cstack]
  2261  0E0E  3064               	movlw	100
  2262  0E0F  00F7               	movwf	___lwdiv@divisor
  2263  0E10  3000               	movlw	0
  2264  0E11  00F8               	movwf	___lwdiv@divisor+1
  2265  0E12  0020               	movlb	0	; select bank0
  2266  0E13  0824               	movf	months_to_days@month+1,w
  2267  0E14  00F2               	movwf	___wmul@multiplier+1
  2268  0E15  0823               	movf	months_to_days@month,w
  2269  0E16  00F1               	movwf	___wmul@multiplier
  2270  0E17  30F1               	movlw	241
  2271  0E18  00F3               	movwf	___wmul@multiplicand
  2272  0E19  300B               	movlw	11
  2273  0E1A  00F4               	movwf	___wmul@multiplicand+1
  2274  0E1B  318D  25B8  318E   	fcall	___wmul
  2275  0E1E  0871               	movf	?___wmul,w
  2276  0E1F  3E41               	addlw	65
  2277  0E20  00F9               	movwf	___lwdiv@dividend
  2278  0E21  30F4               	movlw	244
  2279  0E22  3D72               	addwfc	?___wmul+1,w
  2280  0E23  00FA               	movwf	___lwdiv@dividend+1
  2281  0E24  3187  27CA         	fcall	___lwdiv
  2282  0E26  0878               	movf	?___lwdiv+1,w
  2283  0E27  0020               	movlb	0	; select bank0
  2284  0E28  00A4               	movwf	?_months_to_days+1
  2285  0E29  0877               	movf	?___lwdiv,w
  2286  0E2A  00A3               	movwf	?_months_to_days
  2287  0E2B  0008               	return
  2288  0E2C                     __end_of_months_to_days:	
  2289                           
  2290                           	psect	text7
  2291  0DB8                     __ptext7:	
  2292 ;; *************** function ___wmul *****************
  2293 ;; Defined at:
  2294 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  multiplier      2    1[COMMON] unsigned int 
  2297 ;;  multiplicand    2    3[COMMON] unsigned int 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  product         2    5[COMMON] unsigned int 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  2    1[COMMON] unsigned int 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2309 ;;      Params:         4       0       0       0
  2310 ;;      Locals:         2       0       0       0
  2311 ;;      Temps:          0       0       0       0
  2312 ;;      Totals:         6       0       0       0
  2313 ;;Total ram usage:        6 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_months_to_days
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function ___wmul
  2325  0DB8                     ___wmul:	
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2329  0DB8  01F5               	clrf	___wmul@product
  2330  0DB9  01F6               	clrf	___wmul@product+1
  2331  0DBA                     l1658:	
  2332  0DBA  1C71               	btfss	___wmul@multiplier,0
  2333  0DBB  2DC0               	goto	l386
  2334  0DBC  0873               	movf	___wmul@multiplicand,w
  2335  0DBD  07F5               	addwf	___wmul@product,f
  2336  0DBE  0874               	movf	___wmul@multiplicand+1,w
  2337  0DBF  3DF6               	addwfc	___wmul@product+1,f
  2338  0DC0                     l386:	
  2339  0DC0  3001               	movlw	1
  2340  0DC1                     u1755:	
  2341  0DC1  35F3               	lslf	___wmul@multiplicand,f
  2342  0DC2  0DF4               	rlf	___wmul@multiplicand+1,f
  2343  0DC3  0B89               	decfsz	9,f
  2344  0DC4  2DC1               	goto	u1755
  2345  0DC5  3001               	movlw	1
  2346  0DC6                     u1765:	
  2347  0DC6  36F2               	lsrf	___wmul@multiplier+1,f
  2348  0DC7  0CF1               	rrf	___wmul@multiplier,f
  2349  0DC8  0B89               	decfsz	9,f
  2350  0DC9  2DC6               	goto	u1765
  2351  0DCA  0871               	movf	___wmul@multiplier,w
  2352  0DCB  0472               	iorwf	___wmul@multiplier+1,w
  2353  0DCC  1D03               	btfss	3,2
  2354  0DCD  2DBA               	goto	l1658
  2355  0DCE  0876               	movf	___wmul@product+1,w
  2356  0DCF  00F2               	movwf	?___wmul+1
  2357  0DD0  0875               	movf	___wmul@product,w
  2358  0DD1  00F1               	movwf	?___wmul
  2359  0DD2  0008               	return
  2360  0DD3                     __end_of___wmul:	
  2361                           
  2362                           	psect	text8
  2363  07CA                     __ptext8:	
  2364 ;; *************** function ___lwdiv *****************
  2365 ;; Defined at:
  2366 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  divisor         2    7[COMMON] unsigned int 
  2369 ;;  dividend        2    9[COMMON] unsigned int 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  quotient        2    0[BANK0 ] unsigned int 
  2372 ;;  counter         1    2[BANK0 ] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2    7[COMMON] unsigned int 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2382 ;;      Params:         4       0       0       0
  2383 ;;      Locals:         0       3       0       0
  2384 ;;      Temps:          1       0       0       0
  2385 ;;      Totals:         5       3       0       0
  2386 ;;Total ram usage:        8 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_months_to_days
  2393 ;;		_years_to_days
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function ___lwdiv
  2399  07CA                     ___lwdiv:	
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2403  07CA  0020               	movlb	0	; select bank0
  2404  07CB  01A0               	clrf	___lwdiv@quotient
  2405  07CC  01A1               	clrf	___lwdiv@quotient+1
  2406  07CD  0877               	movf	___lwdiv@divisor,w
  2407  07CE  0478               	iorwf	___lwdiv@divisor+1,w
  2408  07CF  1903               	btfsc	3,2
  2409  07D0  2FFA               	goto	l1750
  2410  07D1  01A2               	clrf	___lwdiv@counter
  2411  07D2  0AA2               	incf	___lwdiv@counter,f
  2412  07D3                     l1738:	
  2413  07D3  1BF8               	btfsc	___lwdiv@divisor+1,7
  2414  07D4  2FDF               	goto	l1740
  2415  07D5  3001               	movlw	1
  2416  07D6                     u1935:	
  2417  07D6  35F7               	lslf	___lwdiv@divisor,f
  2418  07D7  0DF8               	rlf	___lwdiv@divisor+1,f
  2419  07D8  0B89               	decfsz	9,f
  2420  07D9  2FD6               	goto	u1935
  2421  07DA  3001               	movlw	1
  2422  07DB  00FB               	movwf	??___lwdiv
  2423  07DC  087B               	movf	??___lwdiv,w
  2424  07DD  07A2               	addwf	___lwdiv@counter,f
  2425  07DE  2FD3               	goto	l1738
  2426  07DF                     l1740:	
  2427  07DF  3001               	movlw	1
  2428  07E0                     u1955:	
  2429  07E0  35A0               	lslf	___lwdiv@quotient,f
  2430  07E1  0DA1               	rlf	___lwdiv@quotient+1,f
  2431  07E2  0B89               	decfsz	9,f
  2432  07E3  2FE0               	goto	u1955
  2433  07E4  0878               	movf	___lwdiv@divisor+1,w
  2434  07E5  027A               	subwf	___lwdiv@dividend+1,w
  2435  07E6  1D03               	skipz
  2436  07E7  2FEA               	goto	u1965
  2437  07E8  0877               	movf	___lwdiv@divisor,w
  2438  07E9  0279               	subwf	___lwdiv@dividend,w
  2439  07EA                     u1965:	
  2440  07EA  1C03               	skipc
  2441  07EB  2FF1               	goto	l1746
  2442  07EC  0877               	movf	___lwdiv@divisor,w
  2443  07ED  02F9               	subwf	___lwdiv@dividend,f
  2444  07EE  0878               	movf	___lwdiv@divisor+1,w
  2445  07EF  3BFA               	subwfb	___lwdiv@dividend+1,f
  2446  07F0  1420               	bsf	___lwdiv@quotient,0
  2447  07F1                     l1746:	
  2448  07F1  3001               	movlw	1
  2449  07F2                     u1975:	
  2450  07F2  36F8               	lsrf	___lwdiv@divisor+1,f
  2451  07F3  0CF7               	rrf	___lwdiv@divisor,f
  2452  07F4  0B89               	decfsz	9,f
  2453  07F5  2FF2               	goto	u1975
  2454  07F6  3001               	movlw	1
  2455  07F7  02A2               	subwf	___lwdiv@counter,f
  2456  07F8  1D03               	btfss	3,2
  2457  07F9  2FDF               	goto	l1740
  2458  07FA                     l1750:	
  2459  07FA  0821               	movf	___lwdiv@quotient+1,w
  2460  07FB  00F8               	movwf	?___lwdiv+1
  2461  07FC  0820               	movf	___lwdiv@quotient,w
  2462  07FD  00F7               	movwf	?___lwdiv
  2463  07FE  0008               	return
  2464  07FF                     __end_of___lwdiv:	
  2465                           
  2466                           	psect	text9
  2467  0EF6                     __ptext9:	
  2468 ;; *************** function _isleap *****************
  2469 ;; Defined at:
  2470 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\mktime.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  yr              2    7[COMMON] unsigned int 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2    7[COMMON] int 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2484 ;;      Params:         2       0       0       0
  2485 ;;      Locals:         1       0       0       0
  2486 ;;      Temps:          2       0       0       0
  2487 ;;      Totals:         5       0       0       0
  2488 ;;Total ram usage:        5 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    2
  2491 ;; This function calls:
  2492 ;;		___lwmod
  2493 ;; This function is called by:
  2494 ;;		_ymd_to_scalar
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _isleap
  2500  0EF6                     _isleap:	
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _isleap: [wreg+status,2+status,0+pclath+cstack]
  2504  0EF6  01FB               	clrf	_isleap$458
  2505  0EF7  0AFB               	incf	_isleap$458,f
  2506  0EF8  3090               	movlw	144
  2507  0EF9  00F1               	movwf	___lwmod@divisor
  2508  0EFA  3001               	movlw	1
  2509  0EFB  00F2               	movwf	___lwmod@divisor+1
  2510  0EFC  0878               	movf	isleap@yr+1,w
  2511  0EFD  00F4               	movwf	___lwmod@dividend+1
  2512  0EFE  0877               	movf	isleap@yr,w
  2513  0EFF  00F3               	movwf	___lwmod@dividend
  2514  0F00  318E  269B  318E   	fcall	___lwmod
  2515  0F03  0871               	movf	?___lwmod,w
  2516  0F04  0472               	iorwf	?___lwmod+1,w
  2517  0F05  1903               	btfsc	3,2
  2518  0F06  2F1F               	goto	l1832
  2519  0F07  3003               	movlw	3
  2520  0F08  0577               	andwf	isleap@yr,w
  2521  0F09  00F9               	movwf	??_isleap
  2522  0F0A  3000               	movlw	0
  2523  0F0B  0578               	andwf	isleap@yr+1,w
  2524  0F0C  00FA               	movwf	??_isleap+1
  2525  0F0D  0879               	movf	??_isleap,w
  2526  0F0E  047A               	iorwf	??_isleap+1,w
  2527  0F0F  1D03               	btfss	3,2
  2528  0F10  2F1E               	goto	l1830
  2529  0F11  3064               	movlw	100
  2530  0F12  00F1               	movwf	___lwmod@divisor
  2531  0F13  3000               	movlw	0
  2532  0F14  00F2               	movwf	___lwmod@divisor+1
  2533  0F15  0878               	movf	isleap@yr+1,w
  2534  0F16  00F4               	movwf	___lwmod@dividend+1
  2535  0F17  0877               	movf	isleap@yr,w
  2536  0F18  00F3               	movwf	___lwmod@dividend
  2537  0F19  318E  269B         	fcall	___lwmod
  2538  0F1B  0871               	movf	?___lwmod,w
  2539  0F1C  0472               	iorwf	?___lwmod+1,w
  2540  0F1D  1903               	btfsc	3,2
  2541  0F1E                     l1830:	
  2542  0F1E  01FB               	clrf	_isleap$458
  2543  0F1F                     l1832:	
  2544  0F1F  087B               	movf	_isleap$458,w
  2545  0F20  00F9               	movwf	??_isleap
  2546  0F21  01FA               	clrf	??_isleap+1
  2547  0F22  0879               	movf	??_isleap,w
  2548  0F23  00F7               	movwf	?_isleap
  2549  0F24  087A               	movf	??_isleap+1,w
  2550  0F25  00F8               	movwf	?_isleap+1
  2551  0F26  0008               	return
  2552  0F27                     __end_of_isleap:	
  2553                           
  2554                           	psect	text10
  2555  0E9B                     __ptext10:	
  2556 ;; *************** function ___lwmod *****************
  2557 ;; Defined at:
  2558 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  divisor         2    1[COMMON] unsigned int 
  2561 ;;  dividend        2    3[COMMON] unsigned int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  counter         1    6[COMMON] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    1[COMMON] unsigned int 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         4       0       0       0
  2574 ;;      Locals:         1       0       0       0
  2575 ;;      Temps:          1       0       0       0
  2576 ;;      Totals:         6       0       0       0
  2577 ;;Total ram usage:        6 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_isleap
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function ___lwmod
  2589  0E9B                     ___lwmod:	
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2593  0E9B  0871               	movf	___lwmod@divisor,w
  2594  0E9C  0472               	iorwf	___lwmod@divisor+1,w
  2595  0E9D  1903               	btfsc	3,2
  2596  0E9E  2EC2               	goto	l1772
  2597  0E9F  01F6               	clrf	___lwmod@counter
  2598  0EA0  0AF6               	incf	___lwmod@counter,f
  2599  0EA1                     l1762:	
  2600  0EA1  1BF2               	btfsc	___lwmod@divisor+1,7
  2601  0EA2  2EAD               	goto	l1764
  2602  0EA3  3001               	movlw	1
  2603  0EA4                     u2005:	
  2604  0EA4  35F1               	lslf	___lwmod@divisor,f
  2605  0EA5  0DF2               	rlf	___lwmod@divisor+1,f
  2606  0EA6  0B89               	decfsz	9,f
  2607  0EA7  2EA4               	goto	u2005
  2608  0EA8  3001               	movlw	1
  2609  0EA9  00F5               	movwf	??___lwmod
  2610  0EAA  0875               	movf	??___lwmod,w
  2611  0EAB  07F6               	addwf	___lwmod@counter,f
  2612  0EAC  2EA1               	goto	l1762
  2613  0EAD                     l1764:	
  2614  0EAD  0872               	movf	___lwmod@divisor+1,w
  2615  0EAE  0274               	subwf	___lwmod@dividend+1,w
  2616  0EAF  1D03               	skipz
  2617  0EB0  2EB3               	goto	u2025
  2618  0EB1  0871               	movf	___lwmod@divisor,w
  2619  0EB2  0273               	subwf	___lwmod@dividend,w
  2620  0EB3                     u2025:	
  2621  0EB3  1C03               	skipc
  2622  0EB4  2EB9               	goto	l1768
  2623  0EB5  0871               	movf	___lwmod@divisor,w
  2624  0EB6  02F3               	subwf	___lwmod@dividend,f
  2625  0EB7  0872               	movf	___lwmod@divisor+1,w
  2626  0EB8  3BF4               	subwfb	___lwmod@dividend+1,f
  2627  0EB9                     l1768:	
  2628  0EB9  3001               	movlw	1
  2629  0EBA                     u2035:	
  2630  0EBA  36F2               	lsrf	___lwmod@divisor+1,f
  2631  0EBB  0CF1               	rrf	___lwmod@divisor,f
  2632  0EBC  0B89               	decfsz	9,f
  2633  0EBD  2EBA               	goto	u2035
  2634  0EBE  3001               	movlw	1
  2635  0EBF  02F6               	subwf	___lwmod@counter,f
  2636  0EC0  1D03               	btfss	3,2
  2637  0EC1  2EAD               	goto	l1764
  2638  0EC2                     l1772:	
  2639  0EC2  0874               	movf	___lwmod@dividend+1,w
  2640  0EC3  00F2               	movwf	?___lwmod+1
  2641  0EC4  0873               	movf	___lwmod@dividend,w
  2642  0EC5  00F1               	movwf	?___lwmod
  2643  0EC6  0008               	return
  2644  0EC7                     __end_of___lwmod:	
  2645                           
  2646                           	psect	text11
  2647  0E70                     __ptext11:	
  2648 ;; *************** function ___lltoft *****************
  2649 ;; Defined at:
  2650 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lltoft.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  c               4    4[BANK0 ] unsigned long 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  exp             1   10[COMMON] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  3    4[BANK0 ] float 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2664 ;;      Params:         0       4       0       0
  2665 ;;      Locals:         1       0       0       0
  2666 ;;      Temps:          1       0       0       0
  2667 ;;      Totals:         2       4       0       0
  2668 ;;Total ram usage:        6 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    2
  2671 ;; This function calls:
  2672 ;;		___ftpack
  2673 ;; This function is called by:
  2674 ;;		_getTimeDifference
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function ___lltoft
  2680  0E70                     ___lltoft:	
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2684  0E70  308E               	movlw	142
  2685  0E71  00F9               	movwf	??___lltoft
  2686  0E72  0879               	movf	??___lltoft,w
  2687  0E73  00FA               	movwf	___lltoft@exp
  2688  0E74                     l2738:	
  2689  0E74  30FF               	movlw	255
  2690  0E75  0020               	movlb	0	; select bank0
  2691  0E76  0527               	andwf	___lltoft@c+3,w
  2692  0E77  1903               	btfsc	3,2
  2693  0E78  2E86               	goto	l2740
  2694  0E79  3001               	movlw	1
  2695  0E7A                     u4105:	
  2696  0E7A  0020               	movlb	0	; select bank0
  2697  0E7B  36A7               	lsrf	___lltoft@c+3,f
  2698  0E7C  0CA6               	rrf	___lltoft@c+2,f
  2699  0E7D  0CA5               	rrf	___lltoft@c+1,f
  2700  0E7E  0CA4               	rrf	___lltoft@c,f
  2701  0E7F  0B89               	decfsz	9,f
  2702  0E80  2E7A               	goto	u4105
  2703  0E81  3001               	movlw	1
  2704  0E82  00F9               	movwf	??___lltoft
  2705  0E83  0879               	movf	??___lltoft,w
  2706  0E84  07FA               	addwf	___lltoft@exp,f
  2707  0E85  2E74               	goto	l2738
  2708  0E86                     l2740:	
  2709  0E86  0824               	movf	___lltoft@c,w
  2710  0E87  00F1               	movwf	___ftpack@arg
  2711  0E88  0825               	movf	___lltoft@c+1,w
  2712  0E89  00F2               	movwf	___ftpack@arg+1
  2713  0E8A  0826               	movf	___lltoft@c+2,w
  2714  0E8B  00F3               	movwf	___ftpack@arg+2
  2715  0E8C  087A               	movf	___lltoft@exp,w
  2716  0E8D  00F9               	movwf	??___lltoft
  2717  0E8E  0879               	movf	??___lltoft,w
  2718  0E8F  00F4               	movwf	___ftpack@exp
  2719  0E90  01F5               	clrf	___ftpack@sign
  2720  0E91  3185  25B0         	fcall	___ftpack
  2721  0E93  0871               	movf	?___ftpack,w
  2722  0E94  0020               	movlb	0	; select bank0
  2723  0E95  00A4               	movwf	?___lltoft
  2724  0E96  0872               	movf	?___ftpack+1,w
  2725  0E97  00A5               	movwf	?___lltoft+1
  2726  0E98  0873               	movf	?___ftpack+2,w
  2727  0E99  00A6               	movwf	?___lltoft+2
  2728  0E9A  0008               	return
  2729  0E9B                     __end_of___lltoft:	
  2730                           
  2731                           	psect	text12
  2732  0447                     __ptext12:	
  2733 ;; *************** function ___fttol *****************
  2734 ;; Defined at:
  2735 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  f1              3   24[BANK0 ] float 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  lval            4   33[BANK0 ] unsigned long 
  2740 ;;  exp1            1   37[BANK0 ] unsigned char 
  2741 ;;  sign1           1   32[BANK0 ] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  4   24[BANK0 ] long 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2751 ;;      Params:         0       4       0       0
  2752 ;;      Locals:         0       6       0       0
  2753 ;;      Temps:          0       4       0       0
  2754 ;;      Totals:         0      14       0       0
  2755 ;;Total ram usage:       14 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_getTimeDifference
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function ___fttol
  2767  0447                     ___fttol:	
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2771  0447  0020               	movlb	0	; select bank0
  2772  0448  0838               	movf	___fttol@f1,w
  2773  0449  00BC               	movwf	??___fttol
  2774  044A  0839               	movf	___fttol@f1+1,w
  2775  044B  00BD               	movwf	??___fttol+1
  2776  044C  083A               	movf	___fttol@f1+2,w
  2777  044D  00BE               	movwf	??___fttol+2
  2778  044E  1003               	clrc
  2779  044F  0D3D               	rlf	??___fttol+1,w
  2780  0450  0D3E               	rlf	??___fttol+2,w
  2781  0451  00BF               	movwf	??___fttol+3
  2782  0452  083F               	movf	??___fttol+3,w
  2783  0453  00C5               	movwf	___fttol@exp1
  2784  0454  0845               	movf	___fttol@exp1,w
  2785  0455  1D03               	btfss	3,2
  2786  0456  2C60               	goto	l2146
  2787  0457  3000               	movlw	0
  2788  0458  00BB               	movwf	?___fttol+3
  2789  0459  3000               	movlw	0
  2790  045A  00BA               	movwf	?___fttol+2
  2791  045B  3000               	movlw	0
  2792  045C  00B9               	movwf	?___fttol+1
  2793  045D  3000               	movlw	0
  2794  045E  00B8               	movwf	?___fttol
  2795  045F  0008               	return
  2796  0460                     l2146:	
  2797  0460  0838               	movf	___fttol@f1,w
  2798  0461  00BC               	movwf	??___fttol
  2799  0462  0839               	movf	___fttol@f1+1,w
  2800  0463  00BD               	movwf	??___fttol+1
  2801  0464  083A               	movf	___fttol@f1+2,w
  2802  0465  00BE               	movwf	??___fttol+2
  2803  0466  3017               	movlw	23
  2804  0467                     u2925:	
  2805  0467  36BE               	lsrf	??___fttol+2,f
  2806  0468  0CBD               	rrf	??___fttol+1,f
  2807  0469  0CBC               	rrf	??___fttol,f
  2808  046A  0B89               	decfsz	9,f
  2809  046B  2C67               	goto	u2925
  2810  046C  083C               	movf	??___fttol,w
  2811  046D  00BF               	movwf	??___fttol+3
  2812  046E  083F               	movf	??___fttol+3,w
  2813  046F  00C0               	movwf	___fttol@sign1
  2814  0470  17B9               	bsf	___fttol@f1+1,7
  2815  0471  30FF               	movlw	255
  2816  0472  05B8               	andwf	___fttol@f1,f
  2817  0473  30FF               	movlw	255
  2818  0474  05B9               	andwf	___fttol@f1+1,f
  2819  0475  3000               	movlw	0
  2820  0476  05BA               	andwf	___fttol@f1+2,f
  2821  0477  0838               	movf	___fttol@f1,w
  2822  0478  00C1               	movwf	___fttol@lval
  2823  0479  0839               	movf	___fttol@f1+1,w
  2824  047A  00C2               	movwf	___fttol@lval+1
  2825  047B  083A               	movf	___fttol@f1+2,w
  2826  047C  00C3               	movwf	___fttol@lval+2
  2827  047D  01C4               	clrf	___fttol@lval+3
  2828  047E  308E               	movlw	142
  2829  047F  02C5               	subwf	___fttol@exp1,f
  2830  0480  1FC5               	btfss	___fttol@exp1,7
  2831  0481  2C9E               	goto	l2166
  2832  0482  0845               	movf	___fttol@exp1,w
  2833  0483  3A80               	xorlw	128
  2834  0484  3E8F               	addlw	143
  2835  0485  1803               	skipnc
  2836  0486  2C90               	goto	l2164
  2837  0487  3000               	movlw	0
  2838  0488  00BB               	movwf	?___fttol+3
  2839  0489  3000               	movlw	0
  2840  048A  00BA               	movwf	?___fttol+2
  2841  048B  3000               	movlw	0
  2842  048C  00B9               	movwf	?___fttol+1
  2843  048D  3000               	movlw	0
  2844  048E  00B8               	movwf	?___fttol
  2845  048F  0008               	return
  2846  0490                     l2164:	
  2847  0490  3001               	movlw	1
  2848  0491                     u2955:	
  2849  0491  36C4               	lsrf	___fttol@lval+3,f
  2850  0492  0CC3               	rrf	___fttol@lval+2,f
  2851  0493  0CC2               	rrf	___fttol@lval+1,f
  2852  0494  0CC1               	rrf	___fttol@lval,f
  2853  0495  0B89               	decfsz	9,f
  2854  0496  2C91               	goto	u2955
  2855  0497  3001               	movlw	1
  2856  0498  00BC               	movwf	??___fttol
  2857  0499  083C               	movf	??___fttol,w
  2858  049A  07C5               	addwf	___fttol@exp1,f
  2859  049B  1903               	btfsc	3,2
  2860  049C  2CB7               	goto	l2174
  2861  049D  2C90               	goto	l2164
  2862  049E                     l2166:	
  2863  049E  3018               	movlw	24
  2864  049F  0245               	subwf	___fttol@exp1,w
  2865  04A0  1C03               	skipc
  2866  04A1  2CB4               	goto	l638
  2867  04A2  3000               	movlw	0
  2868  04A3  00BB               	movwf	?___fttol+3
  2869  04A4  3000               	movlw	0
  2870  04A5  00BA               	movwf	?___fttol+2
  2871  04A6  3000               	movlw	0
  2872  04A7  00B9               	movwf	?___fttol+1
  2873  04A8  3000               	movlw	0
  2874  04A9  00B8               	movwf	?___fttol
  2875  04AA  0008               	return
  2876  04AB                     l2172:	
  2877  04AB  3001               	movlw	1
  2878  04AC                     u2985:	
  2879  04AC  35C1               	lslf	___fttol@lval,f
  2880  04AD  0DC2               	rlf	___fttol@lval+1,f
  2881  04AE  0DC3               	rlf	___fttol@lval+2,f
  2882  04AF  0DC4               	rlf	___fttol@lval+3,f
  2883  04B0  0B89               	decfsz	9,f
  2884  04B1  2CAC               	goto	u2985
  2885  04B2  3001               	movlw	1
  2886  04B3  02C5               	subwf	___fttol@exp1,f
  2887  04B4                     l638:	
  2888  04B4  0845               	movf	___fttol@exp1,w
  2889  04B5  1D03               	btfss	3,2
  2890  04B6  2CAB               	goto	l2172
  2891  04B7                     l2174:	
  2892  04B7  0840               	movf	___fttol@sign1,w
  2893  04B8  1903               	btfsc	3,2
  2894  04B9  2CC5               	goto	l2178
  2895  04BA  09C1               	comf	___fttol@lval,f
  2896  04BB  09C2               	comf	___fttol@lval+1,f
  2897  04BC  09C3               	comf	___fttol@lval+2,f
  2898  04BD  09C4               	comf	___fttol@lval+3,f
  2899  04BE  0AC1               	incf	___fttol@lval,f
  2900  04BF  1903               	skipnz
  2901  04C0  0AC2               	incf	___fttol@lval+1,f
  2902  04C1  1903               	skipnz
  2903  04C2  0AC3               	incf	___fttol@lval+2,f
  2904  04C3  1903               	skipnz
  2905  04C4  0AC4               	incf	___fttol@lval+3,f
  2906  04C5                     l2178:	
  2907  04C5  0844               	movf	___fttol@lval+3,w
  2908  04C6  00BB               	movwf	?___fttol+3
  2909  04C7  0843               	movf	___fttol@lval+2,w
  2910  04C8  00BA               	movwf	?___fttol+2
  2911  04C9  0842               	movf	___fttol@lval+1,w
  2912  04CA  00B9               	movwf	?___fttol+1
  2913  04CB  0841               	movf	___fttol@lval,w
  2914  04CC  00B8               	movwf	?___fttol
  2915  04CD  0008               	return
  2916  04CE                     __end_of___fttol:	
  2917                           
  2918                           	psect	text13
  2919  0DF0                     __ptext13:	
  2920 ;; *************** function ___ftsub *****************
  2921 ;; Defined at:
  2922 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftsub.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  f2              3   10[BANK0 ] float 
  2925 ;;  f1              3   13[BANK0 ] float 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  3   10[BANK0 ] float 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2937 ;;      Params:         0       6       0       0
  2938 ;;      Locals:         0       0       0       0
  2939 ;;      Temps:          0       0       0       0
  2940 ;;      Totals:         0       6       0       0
  2941 ;;Total ram usage:        6 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    3
  2944 ;; This function calls:
  2945 ;;		___ftadd
  2946 ;; This function is called by:
  2947 ;;		_getTimeDifference
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function ___ftsub
  2953  0DF0                     ___ftsub:	
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  2957  0DF0  0020               	movlb	0	; select bank0
  2958  0DF1  082C               	movf	___ftsub@f2+2,w
  2959  0DF2  042B               	iorwf	___ftsub@f2+1,w
  2960  0DF3  042A               	iorwf	___ftsub@f2,w
  2961  0DF4  1903               	skipnz
  2962  0DF5  2DF8               	goto	l2730
  2963  0DF6  3080               	movlw	128
  2964  0DF7  06AC               	xorwf	___ftsub@f2+2,f
  2965  0DF8                     l2730:	
  2966  0DF8  082D               	movf	___ftsub@f1,w
  2967  0DF9  00A0               	movwf	___ftadd@f1
  2968  0DFA  082E               	movf	___ftsub@f1+1,w
  2969  0DFB  00A1               	movwf	___ftadd@f1+1
  2970  0DFC  082F               	movf	___ftsub@f1+2,w
  2971  0DFD  00A2               	movwf	___ftadd@f1+2
  2972  0DFE  082A               	movf	___ftsub@f2,w
  2973  0DFF  00A3               	movwf	___ftadd@f2
  2974  0E00  082B               	movf	___ftsub@f2+1,w
  2975  0E01  00A4               	movwf	___ftadd@f2+1
  2976  0E02  082C               	movf	___ftsub@f2+2,w
  2977  0E03  00A5               	movwf	___ftadd@f2+2
  2978  0E04  3182  22A8         	fcall	___ftadd
  2979  0E06  0020               	movlb	0	; select bank0
  2980  0E07  0820               	movf	?___ftadd,w
  2981  0E08  00AA               	movwf	?___ftsub
  2982  0E09  0821               	movf	?___ftadd+1,w
  2983  0E0A  00AB               	movwf	?___ftsub+1
  2984  0E0B  0822               	movf	?___ftadd+2,w
  2985  0E0C  00AC               	movwf	?___ftsub+2
  2986  0E0D  0008               	return
  2987  0E0E                     __end_of___ftsub:	
  2988                           
  2989                           	psect	text14
  2990  02A8                     __ptext14:	
  2991 ;; *************** function ___ftadd *****************
  2992 ;; Defined at:
  2993 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  f1              3    0[BANK0 ] float 
  2996 ;;  f2              3    3[BANK0 ] float 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  exp1            1   11[COMMON] unsigned char 
  2999 ;;  exp2            1   10[COMMON] unsigned char 
  3000 ;;  sign            1    9[COMMON] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  3    0[BANK0 ] float 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3010 ;;      Params:         0       6       0       0
  3011 ;;      Locals:         3       0       0       0
  3012 ;;      Temps:          0       4       0       0
  3013 ;;      Totals:         3      10       0       0
  3014 ;;Total ram usage:       13 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    2
  3017 ;; This function calls:
  3018 ;;		___ftpack
  3019 ;; This function is called by:
  3020 ;;		___ftsub
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function ___ftadd
  3026  02A8                     ___ftadd:	
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3030  02A8  0020               	movlb	0	; select bank0
  3031  02A9  0820               	movf	___ftadd@f1,w
  3032  02AA  00A6               	movwf	??___ftadd
  3033  02AB  0821               	movf	___ftadd@f1+1,w
  3034  02AC  00A7               	movwf	??___ftadd+1
  3035  02AD  0822               	movf	___ftadd@f1+2,w
  3036  02AE  00A8               	movwf	??___ftadd+2
  3037  02AF  1003               	clrc
  3038  02B0  0D27               	rlf	??___ftadd+1,w
  3039  02B1  0D28               	rlf	??___ftadd+2,w
  3040  02B2  00A9               	movwf	??___ftadd+3
  3041  02B3  0829               	movf	??___ftadd+3,w
  3042  02B4  00FB               	movwf	___ftadd@exp1
  3043  02B5  0823               	movf	___ftadd@f2,w
  3044  02B6  00A6               	movwf	??___ftadd
  3045  02B7  0824               	movf	___ftadd@f2+1,w
  3046  02B8  00A7               	movwf	??___ftadd+1
  3047  02B9  0825               	movf	___ftadd@f2+2,w
  3048  02BA  00A8               	movwf	??___ftadd+2
  3049  02BB  1003               	clrc
  3050  02BC  0D27               	rlf	??___ftadd+1,w
  3051  02BD  0D28               	rlf	??___ftadd+2,w
  3052  02BE  00A9               	movwf	??___ftadd+3
  3053  02BF  0829               	movf	??___ftadd+3,w
  3054  02C0  00FA               	movwf	___ftadd@exp2
  3055  02C1  087B               	movf	___ftadd@exp1,w
  3056  02C2  1903               	btfsc	3,2
  3057  02C3  2AD0               	goto	l2530
  3058  02C4  087A               	movf	___ftadd@exp2,w
  3059  02C5  027B               	subwf	___ftadd@exp1,w
  3060  02C6  1803               	skipnc
  3061  02C7  2AD7               	goto	l2534
  3062  02C8  037B               	decf	___ftadd@exp1,w
  3063  02C9  3AFF               	xorlw	255
  3064  02CA  077A               	addwf	___ftadd@exp2,w
  3065  02CB  00A6               	movwf	??___ftadd
  3066  02CC  3019               	movlw	25
  3067  02CD  0226               	subwf	??___ftadd,w
  3068  02CE  1C03               	skipc
  3069  02CF  2AD7               	goto	l2534
  3070  02D0                     l2530:	
  3071  02D0  0823               	movf	___ftadd@f2,w
  3072  02D1  00A0               	movwf	?___ftadd
  3073  02D2  0824               	movf	___ftadd@f2+1,w
  3074  02D3  00A1               	movwf	?___ftadd+1
  3075  02D4  0825               	movf	___ftadd@f2+2,w
  3076  02D5  00A2               	movwf	?___ftadd+2
  3077  02D6  0008               	return
  3078  02D7                     l2534:	
  3079  02D7  087A               	movf	___ftadd@exp2,w
  3080  02D8  1903               	btfsc	3,2
  3081  02D9  0008               	return
  3082  02DA  087B               	movf	___ftadd@exp1,w
  3083  02DB  027A               	subwf	___ftadd@exp2,w
  3084  02DC  1803               	skipnc
  3085  02DD  2AE6               	goto	l2540
  3086  02DE  037A               	decf	___ftadd@exp2,w
  3087  02DF  3AFF               	xorlw	255
  3088  02E0  077B               	addwf	___ftadd@exp1,w
  3089  02E1  00A6               	movwf	??___ftadd
  3090  02E2  3019               	movlw	25
  3091  02E3  0226               	subwf	??___ftadd,w
  3092  02E4  1803               	btfsc	3,0
  3093  02E5  0008               	return
  3094  02E6                     l2540:	
  3095  02E6  3006               	movlw	6
  3096  02E7  00A6               	movwf	??___ftadd
  3097  02E8  0826               	movf	??___ftadd,w
  3098  02E9  00F9               	movwf	___ftadd@sign
  3099  02EA  1BA2               	btfsc	___ftadd@f1+2,7
  3100  02EB  17F9               	bsf	___ftadd@sign,7
  3101  02EC  1BA5               	btfsc	___ftadd@f2+2,7
  3102  02ED  1779               	bsf	___ftadd@sign,6
  3103  02EE  17A1               	bsf	___ftadd@f1+1,7
  3104  02EF  30FF               	movlw	255
  3105  02F0  05A0               	andwf	___ftadd@f1,f
  3106  02F1  30FF               	movlw	255
  3107  02F2  05A1               	andwf	___ftadd@f1+1,f
  3108  02F3  3000               	movlw	0
  3109  02F4  05A2               	andwf	___ftadd@f1+2,f
  3110  02F5  17A4               	bsf	___ftadd@f2+1,7
  3111  02F6  30FF               	movlw	255
  3112  02F7  05A3               	andwf	___ftadd@f2,f
  3113  02F8  30FF               	movlw	255
  3114  02F9  05A4               	andwf	___ftadd@f2+1,f
  3115  02FA  3000               	movlw	0
  3116  02FB  05A5               	andwf	___ftadd@f2+2,f
  3117  02FC  087A               	movf	___ftadd@exp2,w
  3118  02FD  027B               	subwf	___ftadd@exp1,w
  3119  02FE  1803               	skipnc
  3120  02FF  2B22               	goto	l2562
  3121  0300                     l2552:	
  3122  0300  3001               	movlw	1
  3123  0301                     u3735:	
  3124  0301  35A3               	lslf	___ftadd@f2,f
  3125  0302  0DA4               	rlf	___ftadd@f2+1,f
  3126  0303  0DA5               	rlf	___ftadd@f2+2,f
  3127  0304  0B89               	decfsz	9,f
  3128  0305  2B01               	goto	u3735
  3129  0306  3001               	movlw	1
  3130  0307  02FA               	subwf	___ftadd@exp2,f
  3131  0308  087A               	movf	___ftadd@exp2,w
  3132  0309  067B               	xorwf	___ftadd@exp1,w
  3133  030A  1903               	skipnz
  3134  030B  2B1D               	goto	l2560
  3135  030C  3001               	movlw	1
  3136  030D  02F9               	subwf	___ftadd@sign,f
  3137  030E  0879               	movf	___ftadd@sign,w
  3138  030F  3907               	andlw	7
  3139  0310  1903               	btfsc	3,2
  3140  0311  2B1D               	goto	l2560
  3141  0312  2B00               	goto	l2552
  3142  0313                     l2558:	
  3143  0313  3001               	movlw	1
  3144  0314                     u3765:	
  3145  0314  36A2               	lsrf	___ftadd@f1+2,f
  3146  0315  0CA1               	rrf	___ftadd@f1+1,f
  3147  0316  0CA0               	rrf	___ftadd@f1,f
  3148  0317  0B89               	decfsz	9,f
  3149  0318  2B14               	goto	u3765
  3150  0319  3001               	movlw	1
  3151  031A  00A6               	movwf	??___ftadd
  3152  031B  0826               	movf	??___ftadd,w
  3153  031C  07FB               	addwf	___ftadd@exp1,f
  3154  031D                     l2560:	
  3155  031D  087B               	movf	___ftadd@exp1,w
  3156  031E  067A               	xorwf	___ftadd@exp2,w
  3157  031F  1903               	btfsc	3,2
  3158  0320  2B47               	goto	l578
  3159  0321  2B13               	goto	l2558
  3160  0322                     l2562:	
  3161  0322  087B               	movf	___ftadd@exp1,w
  3162  0323  027A               	subwf	___ftadd@exp2,w
  3163  0324  1803               	skipnc
  3164  0325  2B47               	goto	l578
  3165  0326                     l2564:	
  3166  0326  3001               	movlw	1
  3167  0327                     u3795:	
  3168  0327  35A0               	lslf	___ftadd@f1,f
  3169  0328  0DA1               	rlf	___ftadd@f1+1,f
  3170  0329  0DA2               	rlf	___ftadd@f1+2,f
  3171  032A  0B89               	decfsz	9,f
  3172  032B  2B27               	goto	u3795
  3173  032C  3001               	movlw	1
  3174  032D  02FB               	subwf	___ftadd@exp1,f
  3175  032E  087A               	movf	___ftadd@exp2,w
  3176  032F  067B               	xorwf	___ftadd@exp1,w
  3177  0330  1903               	skipnz
  3178  0331  2B43               	goto	l2572
  3179  0332  3001               	movlw	1
  3180  0333  02F9               	subwf	___ftadd@sign,f
  3181  0334  0879               	movf	___ftadd@sign,w
  3182  0335  3907               	andlw	7
  3183  0336  1903               	btfsc	3,2
  3184  0337  2B43               	goto	l2572
  3185  0338  2B26               	goto	l2564
  3186  0339                     l2570:	
  3187  0339  3001               	movlw	1
  3188  033A                     u3825:	
  3189  033A  36A5               	lsrf	___ftadd@f2+2,f
  3190  033B  0CA4               	rrf	___ftadd@f2+1,f
  3191  033C  0CA3               	rrf	___ftadd@f2,f
  3192  033D  0B89               	decfsz	9,f
  3193  033E  2B3A               	goto	u3825
  3194  033F  3001               	movlw	1
  3195  0340  00A6               	movwf	??___ftadd
  3196  0341  0826               	movf	??___ftadd,w
  3197  0342  07FA               	addwf	___ftadd@exp2,f
  3198  0343                     l2572:	
  3199  0343  087B               	movf	___ftadd@exp1,w
  3200  0344  067A               	xorwf	___ftadd@exp2,w
  3201  0345  1D03               	skipz
  3202  0346  2B39               	goto	l2570
  3203  0347                     l578:	
  3204  0347  1FF9               	btfss	___ftadd@sign,7
  3205  0348  2B59               	goto	l2576
  3206  0349  30FF               	movlw	255
  3207  034A  06A0               	xorwf	___ftadd@f1,f
  3208  034B  30FF               	movlw	255
  3209  034C  06A1               	xorwf	___ftadd@f1+1,f
  3210  034D  30FF               	movlw	255
  3211  034E  06A2               	xorwf	___ftadd@f1+2,f
  3212  034F  3001               	movlw	1
  3213  0350  07A0               	addwf	___ftadd@f1,f
  3214  0351  3000               	movlw	0
  3215  0352  1803               	skipnc
  3216  0353  3001               	movlw	1
  3217  0354  07A1               	addwf	___ftadd@f1+1,f
  3218  0355  3000               	movlw	0
  3219  0356  1803               	skipnc
  3220  0357  3001               	movlw	1
  3221  0358  07A2               	addwf	___ftadd@f1+2,f
  3222  0359                     l2576:	
  3223  0359  1F79               	btfss	___ftadd@sign,6
  3224  035A  2B6B               	goto	l2580
  3225  035B  30FF               	movlw	255
  3226  035C  06A3               	xorwf	___ftadd@f2,f
  3227  035D  30FF               	movlw	255
  3228  035E  06A4               	xorwf	___ftadd@f2+1,f
  3229  035F  30FF               	movlw	255
  3230  0360  06A5               	xorwf	___ftadd@f2+2,f
  3231  0361  3001               	movlw	1
  3232  0362  07A3               	addwf	___ftadd@f2,f
  3233  0363  3000               	movlw	0
  3234  0364  1803               	skipnc
  3235  0365  3001               	movlw	1
  3236  0366  07A4               	addwf	___ftadd@f2+1,f
  3237  0367  3000               	movlw	0
  3238  0368  1803               	skipnc
  3239  0369  3001               	movlw	1
  3240  036A  07A5               	addwf	___ftadd@f2+2,f
  3241  036B                     l2580:	
  3242  036B  01F9               	clrf	___ftadd@sign
  3243  036C  0820               	movf	___ftadd@f1,w
  3244  036D  07A3               	addwf	___ftadd@f2,f
  3245  036E  0821               	movf	___ftadd@f1+1,w
  3246  036F  3DA4               	addwfc	___ftadd@f2+1,f
  3247  0370  0822               	movf	___ftadd@f1+2,w
  3248  0371  3DA5               	addwfc	___ftadd@f2+2,f
  3249  0372  1FA5               	btfss	___ftadd@f2+2,7
  3250  0373  2B86               	goto	l2590
  3251  0374  30FF               	movlw	255
  3252  0375  06A3               	xorwf	___ftadd@f2,f
  3253  0376  30FF               	movlw	255
  3254  0377  06A4               	xorwf	___ftadd@f2+1,f
  3255  0378  30FF               	movlw	255
  3256  0379  06A5               	xorwf	___ftadd@f2+2,f
  3257  037A  3001               	movlw	1
  3258  037B  07A3               	addwf	___ftadd@f2,f
  3259  037C  3000               	movlw	0
  3260  037D  1803               	skipnc
  3261  037E  3001               	movlw	1
  3262  037F  07A4               	addwf	___ftadd@f2+1,f
  3263  0380  3000               	movlw	0
  3264  0381  1803               	skipnc
  3265  0382  3001               	movlw	1
  3266  0383  07A5               	addwf	___ftadd@f2+2,f
  3267  0384  01F9               	clrf	___ftadd@sign
  3268  0385  0AF9               	incf	___ftadd@sign,f
  3269  0386                     l2590:	
  3270  0386  0823               	movf	___ftadd@f2,w
  3271  0387  00F1               	movwf	___ftpack@arg
  3272  0388  0824               	movf	___ftadd@f2+1,w
  3273  0389  00F2               	movwf	___ftpack@arg+1
  3274  038A  0825               	movf	___ftadd@f2+2,w
  3275  038B  00F3               	movwf	___ftpack@arg+2
  3276  038C  087B               	movf	___ftadd@exp1,w
  3277  038D  00A6               	movwf	??___ftadd
  3278  038E  0826               	movf	??___ftadd,w
  3279  038F  00F4               	movwf	___ftpack@exp
  3280  0390  0879               	movf	___ftadd@sign,w
  3281  0391  00A7               	movwf	??___ftadd+1
  3282  0392  0827               	movf	??___ftadd+1,w
  3283  0393  00F5               	movwf	___ftpack@sign
  3284  0394  3185  25B0         	fcall	___ftpack
  3285  0396  0871               	movf	?___ftpack,w
  3286  0397  0020               	movlb	0	; select bank0
  3287  0398  00A0               	movwf	?___ftadd
  3288  0399  0872               	movf	?___ftpack+1,w
  3289  039A  00A1               	movwf	?___ftadd+1
  3290  039B  0873               	movf	?___ftpack+2,w
  3291  039C  00A2               	movwf	?___ftadd+2
  3292  039D  0008               	return
  3293  039E                     __end_of___ftadd:	
  3294                           
  3295                           	psect	text15
  3296  039E                     __ptext15:	
  3297 ;; *************** function ___ftdiv *****************
  3298 ;; Defined at:
  3299 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  f2              3    8[BANK0 ] float 
  3302 ;;  f1              3   11[BANK0 ] float 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  f3              3   19[BANK0 ] float 
  3305 ;;  sign            1   23[BANK0 ] unsigned char 
  3306 ;;  exp             1   22[BANK0 ] unsigned char 
  3307 ;;  cntr            1   18[BANK0 ] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  3    8[BANK0 ] float 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, pclath, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3317 ;;      Params:         0       6       0       0
  3318 ;;      Locals:         0       6       0       0
  3319 ;;      Temps:          0       4       0       0
  3320 ;;      Totals:         0      16       0       0
  3321 ;;Total ram usage:       16 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    2
  3324 ;; This function calls:
  3325 ;;		___ftpack
  3326 ;; This function is called by:
  3327 ;;		_getTimeDifference
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           
  3332                           ;psect for function ___ftdiv
  3333  039E                     ___ftdiv:	
  3334                           
  3335                           ;incstack = 0
  3336                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3337  039E  0020               	movlb	0	; select bank0
  3338  039F  082B               	movf	___ftdiv@f1,w
  3339  03A0  00AE               	movwf	??___ftdiv
  3340  03A1  082C               	movf	___ftdiv@f1+1,w
  3341  03A2  00AF               	movwf	??___ftdiv+1
  3342  03A3  082D               	movf	___ftdiv@f1+2,w
  3343  03A4  00B0               	movwf	??___ftdiv+2
  3344  03A5  1003               	clrc
  3345  03A6  0D2F               	rlf	??___ftdiv+1,w
  3346  03A7  0D30               	rlf	??___ftdiv+2,w
  3347  03A8  00B1               	movwf	??___ftdiv+3
  3348  03A9  0831               	movf	??___ftdiv+3,w
  3349  03AA  00B6               	movwf	___ftdiv@exp
  3350  03AB  0836               	movf	___ftdiv@exp,w
  3351  03AC  1D03               	btfss	3,2
  3352  03AD  2BB5               	goto	l2690
  3353  03AE  3000               	movlw	0
  3354  03AF  00A8               	movwf	?___ftdiv
  3355  03B0  3000               	movlw	0
  3356  03B1  00A9               	movwf	?___ftdiv+1
  3357  03B2  3000               	movlw	0
  3358  03B3  00AA               	movwf	?___ftdiv+2
  3359  03B4  0008               	return
  3360  03B5                     l2690:	
  3361  03B5  0828               	movf	___ftdiv@f2,w
  3362  03B6  00AE               	movwf	??___ftdiv
  3363  03B7  0829               	movf	___ftdiv@f2+1,w
  3364  03B8  00AF               	movwf	??___ftdiv+1
  3365  03B9  082A               	movf	___ftdiv@f2+2,w
  3366  03BA  00B0               	movwf	??___ftdiv+2
  3367  03BB  1003               	clrc
  3368  03BC  0D2F               	rlf	??___ftdiv+1,w
  3369  03BD  0D30               	rlf	??___ftdiv+2,w
  3370  03BE  00B1               	movwf	??___ftdiv+3
  3371  03BF  0831               	movf	??___ftdiv+3,w
  3372  03C0  00B7               	movwf	___ftdiv@sign
  3373  03C1  0837               	movf	___ftdiv@sign,w
  3374  03C2  1D03               	btfss	3,2
  3375  03C3  2BCB               	goto	l2696
  3376  03C4  3000               	movlw	0
  3377  03C5  00A8               	movwf	?___ftdiv
  3378  03C6  3000               	movlw	0
  3379  03C7  00A9               	movwf	?___ftdiv+1
  3380  03C8  3000               	movlw	0
  3381  03C9  00AA               	movwf	?___ftdiv+2
  3382  03CA  0008               	return
  3383  03CB                     l2696:	
  3384  03CB  3000               	movlw	0
  3385  03CC  00B3               	movwf	___ftdiv@f3
  3386  03CD  3000               	movlw	0
  3387  03CE  00B4               	movwf	___ftdiv@f3+1
  3388  03CF  3000               	movlw	0
  3389  03D0  00B5               	movwf	___ftdiv@f3+2
  3390  03D1  3089               	movlw	137
  3391  03D2  0737               	addwf	___ftdiv@sign,w
  3392  03D3  00AE               	movwf	??___ftdiv
  3393  03D4  082E               	movf	??___ftdiv,w
  3394  03D5  02B6               	subwf	___ftdiv@exp,f
  3395  03D6  082B               	movf	___ftdiv@f1,w
  3396  03D7  00AE               	movwf	??___ftdiv
  3397  03D8  082C               	movf	___ftdiv@f1+1,w
  3398  03D9  00AF               	movwf	??___ftdiv+1
  3399  03DA  082D               	movf	___ftdiv@f1+2,w
  3400  03DB  00B0               	movwf	??___ftdiv+2
  3401  03DC  3010               	movlw	16
  3402  03DD                     u4035:	
  3403  03DD  36B0               	lsrf	??___ftdiv+2,f
  3404  03DE  0CAF               	rrf	??___ftdiv+1,f
  3405  03DF  0CAE               	rrf	??___ftdiv,f
  3406  03E0  0B89               	decfsz	9,f
  3407  03E1  2BDD               	goto	u4035
  3408  03E2  082E               	movf	??___ftdiv,w
  3409  03E3  00B1               	movwf	??___ftdiv+3
  3410  03E4  0831               	movf	??___ftdiv+3,w
  3411  03E5  00B7               	movwf	___ftdiv@sign
  3412  03E6  0828               	movf	___ftdiv@f2,w
  3413  03E7  00AE               	movwf	??___ftdiv
  3414  03E8  0829               	movf	___ftdiv@f2+1,w
  3415  03E9  00AF               	movwf	??___ftdiv+1
  3416  03EA  082A               	movf	___ftdiv@f2+2,w
  3417  03EB  00B0               	movwf	??___ftdiv+2
  3418  03EC  3010               	movlw	16
  3419  03ED                     u4045:	
  3420  03ED  36B0               	lsrf	??___ftdiv+2,f
  3421  03EE  0CAF               	rrf	??___ftdiv+1,f
  3422  03EF  0CAE               	rrf	??___ftdiv,f
  3423  03F0  0B89               	decfsz	9,f
  3424  03F1  2BED               	goto	u4045
  3425  03F2  082E               	movf	??___ftdiv,w
  3426  03F3  00B1               	movwf	??___ftdiv+3
  3427  03F4  0831               	movf	??___ftdiv+3,w
  3428  03F5  06B7               	xorwf	___ftdiv@sign,f
  3429  03F6  3080               	movlw	128
  3430  03F7  00AE               	movwf	??___ftdiv
  3431  03F8  082E               	movf	??___ftdiv,w
  3432  03F9  05B7               	andwf	___ftdiv@sign,f
  3433  03FA  17AC               	bsf	___ftdiv@f1+1,7
  3434  03FB  30FF               	movlw	255
  3435  03FC  05AB               	andwf	___ftdiv@f1,f
  3436  03FD  30FF               	movlw	255
  3437  03FE  05AC               	andwf	___ftdiv@f1+1,f
  3438  03FF  3000               	movlw	0
  3439  0400  05AD               	andwf	___ftdiv@f1+2,f
  3440  0401  17A9               	bsf	___ftdiv@f2+1,7
  3441  0402  30FF               	movlw	255
  3442  0403  05A8               	andwf	___ftdiv@f2,f
  3443  0404  30FF               	movlw	255
  3444  0405  05A9               	andwf	___ftdiv@f2+1,f
  3445  0406  3000               	movlw	0
  3446  0407  05AA               	andwf	___ftdiv@f2+2,f
  3447  0408  3018               	movlw	24
  3448  0409  00AE               	movwf	??___ftdiv
  3449  040A  082E               	movf	??___ftdiv,w
  3450  040B  00B2               	movwf	___ftdiv@cntr
  3451  040C                     l2710:	
  3452  040C  3001               	movlw	1
  3453  040D                     u4055:	
  3454  040D  35B3               	lslf	___ftdiv@f3,f
  3455  040E  0DB4               	rlf	___ftdiv@f3+1,f
  3456  040F  0DB5               	rlf	___ftdiv@f3+2,f
  3457  0410  0B89               	decfsz	9,f
  3458  0411  2C0D               	goto	u4055
  3459  0412  082A               	movf	___ftdiv@f2+2,w
  3460  0413  022D               	subwf	___ftdiv@f1+2,w
  3461  0414  1D03               	skipz
  3462  0415  2C1C               	goto	u4065
  3463  0416  0829               	movf	___ftdiv@f2+1,w
  3464  0417  022C               	subwf	___ftdiv@f1+1,w
  3465  0418  1D03               	skipz
  3466  0419  2C1C               	goto	u4065
  3467  041A  0828               	movf	___ftdiv@f2,w
  3468  041B  022B               	subwf	___ftdiv@f1,w
  3469  041C                     u4065:	
  3470  041C  1C03               	skipc
  3471  041D  2C25               	goto	l2718
  3472  041E  0828               	movf	___ftdiv@f2,w
  3473  041F  02AB               	subwf	___ftdiv@f1,f
  3474  0420  0829               	movf	___ftdiv@f2+1,w
  3475  0421  3BAC               	subwfb	___ftdiv@f1+1,f
  3476  0422  082A               	movf	___ftdiv@f2+2,w
  3477  0423  3BAD               	subwfb	___ftdiv@f1+2,f
  3478  0424  1433               	bsf	___ftdiv@f3,0
  3479  0425                     l2718:	
  3480  0425  3001               	movlw	1
  3481  0426                     u4075:	
  3482  0426  35AB               	lslf	___ftdiv@f1,f
  3483  0427  0DAC               	rlf	___ftdiv@f1+1,f
  3484  0428  0DAD               	rlf	___ftdiv@f1+2,f
  3485  0429  0B89               	decfsz	9,f
  3486  042A  2C26               	goto	u4075
  3487  042B  3001               	movlw	1
  3488  042C  02B2               	subwf	___ftdiv@cntr,f
  3489  042D  1D03               	btfss	3,2
  3490  042E  2C0C               	goto	l2710
  3491  042F  0833               	movf	___ftdiv@f3,w
  3492  0430  00F1               	movwf	___ftpack@arg
  3493  0431  0834               	movf	___ftdiv@f3+1,w
  3494  0432  00F2               	movwf	___ftpack@arg+1
  3495  0433  0835               	movf	___ftdiv@f3+2,w
  3496  0434  00F3               	movwf	___ftpack@arg+2
  3497  0435  0836               	movf	___ftdiv@exp,w
  3498  0436  00AE               	movwf	??___ftdiv
  3499  0437  082E               	movf	??___ftdiv,w
  3500  0438  00F4               	movwf	___ftpack@exp
  3501  0439  0837               	movf	___ftdiv@sign,w
  3502  043A  00AF               	movwf	??___ftdiv+1
  3503  043B  082F               	movf	??___ftdiv+1,w
  3504  043C  00F5               	movwf	___ftpack@sign
  3505  043D  3185  25B0         	fcall	___ftpack
  3506  043F  0871               	movf	?___ftpack,w
  3507  0440  0020               	movlb	0	; select bank0
  3508  0441  00A8               	movwf	?___ftdiv
  3509  0442  0872               	movf	?___ftpack+1,w
  3510  0443  00A9               	movwf	?___ftdiv+1
  3511  0444  0873               	movf	?___ftpack+2,w
  3512  0445  00AA               	movwf	?___ftdiv+2
  3513  0446  0008               	return
  3514  0447                     __end_of___ftdiv:	
  3515                           
  3516                           	psect	text16
  3517  0FC3                     __ptext16:	
  3518 ;; *************** function ___altoft *****************
  3519 ;; Defined at:
  3520 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  c               4   53[BANK0 ] long 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  sign            1   60[BANK0 ] unsigned char 
  3525 ;;  exp             1   59[BANK0 ] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  3   53[BANK0 ] float 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, pclath, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3535 ;;      Params:         0       4       0       0
  3536 ;;      Locals:         0       2       0       0
  3537 ;;      Temps:          0       2       0       0
  3538 ;;      Totals:         0       8       0       0
  3539 ;;Total ram usage:        8 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    2
  3542 ;; This function calls:
  3543 ;;		___ftpack
  3544 ;; This function is called by:
  3545 ;;		_getTimeDifference
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function ___altoft
  3551  0FC3                     ___altoft:	
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3555  0FC3  0020               	movlb	0	; select bank0
  3556  0FC4  01DC               	clrf	___altoft@sign
  3557  0FC5  308E               	movlw	142
  3558  0FC6  00D9               	movwf	??___altoft
  3559  0FC7  0859               	movf	??___altoft,w
  3560  0FC8  00DB               	movwf	___altoft@exp
  3561  0FC9  1FD8               	btfss	___altoft@c+3,7
  3562  0FCA  2FD8               	goto	l2678
  3563  0FCB  09D5               	comf	___altoft@c,f
  3564  0FCC  09D6               	comf	___altoft@c+1,f
  3565  0FCD  09D7               	comf	___altoft@c+2,f
  3566  0FCE  09D8               	comf	___altoft@c+3,f
  3567  0FCF  0AD5               	incf	___altoft@c,f
  3568  0FD0  1903               	skipnz
  3569  0FD1  0AD6               	incf	___altoft@c+1,f
  3570  0FD2  1903               	skipnz
  3571  0FD3  0AD7               	incf	___altoft@c+2,f
  3572  0FD4  1903               	skipnz
  3573  0FD5  0AD8               	incf	___altoft@c+3,f
  3574  0FD6  01DC               	clrf	___altoft@sign
  3575  0FD7  0ADC               	incf	___altoft@sign,f
  3576  0FD8                     l2678:	
  3577  0FD8  30FF               	movlw	255
  3578  0FD9  0558               	andwf	___altoft@c+3,w
  3579  0FDA  1903               	btfsc	3,2
  3580  0FDB  2FE8               	goto	l2680
  3581  0FDC  3001               	movlw	1
  3582  0FDD                     u3995:	
  3583  0FDD  36D8               	lsrf	___altoft@c+3,f
  3584  0FDE  0CD7               	rrf	___altoft@c+2,f
  3585  0FDF  0CD6               	rrf	___altoft@c+1,f
  3586  0FE0  0CD5               	rrf	___altoft@c,f
  3587  0FE1  0B89               	decfsz	9,f
  3588  0FE2  2FDD               	goto	u3995
  3589  0FE3  3001               	movlw	1
  3590  0FE4  00D9               	movwf	??___altoft
  3591  0FE5  0859               	movf	??___altoft,w
  3592  0FE6  07DB               	addwf	___altoft@exp,f
  3593  0FE7  2FD8               	goto	l2678
  3594  0FE8                     l2680:	
  3595  0FE8  0855               	movf	___altoft@c,w
  3596  0FE9  00F1               	movwf	___ftpack@arg
  3597  0FEA  0856               	movf	___altoft@c+1,w
  3598  0FEB  00F2               	movwf	___ftpack@arg+1
  3599  0FEC  0857               	movf	___altoft@c+2,w
  3600  0FED  00F3               	movwf	___ftpack@arg+2
  3601  0FEE  085B               	movf	___altoft@exp,w
  3602  0FEF  00D9               	movwf	??___altoft
  3603  0FF0  0859               	movf	??___altoft,w
  3604  0FF1  00F4               	movwf	___ftpack@exp
  3605  0FF2  085C               	movf	___altoft@sign,w
  3606  0FF3  00DA               	movwf	??___altoft+1
  3607  0FF4  085A               	movf	??___altoft+1,w
  3608  0FF5  00F5               	movwf	___ftpack@sign
  3609  0FF6  3185  25B0         	fcall	___ftpack
  3610  0FF8  0871               	movf	?___ftpack,w
  3611  0FF9  0020               	movlb	0	; select bank0
  3612  0FFA  00D5               	movwf	?___altoft
  3613  0FFB  0872               	movf	?___ftpack+1,w
  3614  0FFC  00D6               	movwf	?___altoft+1
  3615  0FFD  0873               	movf	?___ftpack+2,w
  3616  0FFE  00D7               	movwf	?___altoft+2
  3617  0FFF  0008               	return
  3618  1000                     __end_of___altoft:	
  3619                           
  3620                           	psect	text17
  3621  05B0                     __ptext17:	
  3622 ;; *************** function ___ftpack *****************
  3623 ;; Defined at:
  3624 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  arg             3    1[COMMON] unsigned um
  3627 ;;  exp             1    4[COMMON] unsigned char 
  3628 ;;  sign            1    5[COMMON] unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  3    1[COMMON] float 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3640 ;;      Params:         5       0       0       0
  3641 ;;      Locals:         0       0       0       0
  3642 ;;      Temps:          3       0       0       0
  3643 ;;      Totals:         8       0       0       0
  3644 ;;Total ram usage:        8 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		___altoft
  3651 ;;		___ftadd
  3652 ;;		___ftdiv
  3653 ;;		___lltoft
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function ___ftpack
  3659  05B0                     ___ftpack:	
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3663  05B0  0874               	movf	___ftpack@exp,w
  3664  05B1  1903               	btfsc	3,2
  3665  05B2  2DB8               	goto	l2444
  3666  05B3  0873               	movf	___ftpack@arg+2,w
  3667  05B4  0472               	iorwf	___ftpack@arg+1,w
  3668  05B5  0471               	iorwf	___ftpack@arg,w
  3669  05B6  1D03               	skipz
  3670  05B7  2DC9               	goto	l2450
  3671  05B8                     l2444:	
  3672  05B8  3000               	movlw	0
  3673  05B9  00F1               	movwf	?___ftpack
  3674  05BA  3000               	movlw	0
  3675  05BB  00F2               	movwf	?___ftpack+1
  3676  05BC  3000               	movlw	0
  3677  05BD  00F3               	movwf	?___ftpack+2
  3678  05BE  0008               	return
  3679  05BF                     l2448:	
  3680  05BF  3001               	movlw	1
  3681  05C0  00F6               	movwf	??___ftpack
  3682  05C1  0876               	movf	??___ftpack,w
  3683  05C2  07F4               	addwf	___ftpack@exp,f
  3684  05C3  3001               	movlw	1
  3685  05C4                     u3415:	
  3686  05C4  36F3               	lsrf	___ftpack@arg+2,f
  3687  05C5  0CF2               	rrf	___ftpack@arg+1,f
  3688  05C6  0CF1               	rrf	___ftpack@arg,f
  3689  05C7  0B89               	decfsz	9,f
  3690  05C8  2DC4               	goto	u3415
  3691  05C9                     l2450:	
  3692  05C9  30FE               	movlw	254
  3693  05CA  0573               	andwf	___ftpack@arg+2,w
  3694  05CB  1903               	btfsc	3,2
  3695  05CC  2DE2               	goto	l547
  3696  05CD  2DBF               	goto	l2448
  3697  05CE                     l2452:	
  3698  05CE  3001               	movlw	1
  3699  05CF  00F6               	movwf	??___ftpack
  3700  05D0  0876               	movf	??___ftpack,w
  3701  05D1  07F4               	addwf	___ftpack@exp,f
  3702  05D2  3001               	movlw	1
  3703  05D3  07F1               	addwf	___ftpack@arg,f
  3704  05D4  3000               	movlw	0
  3705  05D5  1803               	skipnc
  3706  05D6  3001               	movlw	1
  3707  05D7  07F2               	addwf	___ftpack@arg+1,f
  3708  05D8  3000               	movlw	0
  3709  05D9  1803               	skipnc
  3710  05DA  3001               	movlw	1
  3711  05DB  07F3               	addwf	___ftpack@arg+2,f
  3712  05DC  3001               	movlw	1
  3713  05DD                     u3435:	
  3714  05DD  36F3               	lsrf	___ftpack@arg+2,f
  3715  05DE  0CF2               	rrf	___ftpack@arg+1,f
  3716  05DF  0CF1               	rrf	___ftpack@arg,f
  3717  05E0  0B89               	decfsz	9,f
  3718  05E1  2DDD               	goto	u3435
  3719  05E2                     l547:	
  3720  05E2  30FF               	movlw	255
  3721  05E3  0573               	andwf	___ftpack@arg+2,w
  3722  05E4  1903               	btfsc	3,2
  3723  05E5  2DEF               	goto	l2460
  3724  05E6  2DCE               	goto	l2452
  3725  05E7                     l2458:	
  3726  05E7  3001               	movlw	1
  3727  05E8  02F4               	subwf	___ftpack@exp,f
  3728  05E9  3001               	movlw	1
  3729  05EA                     u3455:	
  3730  05EA  35F1               	lslf	___ftpack@arg,f
  3731  05EB  0DF2               	rlf	___ftpack@arg+1,f
  3732  05EC  0DF3               	rlf	___ftpack@arg+2,f
  3733  05ED  0B89               	decfsz	9,f
  3734  05EE  2DEA               	goto	u3455
  3735  05EF                     l2460:	
  3736  05EF  1BF2               	btfsc	___ftpack@arg+1,7
  3737  05F0  2DF5               	goto	l554
  3738  05F1  3002               	movlw	2
  3739  05F2  0274               	subwf	___ftpack@exp,w
  3740  05F3  1803               	skipnc
  3741  05F4  2DE7               	goto	l2458
  3742  05F5                     l554:	
  3743  05F5  1874               	btfsc	___ftpack@exp,0
  3744  05F6  2DFD               	goto	l555
  3745  05F7  30FF               	movlw	255
  3746  05F8  05F1               	andwf	___ftpack@arg,f
  3747  05F9  307F               	movlw	127
  3748  05FA  05F2               	andwf	___ftpack@arg+1,f
  3749  05FB  30FF               	movlw	255
  3750  05FC  05F3               	andwf	___ftpack@arg+2,f
  3751  05FD                     l555:	
  3752  05FD  1003               	clrc
  3753  05FE  0CF4               	rrf	___ftpack@exp,f
  3754  05FF  0874               	movf	___ftpack@exp,w
  3755  0600  00F6               	movwf	??___ftpack
  3756  0601  01F7               	clrf	??___ftpack+1
  3757  0602  01F8               	clrf	??___ftpack+2
  3758  0603  3010               	movlw	16
  3759  0604                     u3495:	
  3760  0604  35F6               	lslf	??___ftpack,f
  3761  0605  0DF7               	rlf	??___ftpack+1,f
  3762  0606  0DF8               	rlf	??___ftpack+2,f
  3763  0607  0B89               	decfsz	9,f
  3764  0608  2E04               	goto	u3495
  3765  0609  0876               	movf	??___ftpack,w
  3766  060A  04F1               	iorwf	___ftpack@arg,f
  3767  060B  0877               	movf	??___ftpack+1,w
  3768  060C  04F2               	iorwf	___ftpack@arg+1,f
  3769  060D  0878               	movf	??___ftpack+2,w
  3770  060E  04F3               	iorwf	___ftpack@arg+2,f
  3771  060F  0875               	movf	___ftpack@sign,w
  3772  0610  1903               	btfsc	3,2
  3773  0611  0008               	return
  3774  0612  17F3               	bsf	___ftpack@arg+2,7
  3775  0613  0008               	return
  3776  0614                     __end_of___ftpack:	
  3777                           
  3778                           	psect	text18
  3779  0D5E                     __ptext18:	
  3780 ;; *************** function _I2C_initialize *****************
  3781 ;; Defined at:
  3782 ;;		line 146 in file "I2C.h"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3796 ;;      Params:         0       0       0       0
  3797 ;;      Locals:         0       0       0       0
  3798 ;;      Temps:          2       0       0       0
  3799 ;;      Totals:         2       0       0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function _I2C_initialize
  3812  0D5E                     _I2C_initialize:	
  3813                           
  3814                           ;I2C.h: 156: SSPM3 = 1;
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in _I2C_initialize: [wreg]
  3818  0D5E  0024               	movlb	4	; select bank4
  3819  0D5F  1595               	bsf	21,3	;volatile
  3820                           
  3821                           ;I2C.h: 157: SSPM2 = 0;
  3822  0D60  1115               	bcf	21,2	;volatile
  3823                           
  3824                           ;I2C.h: 158: SSPM1 = 0;
  3825  0D61  1095               	bcf	21,1	;volatile
  3826                           
  3827                           ;I2C.h: 159: SSPM0 = 0;
  3828  0D62  1015               	bcf	21,0	;volatile
  3829                           
  3830                           ;I2C.h: 191: SSPADD = 79;
  3831  0D63  304F               	movlw	79
  3832  0D64  0092               	movwf	18	;volatile
  3833                           
  3834                           ;I2C.h: 197: SSPEN = 1 ;
  3835  0D65  1695               	bsf	21,5	;volatile
  3836                           
  3837                           ;I2C.h: 198: SSP1IF = 0;
  3838  0D66  0020               	movlb	0	; select bank0
  3839  0D67  1191               	bcf	17,3	;volatile
  3840                           
  3841                           ;I2C.h: 199: _delay((unsigned long)((5)*(16000000L/4000.0)));
  3842  0D68  301A               	movlw	26
  3843  0D69  00F2               	movwf	??_I2C_initialize+1
  3844  0D6A  30F8               	movlw	248
  3845  0D6B  00F1               	movwf	??_I2C_initialize
  3846  0D6C                     u4267:	
  3847  0D6C  0BF1               	decfsz	??_I2C_initialize,f
  3848  0D6D  2D6C               	goto	u4267
  3849  0D6E  0BF2               	decfsz	??_I2C_initialize+1,f
  3850  0D6F  2D6C               	goto	u4267
  3851  0D70  0000               	nop
  3852  0D71  0008               	return
  3853  0D72                     __end_of_I2C_initialize:	
  3854                           
  3855                           	psect	text19
  3856  0D9D                     __ptext19:	
  3857 ;; *************** function _DisplayTime *****************
  3858 ;; Defined at:
  3859 ;;		line 126 in file "SevenSegments.h"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  k               1   20[BANK0 ] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3873 ;;      Params:         0       0       0       0
  3874 ;;      Locals:         0       1       0       0
  3875 ;;      Temps:          1       0       0       0
  3876 ;;      Totals:         1       1       0       0
  3877 ;;Total ram usage:        2 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    7
  3880 ;; This function calls:
  3881 ;;		_DisplayNumber
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _DisplayTime
  3889  0D9D                     _DisplayTime:	
  3890                           
  3891                           ;SevenSegments.h: 128: for(char k = 4; k < 7; k++)
  3892                           
  3893                           ;incstack = 0
  3894                           ; Regs used in _DisplayTime: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3895  0D9D  3004               	movlw	4
  3896  0D9E  00FB               	movwf	??_DisplayTime
  3897  0D9F  087B               	movf	??_DisplayTime,w
  3898  0DA0  0020               	movlb	0	; select bank0
  3899  0DA1  00B4               	movwf	DisplayTime@k
  3900  0DA2                     L4:	
  3901  0DA2  3007               	movlw	7
  3902  0DA3  0234               	subwf	DisplayTime@k,w
  3903  0DA4  1803               	btfsc	3,0
  3904  0DA5  0008               	return
  3905                           
  3906                           ;SevenSegments.h: 129: {
  3907                           ;SevenSegments.h: 130: DisplayNumber(2*k, zaman[k]);
  3908  0DA6  0834               	movf	DisplayTime@k,w
  3909  0DA7  3EE2               	addlw	(low (_zaman| 0))& (0+255)
  3910  0DA8  0086               	movwf	6
  3911  0DA9  0187               	clrf	7
  3912  0DAA  0801               	movf	1,w
  3913  0DAB  00FB               	movwf	??_DisplayTime
  3914  0DAC  087B               	movf	??_DisplayTime,w
  3915  0DAD  00AE               	movwf	DisplayNumber@value
  3916  0DAE  3534               	lslf	DisplayTime@k,w
  3917  0DAF  3187  274C  318D   	fcall	_DisplayNumber
  3918  0DB2  3001               	movlw	1
  3919  0DB3  00FB               	movwf	??_DisplayTime
  3920  0DB4  087B               	movf	??_DisplayTime,w
  3921  0DB5  0020               	movlb	0	; select bank0
  3922  0DB6  07B4               	addwf	DisplayTime@k,f
  3923  0DB7  2DA2               	goto	L4
  3924  0DB8                     __end_of_DisplayTime:	
  3925                           
  3926                           	psect	text20
  3927  0DD3                     __ptext20:	
  3928 ;; *************** function _DisplayDate *****************
  3929 ;; Defined at:
  3930 ;;		line 118 in file "SevenSegments.h"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  k               1   20[BANK0 ] char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3944 ;;      Params:         0       0       0       0
  3945 ;;      Locals:         0       1       0       0
  3946 ;;      Temps:          1       0       0       0
  3947 ;;      Totals:         1       1       0       0
  3948 ;;Total ram usage:        2 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    7
  3951 ;; This function calls:
  3952 ;;		_DisplayNumber
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function _DisplayDate
  3960  0DD3                     _DisplayDate:	
  3961                           
  3962                           ;SevenSegments.h: 120: for(signed char k = 3; k != -1; k--)
  3963                           
  3964                           ;incstack = 0
  3965                           ; Regs used in _DisplayDate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3966  0DD3  3003               	movlw	3
  3967  0DD4  00FB               	movwf	??_DisplayDate
  3968  0DD5  087B               	movf	??_DisplayDate,w
  3969  0DD6  0020               	movlb	0	; select bank0
  3970  0DD7  00B4               	movwf	DisplayDate@k
  3971  0DD8                     L5:	
  3972  0DD8  0A34               	incf	DisplayDate@k,w
  3973  0DD9  1903               	btfsc	3,2
  3974  0DDA  0008               	return
  3975                           
  3976                           ;SevenSegments.h: 121: {
  3977                           ;SevenSegments.h: 122: DisplayNumber(2*(3-k), zaman[k]);
  3978  0DDB  0834               	movf	DisplayDate@k,w
  3979  0DDC  3EE2               	addlw	(low (_zaman| 0))& (0+255)
  3980  0DDD  0086               	movwf	6
  3981  0DDE  0187               	clrf	7
  3982  0DDF  0801               	movf	1,w
  3983  0DE0  00FB               	movwf	??_DisplayDate
  3984  0DE1  087B               	movf	??_DisplayDate,w
  3985  0DE2  00AE               	movwf	DisplayNumber@value
  3986  0DE3  0334               	decf	DisplayDate@k,w
  3987  0DE4  3AFF               	xorlw	255
  3988  0DE5  0709               	addwf	9,w
  3989  0DE6  3E06               	addlw	6
  3990  0DE7  3187  274C  318D   	fcall	_DisplayNumber
  3991  0DEA  30FF               	movlw	255
  3992  0DEB  00FB               	movwf	??_DisplayDate
  3993  0DEC  087B               	movf	??_DisplayDate,w
  3994  0DED  0020               	movlb	0	; select bank0
  3995  0DEE  07B4               	addwf	DisplayDate@k,f
  3996  0DEF  2DD8               	goto	L5
  3997  0DF0                     __end_of_DisplayDate:	
  3998                           
  3999                           	psect	text21
  4000  074C                     __ptext21:	
  4001 ;; *************** function _DisplayNumber *****************
  4002 ;; Defined at:
  4003 ;;		line 112 in file "SevenSegments.h"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  s               1    wreg     unsigned char 
  4006 ;;  value           1   14[BANK0 ] unsigned char 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  s               1   19[BANK0 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4018 ;;      Params:         0       1       0       0
  4019 ;;      Locals:         0       2       0       0
  4020 ;;      Temps:          0       3       0       0
  4021 ;;      Totals:         0       6       0       0
  4022 ;;Total ram usage:        6 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    6
  4025 ;; This function calls:
  4026 ;;		_LoadSevenSegment
  4027 ;;		___awdiv
  4028 ;;		___awmod
  4029 ;; This function is called by:
  4030 ;;		_DisplayDate
  4031 ;;		_DisplayTime
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _DisplayNumber
  4037  074C                     _DisplayNumber:	
  4038                           
  4039                           ;incstack = 0
  4040                           ; Regs used in _DisplayNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4041                           ;DisplayNumber@s stored from wreg
  4042  074C  0020               	movlb	0	; select bank0
  4043  074D  00B3               	movwf	DisplayNumber@s
  4044                           
  4045                           ;SevenSegments.h: 114: LoadSevenSegment(s, rakamlar[value/10]);
  4046  074E  300A               	movlw	10
  4047  074F  00F1               	movwf	___awdiv@divisor
  4048  0750  3000               	movlw	0
  4049  0751  00F2               	movwf	___awdiv@divisor+1
  4050  0752  082E               	movf	DisplayNumber@value,w
  4051  0753  00AF               	movwf	??_DisplayNumber
  4052  0754  01B0               	clrf	??_DisplayNumber+1
  4053  0755  082F               	movf	??_DisplayNumber,w
  4054  0756  00F3               	movwf	___awdiv@dividend
  4055  0757  0830               	movf	??_DisplayNumber+1,w
  4056  0758  00F4               	movwf	___awdiv@dividend+1
  4057  0759  3186  266B  3187   	fcall	___awdiv
  4058  075C  0871               	movf	?___awdiv,w
  4059  075D  3E38               	addlw	(low (_rakamlar| (0+256)))& (0+255)
  4060  075E  0086               	movwf	6
  4061  075F  3001               	movlw	1	; select bank2/3
  4062  0760  0087               	movwf	7
  4063  0761  0801               	movf	1,w
  4064  0762  0020               	movlb	0	; select bank0
  4065  0763  00B1               	movwf	??_DisplayNumber+2
  4066  0764  0831               	movf	??_DisplayNumber+2,w
  4067  0765  00B2               	movwf	_DisplayNumber$700
  4068                           
  4069                           ;SevenSegments.h: 114: LoadSevenSegment(s, rakamlar[value/10]);
  4070  0766  0832               	movf	_DisplayNumber$700,w
  4071  0767  00AF               	movwf	??_DisplayNumber
  4072  0768  082F               	movf	??_DisplayNumber,w
  4073  0769  00A9               	movwf	LoadSevenSegment@value
  4074  076A  0833               	movf	DisplayNumber@s,w
  4075  076B  3187  278C  3187   	fcall	_LoadSevenSegment
  4076                           
  4077                           ;SevenSegments.h: 115: LoadSevenSegment(s+1, rakamlar[value%10]);
  4078  076E  300A               	movlw	10
  4079  076F  00F1               	movwf	___awmod@divisor
  4080  0770  3000               	movlw	0
  4081  0771  00F2               	movwf	___awmod@divisor+1
  4082  0772  0020               	movlb	0	; select bank0
  4083  0773  082E               	movf	DisplayNumber@value,w
  4084  0774  00AF               	movwf	??_DisplayNumber
  4085  0775  01B0               	clrf	??_DisplayNumber+1
  4086  0776  082F               	movf	??_DisplayNumber,w
  4087  0777  00F3               	movwf	___awmod@dividend
  4088  0778  0830               	movf	??_DisplayNumber+1,w
  4089  0779  00F4               	movwf	___awmod@dividend+1
  4090  077A  3187  2707  3187   	fcall	___awmod
  4091  077D  0871               	movf	?___awmod,w
  4092  077E  3E38               	addlw	(low (_rakamlar| (0+256)))& (0+255)
  4093  077F  0086               	movwf	6
  4094  0780  3001               	movlw	1	; select bank2/3
  4095  0781  0087               	movwf	7
  4096  0782  0801               	movf	1,w
  4097  0783  0020               	movlb	0	; select bank0
  4098  0784  00B1               	movwf	??_DisplayNumber+2
  4099  0785  0831               	movf	??_DisplayNumber+2,w
  4100  0786  00A9               	movwf	LoadSevenSegment@value
  4101  0787  0833               	movf	DisplayNumber@s,w
  4102  0788  3E01               	addlw	1
  4103  0789  3187  278C         	fcall	_LoadSevenSegment
  4104  078B  0008               	return
  4105  078C                     __end_of_DisplayNumber:	
  4106                           
  4107                           	psect	text22
  4108  0707                     __ptext22:	
  4109 ;; *************** function ___awmod *****************
  4110 ;; Defined at:
  4111 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  divisor         2    1[COMMON] int 
  4114 ;;  dividend        2    3[COMMON] int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  sign            1    7[COMMON] unsigned char 
  4117 ;;  counter         1    6[COMMON] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2    1[COMMON] int 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4127 ;;      Params:         4       0       0       0
  4128 ;;      Locals:         2       0       0       0
  4129 ;;      Temps:          1       0       0       0
  4130 ;;      Totals:         7       0       0       0
  4131 ;;Total ram usage:        7 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_DisplayNumber
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           
  4142                           ;psect for function ___awmod
  4143  0707                     ___awmod:	
  4144                           
  4145                           ;incstack = 0
  4146                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4147  0707  01F7               	clrf	___awmod@sign
  4148  0708  1FF4               	btfss	___awmod@dividend+1,7
  4149  0709  2F11               	goto	l1900
  4150  070A  09F3               	comf	___awmod@dividend,f
  4151  070B  09F4               	comf	___awmod@dividend+1,f
  4152  070C  0AF3               	incf	___awmod@dividend,f
  4153  070D  1903               	skipnz
  4154  070E  0AF4               	incf	___awmod@dividend+1,f
  4155  070F  01F7               	clrf	___awmod@sign
  4156  0710  0AF7               	incf	___awmod@sign,f
  4157  0711                     l1900:	
  4158  0711  1FF2               	btfss	___awmod@divisor+1,7
  4159  0712  2F18               	goto	l1904
  4160  0713  09F1               	comf	___awmod@divisor,f
  4161  0714  09F2               	comf	___awmod@divisor+1,f
  4162  0715  0AF1               	incf	___awmod@divisor,f
  4163  0716  1903               	skipnz
  4164  0717  0AF2               	incf	___awmod@divisor+1,f
  4165  0718                     l1904:	
  4166  0718  0871               	movf	___awmod@divisor,w
  4167  0719  0472               	iorwf	___awmod@divisor+1,w
  4168  071A  1903               	btfsc	3,2
  4169  071B  2F3F               	goto	l1922
  4170  071C  01F6               	clrf	___awmod@counter
  4171  071D  0AF6               	incf	___awmod@counter,f
  4172  071E                     l1912:	
  4173  071E  1BF2               	btfsc	___awmod@divisor+1,7
  4174  071F  2F2A               	goto	l1914
  4175  0720  3001               	movlw	1
  4176  0721                     u2395:	
  4177  0721  35F1               	lslf	___awmod@divisor,f
  4178  0722  0DF2               	rlf	___awmod@divisor+1,f
  4179  0723  0B89               	decfsz	9,f
  4180  0724  2F21               	goto	u2395
  4181  0725  3001               	movlw	1
  4182  0726  00F5               	movwf	??___awmod
  4183  0727  0875               	movf	??___awmod,w
  4184  0728  07F6               	addwf	___awmod@counter,f
  4185  0729  2F1E               	goto	l1912
  4186  072A                     l1914:	
  4187  072A  0872               	movf	___awmod@divisor+1,w
  4188  072B  0274               	subwf	___awmod@dividend+1,w
  4189  072C  1D03               	skipz
  4190  072D  2F30               	goto	u2415
  4191  072E  0871               	movf	___awmod@divisor,w
  4192  072F  0273               	subwf	___awmod@dividend,w
  4193  0730                     u2415:	
  4194  0730  1C03               	skipc
  4195  0731  2F36               	goto	l1918
  4196  0732  0871               	movf	___awmod@divisor,w
  4197  0733  02F3               	subwf	___awmod@dividend,f
  4198  0734  0872               	movf	___awmod@divisor+1,w
  4199  0735  3BF4               	subwfb	___awmod@dividend+1,f
  4200  0736                     l1918:	
  4201  0736  3001               	movlw	1
  4202  0737                     u2425:	
  4203  0737  36F2               	lsrf	___awmod@divisor+1,f
  4204  0738  0CF1               	rrf	___awmod@divisor,f
  4205  0739  0B89               	decfsz	9,f
  4206  073A  2F37               	goto	u2425
  4207  073B  3001               	movlw	1
  4208  073C  02F6               	subwf	___awmod@counter,f
  4209  073D  1D03               	btfss	3,2
  4210  073E  2F2A               	goto	l1914
  4211  073F                     l1922:	
  4212  073F  0877               	movf	___awmod@sign,w
  4213  0740  1903               	btfsc	3,2
  4214  0741  2F47               	goto	l1926
  4215  0742  09F3               	comf	___awmod@dividend,f
  4216  0743  09F4               	comf	___awmod@dividend+1,f
  4217  0744  0AF3               	incf	___awmod@dividend,f
  4218  0745  1903               	skipnz
  4219  0746  0AF4               	incf	___awmod@dividend+1,f
  4220  0747                     l1926:	
  4221  0747  0874               	movf	___awmod@dividend+1,w
  4222  0748  00F2               	movwf	?___awmod+1
  4223  0749  0873               	movf	___awmod@dividend,w
  4224  074A  00F1               	movwf	?___awmod
  4225  074B  0008               	return
  4226  074C                     __end_of___awmod:	
  4227                           
  4228                           	psect	text23
  4229  078C                     __ptext23:	
  4230 ;; *************** function _LoadSevenSegment *****************
  4231 ;; Defined at:
  4232 ;;		line 94 in file "SevenSegments.h"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  segment_no      1    wreg     unsigned char 
  4235 ;;  value           1    9[BANK0 ] unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  segment_no      1   12[BANK0 ] unsigned char 
  4238 ;;  index           1   13[BANK0 ] char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4248 ;;      Params:         0       1       0       0
  4249 ;;      Locals:         0       2       0       0
  4250 ;;      Temps:          0       2       0       0
  4251 ;;      Totals:         0       5       0       0
  4252 ;;Total ram usage:        5 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    5
  4255 ;; This function calls:
  4256 ;;		_SetDataCenterPin
  4257 ;; This function is called by:
  4258 ;;		_DisplayNumber
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _LoadSevenSegment
  4264  078C                     _LoadSevenSegment:	
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _LoadSevenSegment: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4268                           ;LoadSevenSegment@segment_no stored from wreg
  4269  078C  0020               	movlb	0	; select bank0
  4270  078D  00AC               	movwf	LoadSevenSegment@segment_no
  4271                           
  4272                           ;SevenSegments.h: 96: segment_no += 2;
  4273  078E  3002               	movlw	2
  4274  078F  00AA               	movwf	??_LoadSevenSegment
  4275  0790  082A               	movf	??_LoadSevenSegment,w
  4276  0791  07AC               	addwf	LoadSevenSegment@segment_no,f
  4277                           
  4278                           ;SevenSegments.h: 97: for(signed char index = 7; index != -1; index--)
  4279  0792  3007               	movlw	7
  4280  0793  00AA               	movwf	??_LoadSevenSegment
  4281  0794  082A               	movf	??_LoadSevenSegment,w
  4282  0795  00AD               	movwf	LoadSevenSegment@index
  4283  0796  0A2D               	incf	LoadSevenSegment@index,w
  4284  0797  1903               	btfsc	3,2
  4285  0798  2FBE               	goto	l2508
  4286  0799                     l2502:	
  4287                           
  4288                           ;SevenSegments.h: 98: {
  4289                           ;SevenSegments.h: 99: SetDataCenterPin(1, (value>>index) & 0x1);
  4290  0799  0829               	movf	LoadSevenSegment@value,w
  4291  079A  00AA               	movwf	??_LoadSevenSegment
  4292  079B  0A2D               	incf	LoadSevenSegment@index,w
  4293  079C  2F9E               	goto	u3604
  4294  079D                     u3605:	
  4295  079D  36AA               	lsrf	??_LoadSevenSegment,f
  4296  079E                     u3604:	
  4297  079E  0B89               	decfsz	9,f
  4298  079F  2F9D               	goto	u3605
  4299  07A0  082A               	movf	??_LoadSevenSegment,w
  4300  07A1  3901               	andlw	1
  4301  07A2  00AB               	movwf	??_LoadSevenSegment+1
  4302  07A3  082B               	movf	??_LoadSevenSegment+1,w
  4303  07A4  00A2               	movwf	SetDataCenterPin@pin_value
  4304  07A5  3001               	movlw	1
  4305  07A6  3186  26BC  3187   	fcall	_SetDataCenterPin
  4306                           
  4307                           ;SevenSegments.h: 101: SetDataCenterPin(0, 0x1);
  4308  07A9  0020               	movlb	0	; select bank0
  4309  07AA  01A2               	clrf	SetDataCenterPin@pin_value
  4310  07AB  0AA2               	incf	SetDataCenterPin@pin_value,f
  4311  07AC  3000               	movlw	0
  4312  07AD  3186  26BC  3187   	fcall	_SetDataCenterPin
  4313                           
  4314                           ;SevenSegments.h: 103: SetDataCenterPin(0, 0);
  4315  07B0  0020               	movlb	0	; select bank0
  4316  07B1  01A2               	clrf	SetDataCenterPin@pin_value
  4317  07B2  3000               	movlw	0
  4318  07B3  3186  26BC  3187   	fcall	_SetDataCenterPin
  4319  07B6  30FF               	movlw	255
  4320  07B7  0020               	movlb	0	; select bank0
  4321  07B8  00AA               	movwf	??_LoadSevenSegment
  4322  07B9  082A               	movf	??_LoadSevenSegment,w
  4323  07BA  07AD               	addwf	LoadSevenSegment@index,f
  4324  07BB  0A2D               	incf	LoadSevenSegment@index,w
  4325  07BC  1D03               	btfss	3,2
  4326  07BD  2F99               	goto	l2502
  4327  07BE                     l2508:	
  4328                           
  4329                           ;SevenSegments.h: 105: }
  4330                           ;SevenSegments.h: 106: SetDataCenterPin(segment_no, 1);
  4331  07BE  01A2               	clrf	SetDataCenterPin@pin_value
  4332  07BF  0AA2               	incf	SetDataCenterPin@pin_value,f
  4333  07C0  082C               	movf	LoadSevenSegment@segment_no,w
  4334  07C1  3186  26BC  3187   	fcall	_SetDataCenterPin
  4335                           
  4336                           ;SevenSegments.h: 107: SetDataCenterPin(segment_no, 0);
  4337  07C4  0020               	movlb	0	; select bank0
  4338  07C5  01A2               	clrf	SetDataCenterPin@pin_value
  4339  07C6  082C               	movf	LoadSevenSegment@segment_no,w
  4340  07C7  3186  26BC         	fcall	_SetDataCenterPin
  4341  07C9  0008               	return
  4342  07CA                     __end_of_LoadSevenSegment:	
  4343                           
  4344                           	psect	text24
  4345  06BC                     __ptext24:	
  4346 ;; *************** function _SetDataCenterPin *****************
  4347 ;; Defined at:
  4348 ;;		line 75 in file "SevenSegments.h"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  pin_number      1    wreg     unsigned char 
  4351 ;;  pin_value       1    2[BANK0 ] unsigned char 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  pin_number      1    7[BANK0 ] unsigned char 
  4354 ;;  p               1    8[BANK0 ] PTR unsigned char 
  4355 ;;		 -> CENTER_DATA(5), 
  4356 ;;  center_no       1    6[BANK0 ] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4366 ;;      Params:         0       1       0       0
  4367 ;;      Locals:         0       3       0       0
  4368 ;;      Temps:          0       3       0       0
  4369 ;;      Totals:         0       7       0       0
  4370 ;;Total ram usage:        7 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    4
  4373 ;; This function calls:
  4374 ;;		_LoadDataCenter
  4375 ;;		___awdiv
  4376 ;; This function is called by:
  4377 ;;		_LoadSevenSegment
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           
  4382                           ;psect for function _SetDataCenterPin
  4383  06BC                     _SetDataCenterPin:	
  4384                           
  4385                           ;incstack = 0
  4386                           ; Regs used in _SetDataCenterPin: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4387                           ;SetDataCenterPin@pin_number stored from wreg
  4388  06BC  0020               	movlb	0	; select bank0
  4389  06BD  00A7               	movwf	SetDataCenterPin@pin_number
  4390                           
  4391                           ;SevenSegments.h: 77: byte center_no = pin_number / 8;
  4392  06BE  3008               	movlw	8
  4393  06BF  00F1               	movwf	___awdiv@divisor
  4394  06C0  3000               	movlw	0
  4395  06C1  00F2               	movwf	___awdiv@divisor+1
  4396  06C2  0827               	movf	SetDataCenterPin@pin_number,w
  4397  06C3  00A3               	movwf	??_SetDataCenterPin
  4398  06C4  01A4               	clrf	??_SetDataCenterPin+1
  4399  06C5  0823               	movf	??_SetDataCenterPin,w
  4400  06C6  00F3               	movwf	___awdiv@dividend
  4401  06C7  0824               	movf	??_SetDataCenterPin+1,w
  4402  06C8  00F4               	movwf	___awdiv@dividend+1
  4403  06C9  3186  266B  3186   	fcall	___awdiv
  4404  06CC  0871               	movf	?___awdiv,w
  4405  06CD  0020               	movlb	0	; select bank0
  4406  06CE  00A5               	movwf	??_SetDataCenterPin+2
  4407  06CF  0825               	movf	??_SetDataCenterPin+2,w
  4408  06D0  00A6               	movwf	SetDataCenterPin@center_no
  4409                           
  4410                           ;SevenSegments.h: 78: pin_number %= 8;
  4411  06D1  3007               	movlw	7
  4412  06D2  00A3               	movwf	??_SetDataCenterPin
  4413  06D3  0823               	movf	??_SetDataCenterPin,w
  4414  06D4  05A7               	andwf	SetDataCenterPin@pin_number,f
  4415                           
  4416                           ;SevenSegments.h: 79: byte * p = (byte *)(CENTER_DATA+center_no);
  4417  06D5  0826               	movf	SetDataCenterPin@center_no,w
  4418  06D6  3EE9               	addlw	(low (_CENTER_DATA| 0))& (0+255)
  4419  06D7  00A3               	movwf	??_SetDataCenterPin
  4420  06D8  0823               	movf	??_SetDataCenterPin,w
  4421  06D9  00A8               	movwf	SetDataCenterPin@p
  4422                           
  4423                           ;SevenSegments.h: 81: if(pin_value)
  4424  06DA  0822               	movf	SetDataCenterPin@pin_value,w
  4425  06DB  1903               	btfsc	3,2
  4426  06DC  2EEC               	goto	l2436
  4427                           
  4428                           ;SevenSegments.h: 82: *p |= (1 << pin_number);
  4429  06DD  3001               	movlw	1
  4430  06DE  00A3               	movwf	??_SetDataCenterPin
  4431  06DF  0A27               	incf	SetDataCenterPin@pin_number,w
  4432  06E0  2EE2               	goto	u3374
  4433  06E1                     u3375:	
  4434  06E1  35A3               	lslf	??_SetDataCenterPin,f
  4435  06E2                     u3374:	
  4436  06E2  0B89               	decfsz	9,f
  4437  06E3  2EE1               	goto	u3375
  4438  06E4  0823               	movf	??_SetDataCenterPin,w
  4439  06E5  00A4               	movwf	??_SetDataCenterPin+1
  4440  06E6  0828               	movf	SetDataCenterPin@p,w
  4441  06E7  0086               	movwf	6
  4442  06E8  0187               	clrf	7
  4443  06E9  0824               	movf	??_SetDataCenterPin+1,w
  4444  06EA  0481               	iorwf	1,f
  4445  06EB  2EFB               	goto	l2438
  4446  06EC                     l2436:	
  4447                           
  4448                           ;SevenSegments.h: 83: else
  4449                           ;SevenSegments.h: 84: *p &= ~(1<<pin_number);
  4450  06EC  3001               	movlw	1
  4451  06ED  00A3               	movwf	??_SetDataCenterPin
  4452  06EE  0A27               	incf	SetDataCenterPin@pin_number,w
  4453  06EF  2EF1               	goto	u3384
  4454  06F0                     u3385:	
  4455  06F0  35A3               	lslf	??_SetDataCenterPin,f
  4456  06F1                     u3384:	
  4457  06F1  0B89               	decfsz	9,f
  4458  06F2  2EF0               	goto	u3385
  4459  06F3  0823               	movf	??_SetDataCenterPin,w
  4460  06F4  3AFF               	xorlw	255
  4461  06F5  00A4               	movwf	??_SetDataCenterPin+1
  4462  06F6  0828               	movf	SetDataCenterPin@p,w
  4463  06F7  0086               	movwf	6
  4464  06F8  0187               	clrf	7
  4465  06F9  0824               	movf	??_SetDataCenterPin+1,w
  4466  06FA  0581               	andwf	1,f
  4467  06FB                     l2438:	
  4468                           
  4469                           ;SevenSegments.h: 86: LoadDataCenter(center_no+2, *p);
  4470  06FB  0828               	movf	SetDataCenterPin@p,w
  4471  06FC  0086               	movwf	6
  4472  06FD  0187               	clrf	7
  4473  06FE  0801               	movf	1,w
  4474  06FF  00A3               	movwf	??_SetDataCenterPin
  4475  0700  0823               	movf	??_SetDataCenterPin,w
  4476  0701  00F8               	movwf	LoadDataCenter@center_data
  4477  0702  0826               	movf	SetDataCenterPin@center_no,w
  4478  0703  3E02               	addlw	2
  4479  0704  318F  278B         	fcall	_LoadDataCenter
  4480  0706  0008               	return
  4481  0707                     __end_of_SetDataCenterPin:	
  4482                           
  4483                           	psect	text25
  4484  066B                     __ptext25:	
  4485 ;; *************** function ___awdiv *****************
  4486 ;; Defined at:
  4487 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  divisor         2    1[COMMON] int 
  4490 ;;  dividend        2    3[COMMON] int 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  quotient        2    8[COMMON] int 
  4493 ;;  sign            1    7[COMMON] unsigned char 
  4494 ;;  counter         1    6[COMMON] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  2    1[COMMON] int 
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4504 ;;      Params:         4       0       0       0
  4505 ;;      Locals:         4       0       0       0
  4506 ;;      Temps:          1       0       0       0
  4507 ;;      Totals:         9       0       0       0
  4508 ;;Total ram usage:        9 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    1
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_SetDataCenterPin
  4515 ;;		_DisplayNumber
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           
  4520                           ;psect for function ___awdiv
  4521  066B                     ___awdiv:	
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4525  066B  01F7               	clrf	___awdiv@sign
  4526  066C  1FF2               	btfss	___awdiv@divisor+1,7
  4527  066D  2E75               	goto	l1692
  4528  066E  09F1               	comf	___awdiv@divisor,f
  4529  066F  09F2               	comf	___awdiv@divisor+1,f
  4530  0670  0AF1               	incf	___awdiv@divisor,f
  4531  0671  1903               	skipnz
  4532  0672  0AF2               	incf	___awdiv@divisor+1,f
  4533  0673  01F7               	clrf	___awdiv@sign
  4534  0674  0AF7               	incf	___awdiv@sign,f
  4535  0675                     l1692:	
  4536  0675  1FF4               	btfss	___awdiv@dividend+1,7
  4537  0676  2E80               	goto	l1698
  4538  0677  09F3               	comf	___awdiv@dividend,f
  4539  0678  09F4               	comf	___awdiv@dividend+1,f
  4540  0679  0AF3               	incf	___awdiv@dividend,f
  4541  067A  1903               	skipnz
  4542  067B  0AF4               	incf	___awdiv@dividend+1,f
  4543  067C  3001               	movlw	1
  4544  067D  00F5               	movwf	??___awdiv
  4545  067E  0875               	movf	??___awdiv,w
  4546  067F  06F7               	xorwf	___awdiv@sign,f
  4547  0680                     l1698:	
  4548  0680  01F8               	clrf	___awdiv@quotient
  4549  0681  01F9               	clrf	___awdiv@quotient+1
  4550  0682  0871               	movf	___awdiv@divisor,w
  4551  0683  0472               	iorwf	___awdiv@divisor+1,w
  4552  0684  1903               	btfsc	3,2
  4553  0685  2EAF               	goto	l1720
  4554  0686  01F6               	clrf	___awdiv@counter
  4555  0687  0AF6               	incf	___awdiv@counter,f
  4556  0688                     l1708:	
  4557  0688  1BF2               	btfsc	___awdiv@divisor+1,7
  4558  0689  2E94               	goto	l1710
  4559  068A  3001               	movlw	1
  4560  068B                     u1855:	
  4561  068B  35F1               	lslf	___awdiv@divisor,f
  4562  068C  0DF2               	rlf	___awdiv@divisor+1,f
  4563  068D  0B89               	decfsz	9,f
  4564  068E  2E8B               	goto	u1855
  4565  068F  3001               	movlw	1
  4566  0690  00F5               	movwf	??___awdiv
  4567  0691  0875               	movf	??___awdiv,w
  4568  0692  07F6               	addwf	___awdiv@counter,f
  4569  0693  2E88               	goto	l1708
  4570  0694                     l1710:	
  4571  0694  3001               	movlw	1
  4572  0695                     u1875:	
  4573  0695  35F8               	lslf	___awdiv@quotient,f
  4574  0696  0DF9               	rlf	___awdiv@quotient+1,f
  4575  0697  0B89               	decfsz	9,f
  4576  0698  2E95               	goto	u1875
  4577  0699  0872               	movf	___awdiv@divisor+1,w
  4578  069A  0274               	subwf	___awdiv@dividend+1,w
  4579  069B  1D03               	skipz
  4580  069C  2E9F               	goto	u1885
  4581  069D  0871               	movf	___awdiv@divisor,w
  4582  069E  0273               	subwf	___awdiv@dividend,w
  4583  069F                     u1885:	
  4584  069F  1C03               	skipc
  4585  06A0  2EA6               	goto	l1716
  4586  06A1  0871               	movf	___awdiv@divisor,w
  4587  06A2  02F3               	subwf	___awdiv@dividend,f
  4588  06A3  0872               	movf	___awdiv@divisor+1,w
  4589  06A4  3BF4               	subwfb	___awdiv@dividend+1,f
  4590  06A5  1478               	bsf	___awdiv@quotient,0
  4591  06A6                     l1716:	
  4592  06A6  3001               	movlw	1
  4593  06A7                     u1895:	
  4594  06A7  36F2               	lsrf	___awdiv@divisor+1,f
  4595  06A8  0CF1               	rrf	___awdiv@divisor,f
  4596  06A9  0B89               	decfsz	9,f
  4597  06AA  2EA7               	goto	u1895
  4598  06AB  3001               	movlw	1
  4599  06AC  02F6               	subwf	___awdiv@counter,f
  4600  06AD  1D03               	btfss	3,2
  4601  06AE  2E94               	goto	l1710
  4602  06AF                     l1720:	
  4603  06AF  0877               	movf	___awdiv@sign,w
  4604  06B0  1903               	btfsc	3,2
  4605  06B1  2EB7               	goto	l1724
  4606  06B2  09F8               	comf	___awdiv@quotient,f
  4607  06B3  09F9               	comf	___awdiv@quotient+1,f
  4608  06B4  0AF8               	incf	___awdiv@quotient,f
  4609  06B5  1903               	skipnz
  4610  06B6  0AF9               	incf	___awdiv@quotient+1,f
  4611  06B7                     l1724:	
  4612  06B7  0879               	movf	___awdiv@quotient+1,w
  4613  06B8  00F2               	movwf	?___awdiv+1
  4614  06B9  0878               	movf	___awdiv@quotient,w
  4615  06BA  00F1               	movwf	?___awdiv
  4616  06BB  0008               	return
  4617  06BC                     __end_of___awdiv:	
  4618                           
  4619                           	psect	text26
  4620  0F8B                     __ptext26:	
  4621 ;; *************** function _LoadDataCenter *****************
  4622 ;; Defined at:
  4623 ;;		line 57 in file "SevenSegments.h"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  center_no       1    wreg     unsigned char 
  4626 ;;  center_data     1    8[COMMON] unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  center_no       1    0[BANK0 ] unsigned char 
  4629 ;;  index           1    1[BANK0 ] char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4639 ;;      Params:         1       0       0       0
  4640 ;;      Locals:         0       2       0       0
  4641 ;;      Temps:          2       0       0       0
  4642 ;;      Totals:         3       2       0       0
  4643 ;;Total ram usage:        5 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    3
  4646 ;; This function calls:
  4647 ;;		_SetMainShiftPin
  4648 ;; This function is called by:
  4649 ;;		_SetDataCenterPin
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           
  4654                           ;psect for function _LoadDataCenter
  4655  0F8B                     _LoadDataCenter:	
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _LoadDataCenter: [wreg+status,2+status,0+pclath+cstack]
  4659                           ;LoadDataCenter@center_no stored from wreg
  4660  0F8B  0020               	movlb	0	; select bank0
  4661  0F8C  00A0               	movwf	LoadDataCenter@center_no
  4662                           
  4663                           ;SevenSegments.h: 60: for(signed char index = 7; index != -1; index--)
  4664  0F8D  3007               	movlw	7
  4665  0F8E  00F9               	movwf	??_LoadDataCenter
  4666  0F8F  0879               	movf	??_LoadDataCenter,w
  4667  0F90  00A1               	movwf	LoadDataCenter@index
  4668  0F91  0A21               	incf	LoadDataCenter@index,w
  4669  0F92  1903               	btfsc	3,2
  4670  0F93  2FB7               	goto	l2410
  4671  0F94                     l2404:	
  4672                           
  4673                           ;SevenSegments.h: 61: {
  4674                           ;SevenSegments.h: 62: SetMainShiftPin(1, (center_data>>index) & 0x1);
  4675  0F94  0878               	movf	LoadDataCenter@center_data,w
  4676  0F95  00F9               	movwf	??_LoadDataCenter
  4677  0F96  0A21               	incf	LoadDataCenter@index,w
  4678  0F97  2F99               	goto	u3304
  4679  0F98                     u3305:	
  4680  0F98  36F9               	lsrf	??_LoadDataCenter,f
  4681  0F99                     u3304:	
  4682  0F99  0B89               	decfsz	9,f
  4683  0F9A  2F98               	goto	u3305
  4684  0F9B  0879               	movf	??_LoadDataCenter,w
  4685  0F9C  3901               	andlw	1
  4686  0F9D  00FA               	movwf	??_LoadDataCenter+1
  4687  0F9E  087A               	movf	??_LoadDataCenter+1,w
  4688  0F9F  00F4               	movwf	SetMainShiftPin@pin_value
  4689  0FA0  3001               	movlw	1
  4690  0FA1  318E  262C  318F   	fcall	_SetMainShiftPin
  4691                           
  4692                           ;SevenSegments.h: 64: SetMainShiftPin(0, 0x1);
  4693  0FA4  01F4               	clrf	SetMainShiftPin@pin_value
  4694  0FA5  0AF4               	incf	SetMainShiftPin@pin_value,f
  4695  0FA6  3000               	movlw	0
  4696  0FA7  318E  262C  318F   	fcall	_SetMainShiftPin
  4697                           
  4698                           ;SevenSegments.h: 66: SetMainShiftPin(0, 0);
  4699  0FAA  01F4               	clrf	SetMainShiftPin@pin_value
  4700  0FAB  3000               	movlw	0
  4701  0FAC  318E  262C  318F   	fcall	_SetMainShiftPin
  4702  0FAF  30FF               	movlw	255
  4703  0FB0  00F9               	movwf	??_LoadDataCenter
  4704  0FB1  0879               	movf	??_LoadDataCenter,w
  4705  0FB2  0020               	movlb	0	; select bank0
  4706  0FB3  07A1               	addwf	LoadDataCenter@index,f
  4707  0FB4  0A21               	incf	LoadDataCenter@index,w
  4708  0FB5  1D03               	btfss	3,2
  4709  0FB6  2F94               	goto	l2404
  4710  0FB7                     l2410:	
  4711                           
  4712                           ;SevenSegments.h: 68: }
  4713                           ;SevenSegments.h: 69: SetMainShiftPin(center_no, 1);
  4714  0FB7  01F4               	clrf	SetMainShiftPin@pin_value
  4715  0FB8  0AF4               	incf	SetMainShiftPin@pin_value,f
  4716  0FB9  0820               	movf	LoadDataCenter@center_no,w
  4717  0FBA  318E  262C  318F   	fcall	_SetMainShiftPin
  4718                           
  4719                           ;SevenSegments.h: 70: SetMainShiftPin(center_no, 0);
  4720  0FBD  01F4               	clrf	SetMainShiftPin@pin_value
  4721  0FBE  0020               	movlb	0	; select bank0
  4722  0FBF  0820               	movf	LoadDataCenter@center_no,w
  4723  0FC0  318E  262C         	fcall	_SetMainShiftPin
  4724  0FC2  0008               	return
  4725  0FC3                     __end_of_LoadDataCenter:	
  4726                           
  4727                           	psect	text27
  4728  0E2C                     __ptext27:	
  4729 ;; *************** function _SetMainShiftPin *****************
  4730 ;; Defined at:
  4731 ;;		line 40 in file "SevenSegments.h"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  pin_number      1    wreg     unsigned char 
  4734 ;;  pin_value       1    4[COMMON] unsigned char 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  pin_number      1    7[COMMON] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4746 ;;      Params:         1       0       0       0
  4747 ;;      Locals:         1       0       0       0
  4748 ;;      Temps:          2       0       0       0
  4749 ;;      Totals:         4       0       0       0
  4750 ;;Total ram usage:        4 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    2
  4753 ;; This function calls:
  4754 ;;		_LoadMainShift
  4755 ;; This function is called by:
  4756 ;;		_LoadDataCenter
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           
  4761                           ;psect for function _SetMainShiftPin
  4762  0E2C                     _SetMainShiftPin:	
  4763                           
  4764                           ;incstack = 0
  4765                           ; Regs used in _SetMainShiftPin: [wreg+status,2+status,0+pclath+cstack]
  4766                           ;SetMainShiftPin@pin_number stored from wreg
  4767  0E2C  00F7               	movwf	SetMainShiftPin@pin_number
  4768                           
  4769                           ;SevenSegments.h: 43: if(pin_value)
  4770  0E2D  0874               	movf	SetMainShiftPin@pin_value,w
  4771  0E2E  1903               	btfsc	3,2
  4772  0E2F  2E3D               	goto	l2394
  4773                           
  4774                           ;SevenSegments.h: 44: {
  4775                           ;SevenSegments.h: 45: MAIN_SHIFT_DATA |= 1 << (pin_number);
  4776  0E30  3001               	movlw	1
  4777  0E31  00F5               	movwf	??_SetMainShiftPin
  4778  0E32  0A77               	incf	SetMainShiftPin@pin_number,w
  4779  0E33  2E35               	goto	u3274
  4780  0E34                     u3275:	
  4781  0E34  35F5               	lslf	??_SetMainShiftPin,f
  4782  0E35                     u3274:	
  4783  0E35  0B89               	decfsz	9,f
  4784  0E36  2E34               	goto	u3275
  4785  0E37  0875               	movf	??_SetMainShiftPin,w
  4786  0E38  00F6               	movwf	??_SetMainShiftPin+1
  4787  0E39  0876               	movf	??_SetMainShiftPin+1,w
  4788  0E3A  0020               	movlb	0	; select bank0
  4789  0E3B  04E9               	iorwf	_MAIN_SHIFT_DATA,f
  4790                           
  4791                           ;SevenSegments.h: 46: }
  4792  0E3C  2E4A               	goto	l2396
  4793  0E3D                     l2394:	
  4794                           
  4795                           ;SevenSegments.h: 47: else MAIN_SHIFT_DATA &= ~(1 << (pin_number));
  4796  0E3D  3001               	movlw	1
  4797  0E3E  00F5               	movwf	??_SetMainShiftPin
  4798  0E3F  0A77               	incf	SetMainShiftPin@pin_number,w
  4799  0E40  2E42               	goto	u3284
  4800  0E41                     u3285:	
  4801  0E41  35F5               	lslf	??_SetMainShiftPin,f
  4802  0E42                     u3284:	
  4803  0E42  0B89               	decfsz	9,f
  4804  0E43  2E41               	goto	u3285
  4805  0E44  0875               	movf	??_SetMainShiftPin,w
  4806  0E45  3AFF               	xorlw	255
  4807  0E46  00F6               	movwf	??_SetMainShiftPin+1
  4808  0E47  0876               	movf	??_SetMainShiftPin+1,w
  4809  0E48  0020               	movlb	0	; select bank0
  4810  0E49  05E9               	andwf	_MAIN_SHIFT_DATA,f
  4811  0E4A                     l2396:	
  4812                           
  4813                           ;SevenSegments.h: 49: LoadMainShift(MAIN_SHIFT_DATA);
  4814  0E4A  0869               	movf	_MAIN_SHIFT_DATA,w
  4815  0E4B  318E  26C7         	fcall	_LoadMainShift
  4816  0E4D  0008               	return
  4817  0E4E                     __end_of_SetMainShiftPin:	
  4818                           
  4819                           	psect	text28
  4820  0EC7                     __ptext28:	
  4821 ;; *************** function _LoadMainShift *****************
  4822 ;; Defined at:
  4823 ;;		line 22 in file "SevenSegments.h"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  data            1    wreg     unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  data            1    2[COMMON] unsigned char 
  4828 ;;  index           1    3[COMMON] char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4838 ;;      Params:         0       0       0       0
  4839 ;;      Locals:         2       0       0       0
  4840 ;;      Temps:          1       0       0       0
  4841 ;;      Totals:         3       0       0       0
  4842 ;;Total ram usage:        3 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_SetMainShiftPin
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function _LoadMainShift
  4854  0EC7                     _LoadMainShift:	
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in _LoadMainShift: [wreg+status,2+status,0]
  4858                           ;LoadMainShift@data stored from wreg
  4859  0EC7  00F2               	movwf	LoadMainShift@data
  4860                           
  4861                           ;SevenSegments.h: 25: for(signed char index = 7; index != -1; index--)
  4862  0EC8  3007               	movlw	7
  4863  0EC9  00F1               	movwf	??_LoadMainShift
  4864  0ECA  0871               	movf	??_LoadMainShift,w
  4865  0ECB  00F3               	movwf	LoadMainShift@index
  4866  0ECC  0A73               	incf	LoadMainShift@index,w
  4867  0ECD  1903               	btfsc	3,2
  4868  0ECE  2EEC               	goto	l197
  4869  0ECF                     l2374:	
  4870                           
  4871                           ;SevenSegments.h: 26: {
  4872                           ;SevenSegments.h: 27: RA4 = (data>>index) & 0x1;
  4873  0ECF  0872               	movf	LoadMainShift@data,w
  4874  0ED0  00F1               	movwf	??_LoadMainShift
  4875  0ED1  0A73               	incf	LoadMainShift@index,w
  4876  0ED2  2ED4               	goto	u3224
  4877  0ED3                     u3225:	
  4878  0ED3  36F1               	lsrf	??_LoadMainShift,f
  4879  0ED4                     u3224:	
  4880  0ED4  0B89               	decfsz	9,f
  4881  0ED5  2ED3               	goto	u3225
  4882  0ED6  1C71               	btfss	??_LoadMainShift,0
  4883  0ED7  2EDB               	goto	u3230
  4884  0ED8  0020               	movlb	0	; select bank0
  4885  0ED9  160C               	bsf	12,4	;volatile
  4886  0EDA  2EDD               	goto	l2376
  4887  0EDB                     u3230:	
  4888  0EDB  0020               	movlb	0	; select bank0
  4889  0EDC  120C               	bcf	12,4	;volatile
  4890  0EDD                     l2376:	
  4891                           
  4892                           ;SevenSegments.h: 29: RA0 = 0x1;
  4893  0EDD  140C               	bsf	12,0	;volatile
  4894                           
  4895                           ;SevenSegments.h: 30: _delay((unsigned long)((30)*(16000000L/4000000.0)));
  4896  0EDE  3027               	movlw	39
  4897  0EDF  00F1               	movwf	??_LoadMainShift
  4898  0EE0                     u4277:	
  4899  0EE0  0BF1               	decfsz	??_LoadMainShift,f
  4900  0EE1  2EE0               	goto	u4277
  4901  0EE2  3200               	nop2	;nop
  4902                           
  4903                           ;SevenSegments.h: 31: RA0 = 0;
  4904  0EE3  0020               	movlb	0	; select bank0
  4905  0EE4  100C               	bcf	12,0	;volatile
  4906  0EE5  30FF               	movlw	255
  4907  0EE6  00F1               	movwf	??_LoadMainShift
  4908  0EE7  0871               	movf	??_LoadMainShift,w
  4909  0EE8  07F3               	addwf	LoadMainShift@index,f
  4910  0EE9  0A73               	incf	LoadMainShift@index,w
  4911  0EEA  1D03               	btfss	3,2
  4912  0EEB  2ECF               	goto	l2374
  4913  0EEC                     l197:	
  4914                           
  4915                           ;SevenSegments.h: 33: }
  4916                           ;SevenSegments.h: 34: RA5 = 1;
  4917  0EEC  0020               	movlb	0	; select bank0
  4918  0EED  168C               	bsf	12,5	;volatile
  4919                           
  4920                           ;SevenSegments.h: 35: _delay((unsigned long)((30)*(16000000L/4000000.0)));
  4921  0EEE  3027               	movlw	39
  4922  0EEF  00F1               	movwf	??_LoadMainShift
  4923  0EF0                     u4287:	
  4924  0EF0  0BF1               	decfsz	??_LoadMainShift,f
  4925  0EF1  2EF0               	goto	u4287
  4926  0EF2  3200               	nop2	;nop
  4927                           
  4928                           ;SevenSegments.h: 36: RA5 = 0;
  4929  0EF3  0020               	movlb	0	; select bank0
  4930  0EF4  128C               	bcf	12,5	;volatile
  4931  0EF5  0008               	return
  4932  0EF6                     __end_of_LoadMainShift:	
  4933                           
  4934                           	psect	text29
  4935  0D17                     __ptext29:	
  4936 ;; *************** function _DS1307_time *****************
  4937 ;; Defined at:
  4938 ;;		line 68 in file "DS1307.h"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4952 ;;      Params:         0       0       0       0
  4953 ;;      Locals:         0       0       0       0
  4954 ;;      Temps:          1       0       0       0
  4955 ;;      Totals:         1       0       0       0
  4956 ;;Total ram usage:        1 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    3
  4959 ;; This function calls:
  4960 ;;		_DS1307_shared_get
  4961 ;; This function is called by:
  4962 ;;		_main
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           
  4967                           ;psect for function _DS1307_time
  4968  0D17                     _DS1307_time:	
  4969                           
  4970                           ;DS1307.h: 76: DS1307_shared_get(0, zaman+4);
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _DS1307_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4974  0D17  30E6               	movlw	(low ((_zaman| 0+4)))& (0+255)
  4975  0D18  00FA               	movwf	??_DS1307_time
  4976  0D19  087A               	movf	??_DS1307_time,w
  4977  0D1A  00F5               	movwf	DS1307_shared_get@reg
  4978  0D1B  3000               	movlw	0
  4979  0D1C  3184  24CE         	fcall	_DS1307_shared_get
  4980  0D1E  0008               	return
  4981  0D1F                     __end_of_DS1307_time:	
  4982                           
  4983                           	psect	text30
  4984  0D72                     __ptext30:	
  4985 ;; *************** function _DS1307_date *****************
  4986 ;; Defined at:
  4987 ;;		line 80 in file "DS1307.h"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5001 ;;      Params:         0       0       0       0
  5002 ;;      Locals:         0       0       0       0
  5003 ;;      Temps:          1       0       0       0
  5004 ;;      Totals:         1       0       0       0
  5005 ;;Total ram usage:        1 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    3
  5008 ;; This function calls:
  5009 ;;		_DS1307_shared_get
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _DS1307_date
  5017  0D72                     _DS1307_date:	
  5018                           
  5019                           ;DS1307.h: 88: DS1307_shared_get(4, zaman);
  5020                           
  5021                           ;incstack = 0
  5022                           ; Regs used in _DS1307_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5023  0D72  30E2               	movlw	(low (_zaman| 0))& (0+255)
  5024  0D73  00FA               	movwf	??_DS1307_date
  5025  0D74  087A               	movf	??_DS1307_date,w
  5026  0D75  00F5               	movwf	DS1307_shared_get@reg
  5027  0D76  3004               	movlw	4
  5028  0D77  3184  24CE         	fcall	_DS1307_shared_get
  5029                           
  5030                           ;DS1307.h: 90: zaman[3] = zaman[2];
  5031  0D79  0021               	movlb	1	; select bank1
  5032  0D7A  0864               	movf	(_zaman^(0+128)+2),w
  5033  0D7B  00FA               	movwf	??_DS1307_date
  5034  0D7C  087A               	movf	??_DS1307_date,w
  5035  0D7D  00E5               	movwf	(_zaman^(0+128)+3)
  5036                           
  5037                           ;DS1307.h: 91: zaman[2]= zaman[1];
  5038  0D7E  0863               	movf	(_zaman^(0+128)+1),w
  5039  0D7F  00FA               	movwf	??_DS1307_date
  5040  0D80  087A               	movf	??_DS1307_date,w
  5041  0D81  00E4               	movwf	(_zaman^(0+128)+2)
  5042                           
  5043                           ;DS1307.h: 92: zaman[1] = 20;
  5044  0D82  3014               	movlw	20
  5045  0D83  00FA               	movwf	??_DS1307_date
  5046  0D84  087A               	movf	??_DS1307_date,w
  5047  0D85  00E3               	movwf	(_zaman^(0+128)+1)
  5048  0D86  0008               	return
  5049  0D87                     __end_of_DS1307_date:	
  5050                           
  5051                           	psect	text31
  5052  04CE                     __ptext31:	
  5053 ;; *************** function _DS1307_shared_get *****************
  5054 ;; Defined at:
  5055 ;;		line 35 in file "DS1307.h"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  addr            1    wreg     unsigned char 
  5058 ;;  reg             1    5[COMMON] PTR unsigned char 
  5059 ;;		 -> zaman(7), 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  addr            1    0[BANK0 ] unsigned char 
  5062 ;;  k               1    1[BANK0 ] char 
  5063 ;;  den             1    2[BANK0 ] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5073 ;;      Params:         1       0       0       0
  5074 ;;      Locals:         0       3       0       0
  5075 ;;      Temps:          4       0       0       0
  5076 ;;      Totals:         5       3       0       0
  5077 ;;Total ram usage:        8 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    2
  5080 ;; This function calls:
  5081 ;;		_I2C_SendACK
  5082 ;;		_I2C_SendNACK
  5083 ;;		_I2C_Start
  5084 ;;		_I2C_Stop
  5085 ;;		_I2C_data_receive
  5086 ;;		_I2C_data_send
  5087 ;;		___bmul
  5088 ;; This function is called by:
  5089 ;;		_DS1307_time
  5090 ;;		_DS1307_date
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _DS1307_shared_get
  5096  04CE                     _DS1307_shared_get:	
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _DS1307_shared_get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5100                           ;DS1307_shared_get@addr stored from wreg
  5101  04CE  0020               	movlb	0	; select bank0
  5102  04CF  00A0               	movwf	DS1307_shared_get@addr
  5103                           
  5104                           ;DS1307.h: 38: I2C_Start();
  5105  04D0  318C  24F9  3184   	fcall	_I2C_Start
  5106                           
  5107                           ;DS1307.h: 39: I2C_data_send(0b11010000);
  5108  04D3  30D0               	movlw	208
  5109  04D4  318D  2587  3184   	fcall	_I2C_data_send
  5110                           
  5111                           ;DS1307.h: 40: I2C_data_send(addr);
  5112  04D7  0020               	movlb	0	; select bank0
  5113  04D8  0820               	movf	DS1307_shared_get@addr,w
  5114  04D9  318D  2587  3184   	fcall	_I2C_data_send
  5115                           
  5116                           ;DS1307.h: 42: I2C_Stop();
  5117  04DC  318D  2500  3184   	fcall	_I2C_Stop
  5118                           
  5119                           ;DS1307.h: 44: I2C_Start();
  5120  04DF  318C  24F9  3184   	fcall	_I2C_Start
  5121                           
  5122                           ;DS1307.h: 45: I2C_data_send(0b11010001);
  5123  04E2  30D1               	movlw	209
  5124  04E3  318D  2587  3184   	fcall	_I2C_data_send
  5125                           
  5126                           ;DS1307.h: 46: byte den;
  5127                           ;DS1307.h: 47: for(signed char k=2; k != -1; k--)
  5128  04E6  3002               	movlw	2
  5129  04E7  00F6               	movwf	??_DS1307_shared_get
  5130  04E8  0876               	movf	??_DS1307_shared_get,w
  5131  04E9  0020               	movlb	0	; select bank0
  5132  04EA  00A1               	movwf	DS1307_shared_get@k
  5133  04EB  0A21               	incf	DS1307_shared_get@k,w
  5134  04EC  1903               	btfsc	3,2
  5135  04ED  2D3D               	goto	l2646
  5136  04EE                     l2624:	
  5137                           
  5138                           ;DS1307.h: 48: {
  5139                           ;DS1307.h: 49: den = I2C_data_receive();
  5140  04EE  318D  251F  3184   	fcall	_I2C_data_receive
  5141  04F1  00F6               	movwf	??_DS1307_shared_get
  5142  04F2  0876               	movf	??_DS1307_shared_get,w
  5143  04F3  0020               	movlb	0	; select bank0
  5144  04F4  00A2               	movwf	DS1307_shared_get@den
  5145                           
  5146                           ;DS1307.h: 50: if(k == 0 && addr==0)
  5147  04F5  0821               	movf	DS1307_shared_get@k,w
  5148  04F6  1D03               	btfss	3,2
  5149  04F7  2D0B               	goto	l2632
  5150  04F8  0820               	movf	DS1307_shared_get@addr,w
  5151  04F9  1D03               	btfss	3,2
  5152  04FA  2D0B               	goto	l2632
  5153                           
  5154                           ;DS1307.h: 51: {
  5155                           ;DS1307.h: 52: den = ((den>>4)&0b11)*10 + (den&0xf);
  5156  04FB  300F               	movlw	15
  5157  04FC  0522               	andwf	DS1307_shared_get@den,w
  5158  04FD  00F6               	movwf	??_DS1307_shared_get
  5159  04FE  300A               	movlw	10
  5160  04FF  00F7               	movwf	??_DS1307_shared_get+1
  5161  0500  0877               	movf	??_DS1307_shared_get+1,w
  5162  0501  00F1               	movwf	___bmul@multiplicand
  5163  0502  0822               	movf	DS1307_shared_get@den,w
  5164  0503  00F8               	movwf	??_DS1307_shared_get+2
  5165  0504  3004               	movlw	4
  5166  0505                     u3925:	
  5167  0505  36F8               	lsrf	??_DS1307_shared_get+2,f
  5168  0506  0B89               	decfsz	9,f
  5169  0507  2D05               	goto	u3925
  5170  0508  0878               	movf	??_DS1307_shared_get+2,w
  5171  0509  3903               	andlw	3
  5172  050A  2D19               	goto	L7
  5173  050B                     l2632:	
  5174                           ;DS1307.h: 53: }
  5175                           
  5176                           
  5177                           ;DS1307.h: 54: else den = (den >>4)*10 + (den&0xf);
  5178  050B  300F               	movlw	15
  5179  050C  0522               	andwf	DS1307_shared_get@den,w
  5180  050D  00F6               	movwf	??_DS1307_shared_get
  5181  050E  300A               	movlw	10
  5182  050F  00F7               	movwf	??_DS1307_shared_get+1
  5183  0510  0877               	movf	??_DS1307_shared_get+1,w
  5184  0511  00F1               	movwf	___bmul@multiplicand
  5185  0512  0822               	movf	DS1307_shared_get@den,w
  5186  0513  00F8               	movwf	??_DS1307_shared_get+2
  5187  0514  3004               	movlw	4
  5188  0515                     u3935:	
  5189  0515  36F8               	lsrf	??_DS1307_shared_get+2,f
  5190  0516  0B89               	decfsz	9,f
  5191  0517  2D15               	goto	u3935
  5192  0518  0878               	movf	??_DS1307_shared_get+2,w
  5193  0519                     L7:	
  5194  0519  318D  253A  3184   	fcall	___bmul
  5195  051C  0776               	addwf	??_DS1307_shared_get,w
  5196  051D  00F9               	movwf	??_DS1307_shared_get+3
  5197  051E  0879               	movf	??_DS1307_shared_get+3,w
  5198  051F  0020               	movlb	0	; select bank0
  5199  0520  00A2               	movwf	DS1307_shared_get@den
  5200                           
  5201                           ;DS1307.h: 56: reg[k] = den;
  5202  0521  0822               	movf	DS1307_shared_get@den,w
  5203  0522  00F6               	movwf	??_DS1307_shared_get
  5204  0523  0821               	movf	DS1307_shared_get@k,w
  5205  0524  0775               	addwf	DS1307_shared_get@reg,w
  5206  0525  00F7               	movwf	??_DS1307_shared_get+1
  5207  0526  0877               	movf	??_DS1307_shared_get+1,w
  5208  0527  0086               	movwf	6
  5209  0528  0187               	clrf	7
  5210  0529  0876               	movf	??_DS1307_shared_get,w
  5211  052A  0081               	movwf	1
  5212                           
  5213                           ;DS1307.h: 57: if(k!=0)
  5214  052B  0821               	movf	DS1307_shared_get@k,w
  5215  052C  1903               	btfsc	3,2
  5216  052D  2D32               	goto	l2640
  5217                           
  5218                           ;DS1307.h: 59: I2C_SendACK();
  5219  052E  318D  2507  3184   	fcall	_I2C_SendACK
  5220  0531  2D35               	goto	l2642
  5221  0532                     l2640:	
  5222                           
  5223                           ;DS1307.h: 60: else I2C_SendNACK();
  5224  0532  318D  250F  3184   	fcall	_I2C_SendNACK
  5225  0535                     l2642:	
  5226  0535  30FF               	movlw	255
  5227  0536  00F6               	movwf	??_DS1307_shared_get
  5228  0537  0876               	movf	??_DS1307_shared_get,w
  5229  0538  0020               	movlb	0	; select bank0
  5230  0539  07A1               	addwf	DS1307_shared_get@k,f
  5231  053A  0A21               	incf	DS1307_shared_get@k,w
  5232  053B  1D03               	btfss	3,2
  5233  053C  2CEE               	goto	l2624
  5234  053D                     l2646:	
  5235                           
  5236                           ;DS1307.h: 61: }
  5237                           ;DS1307.h: 63: I2C_Stop();
  5238  053D  318D  2500         	fcall	_I2C_Stop
  5239  053F  0008               	return
  5240  0540                     __end_of_DS1307_shared_get:	
  5241                           
  5242                           	psect	text32
  5243  0D3A                     __ptext32:	
  5244 ;; *************** function ___bmul *****************
  5245 ;; Defined at:
  5246 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  multiplier      1    wreg     unsigned char 
  5249 ;;  multiplicand    1    1[COMMON] unsigned char 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  multiplier      1    4[COMMON] unsigned char 
  5252 ;;  product         1    3[COMMON] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      unsigned char 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5262 ;;      Params:         1       0       0       0
  5263 ;;      Locals:         2       0       0       0
  5264 ;;      Temps:          1       0       0       0
  5265 ;;      Totals:         4       0       0       0
  5266 ;;Total ram usage:        4 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:    1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_DS1307_shared_get
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           
  5277                           ;psect for function ___bmul
  5278  0D3A                     ___bmul:	
  5279                           
  5280                           ;incstack = 0
  5281                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5282                           ;___bmul@multiplier stored from wreg
  5283  0D3A  00F4               	movwf	___bmul@multiplier
  5284  0D3B  01F3               	clrf	___bmul@product
  5285  0D3C                     l2512:	
  5286  0D3C  1C74               	btfss	___bmul@multiplier,0
  5287  0D3D  2D42               	goto	l2516
  5288  0D3E  0871               	movf	___bmul@multiplicand,w
  5289  0D3F  00F2               	movwf	??___bmul
  5290  0D40  0872               	movf	??___bmul,w
  5291  0D41  07F3               	addwf	___bmul@product,f
  5292  0D42                     l2516:	
  5293  0D42  1003               	clrc
  5294  0D43  0DF1               	rlf	___bmul@multiplicand,f
  5295  0D44  1003               	clrc
  5296  0D45  0CF4               	rrf	___bmul@multiplier,f
  5297  0D46  0874               	movf	___bmul@multiplier,w
  5298  0D47  1D03               	btfss	3,2
  5299  0D48  2D3C               	goto	l2512
  5300  0D49  0873               	movf	___bmul@product,w
  5301  0D4A  0008               	return
  5302  0D4B                     __end_of___bmul:	
  5303                           
  5304                           	psect	text33
  5305  0D87                     __ptext33:	
  5306 ;; *************** function _I2C_data_send *****************
  5307 ;; Defined at:
  5308 ;;		line 236 in file "I2C.h"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  data            1    wreg     unsigned char 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  data            1    3[COMMON] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5322 ;;      Params:         0       0       0       0
  5323 ;;      Locals:         1       0       0       0
  5324 ;;      Temps:          2       0       0       0
  5325 ;;      Totals:         3       0       0       0
  5326 ;;Total ram usage:        3 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_DS1307_shared_get
  5333 ;;		_DS1307_set_shared
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function _I2C_data_send
  5339  0D87                     _I2C_data_send:	
  5340                           
  5341                           ;incstack = 0
  5342                           ; Regs used in _I2C_data_send: [wreg]
  5343                           ;I2C_data_send@data stored from wreg
  5344  0D87  00F3               	movwf	I2C_data_send@data
  5345                           
  5346                           ;I2C.h: 284: SSP1IF = 0;
  5347  0D88  0020               	movlb	0	; select bank0
  5348  0D89  1191               	bcf	17,3	;volatile
  5349                           
  5350                           ;I2C.h: 287: SSPBUF = data ;
  5351  0D8A  0873               	movf	I2C_data_send@data,w
  5352  0D8B  0024               	movlb	4	; select bank4
  5353  0D8C  0091               	movwf	17	;volatile
  5354  0D8D                     l155:	
  5355                           ;I2C.h: 289: while (BF);
  5356                           
  5357  0D8D  1814               	btfsc	20,0	;volatile
  5358  0D8E  2D8D               	goto	l155
  5359                           
  5360                           ;I2C.h: 290: _delay((unsigned long)((1)*(16000000L/4000.0)));
  5361  0D8F  3006               	movlw	6
  5362  0D90  00F2               	movwf	??_I2C_data_send+1
  5363  0D91  3030               	movlw	48
  5364  0D92  00F1               	movwf	??_I2C_data_send
  5365  0D93                     u4297:	
  5366  0D93  0BF1               	decfsz	??_I2C_data_send,f
  5367  0D94  2D93               	goto	u4297
  5368  0D95  0BF2               	decfsz	??_I2C_data_send+1,f
  5369  0D96  2D93               	goto	u4297
  5370  0D97  0000               	nop
  5371  0D98                     l158:	
  5372                           ;I2C.h: 306: while(SSP1IF ==0){};
  5373                           
  5374  0D98  0020               	movlb	0	; select bank0
  5375  0D99  1D91               	btfss	17,3	;volatile
  5376  0D9A  2D98               	goto	l158
  5377                           
  5378                           ;I2C.h: 307: SSP1IF = 0;
  5379  0D9B  1191               	bcf	17,3	;volatile
  5380  0D9C  0008               	return
  5381  0D9D                     __end_of_I2C_data_send:	
  5382                           
  5383                           	psect	text34
  5384  0D1F                     __ptext34:	
  5385 ;; *************** function _I2C_data_receive *****************
  5386 ;; Defined at:
  5387 ;;		line 222 in file "I2C.h"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      unsigned char 
  5394 ;; Registers used:
  5395 ;;		wreg
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5401 ;;      Params:         0       0       0       0
  5402 ;;      Locals:         0       0       0       0
  5403 ;;      Temps:          0       0       0       0
  5404 ;;      Totals:         0       0       0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    1
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_DS1307_shared_get
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _I2C_data_receive
  5417  0D1F                     _I2C_data_receive:	
  5418                           
  5419                           ;I2C.h: 224: RCEN = 1;
  5420                           
  5421                           ;incstack = 0
  5422                           ; Regs used in _I2C_data_receive: [wreg]
  5423  0D1F  0024               	movlb	4	; select bank4
  5424  0D20  1596               	bsf	22,3	;volatile
  5425  0D21                     l144:	
  5426                           ;I2C.h: 226: while(BF == 0 );
  5427                           
  5428  0D21  1C14               	btfss	20,0	;volatile
  5429  0D22  2D21               	goto	l144
  5430  0D23                     l147:	
  5431                           ;I2C.h: 227: while(SSP1IF==0);
  5432                           
  5433  0D23  0020               	movlb	0	; select bank0
  5434  0D24  1D91               	btfss	17,3	;volatile
  5435  0D25  2D23               	goto	l147
  5436                           
  5437                           ;I2C.h: 228: SSP1IF = 0;
  5438  0D26  1191               	bcf	17,3	;volatile
  5439                           
  5440                           ;I2C.h: 230: return SSPBUF;
  5441  0D27  0024               	movlb	4	; select bank4
  5442  0D28  0811               	movf	17,w	;volatile
  5443  0D29  0008               	return
  5444  0D2A                     __end_of_I2C_data_receive:	
  5445                           
  5446                           	psect	text35
  5447  0D00                     __ptext35:	
  5448 ;; *************** function _I2C_Stop *****************
  5449 ;; Defined at:
  5450 ;;		line 351 in file "I2C.h"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;		None
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		None
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5464 ;;      Params:         0       0       0       0
  5465 ;;      Locals:         0       0       0       0
  5466 ;;      Temps:          0       0       0       0
  5467 ;;      Totals:         0       0       0       0
  5468 ;;Total ram usage:        0 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    1
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_DS1307_shared_get
  5475 ;;		_DS1307_set_shared
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function _I2C_Stop
  5481  0D00                     _I2C_Stop:	
  5482                           
  5483                           ;I2C.h: 353: PEN = 1;
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _I2C_Stop: []
  5487  0D00  0024               	movlb	4	; select bank4
  5488  0D01  1516               	bsf	22,2	;volatile
  5489  0D02                     l176:	
  5490                           ;I2C.h: 354: while(PEN);
  5491                           
  5492  0D02  1916               	btfsc	22,2	;volatile
  5493  0D03  2D02               	goto	l176
  5494                           
  5495                           ;I2C.h: 356: SSP1IF = 0;
  5496  0D04  0020               	movlb	0	; select bank0
  5497  0D05  1191               	bcf	17,3	;volatile
  5498  0D06  0008               	return
  5499  0D07                     __end_of_I2C_Stop:	
  5500                           
  5501                           	psect	text36
  5502  0CF9                     __ptext36:	
  5503 ;; *************** function _I2C_Start *****************
  5504 ;; Defined at:
  5505 ;;		line 203 in file "I2C.h"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;		None
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;		None
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      void 
  5512 ;; Registers used:
  5513 ;;		None
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5519 ;;      Params:         0       0       0       0
  5520 ;;      Locals:         0       0       0       0
  5521 ;;      Temps:          0       0       0       0
  5522 ;;      Totals:         0       0       0       0
  5523 ;;Total ram usage:        0 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    1
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_DS1307_shared_get
  5530 ;;		_DS1307_set_shared
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           
  5535                           ;psect for function _I2C_Start
  5536  0CF9                     _I2C_Start:	
  5537                           
  5538                           ;I2C.h: 206: SEN = 1;
  5539                           
  5540                           ;incstack = 0
  5541                           ; Regs used in _I2C_Start: []
  5542  0CF9  0024               	movlb	4	; select bank4
  5543  0CFA  1416               	bsf	22,0	;volatile
  5544  0CFB                     l138:	
  5545                           ;I2C.h: 209: while ( SEN);
  5546                           
  5547  0CFB  1816               	btfsc	22,0	;volatile
  5548  0CFC  2CFB               	goto	l138
  5549                           
  5550                           ;I2C.h: 210: SSP1IF = 0;
  5551  0CFD  0020               	movlb	0	; select bank0
  5552  0CFE  1191               	bcf	17,3	;volatile
  5553  0CFF  0008               	return
  5554  0D00                     __end_of_I2C_Start:	
  5555                           
  5556                           	psect	text37
  5557  0D0F                     __ptext37:	
  5558 ;; *************** function _I2C_SendNACK *****************
  5559 ;; Defined at:
  5560 ;;		line 327 in file "I2C.h"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		None
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5574 ;;      Params:         0       0       0       0
  5575 ;;      Locals:         0       0       0       0
  5576 ;;      Temps:          0       0       0       0
  5577 ;;      Totals:         0       0       0       0
  5578 ;;Total ram usage:        0 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    1
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_DS1307_shared_get
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _I2C_SendNACK
  5590  0D0F                     _I2C_SendNACK:	
  5591                           
  5592                           ;I2C.h: 329: ACKDT = 1 ;
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _I2C_SendNACK: []
  5596  0D0F  0024               	movlb	4	; select bank4
  5597  0D10  1696               	bsf	22,5	;volatile
  5598                           
  5599                           ;I2C.h: 330: ACKEN = 1;
  5600  0D11  1616               	bsf	22,4	;volatile
  5601  0D12                     l170:	
  5602                           ;I2C.h: 331: while (ACKEN);
  5603                           
  5604  0D12  1A16               	btfsc	22,4	;volatile
  5605  0D13  2D12               	goto	l170
  5606                           
  5607                           ;I2C.h: 332: SSP1IF = 0;
  5608  0D14  0020               	movlb	0	; select bank0
  5609  0D15  1191               	bcf	17,3	;volatile
  5610  0D16  0008               	return
  5611  0D17                     __end_of_I2C_SendNACK:	
  5612                           
  5613                           	psect	text38
  5614  0D07                     __ptext38:	
  5615 ;; *************** function _I2C_SendACK *****************
  5616 ;; Defined at:
  5617 ;;		line 314 in file "I2C.h"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		None
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5631 ;;      Params:         0       0       0       0
  5632 ;;      Locals:         0       0       0       0
  5633 ;;      Temps:          0       0       0       0
  5634 ;;      Totals:         0       0       0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    1
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_DS1307_shared_get
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _I2C_SendACK
  5647  0D07                     _I2C_SendACK:	
  5648                           
  5649                           ;I2C.h: 321: ACKDT = 0 ;
  5650                           
  5651                           ;incstack = 0
  5652                           ; Regs used in _I2C_SendACK: []
  5653  0D07  0024               	movlb	4	; select bank4
  5654  0D08  1296               	bcf	22,5	;volatile
  5655                           
  5656                           ;I2C.h: 322: ACKEN = 1;
  5657  0D09  1616               	bsf	22,4	;volatile
  5658  0D0A                     l164:	
  5659                           ;I2C.h: 323: while (ACKEN);
  5660                           
  5661  0D0A  1A16               	btfsc	22,4	;volatile
  5662  0D0B  2D0A               	goto	l164
  5663                           
  5664                           ;I2C.h: 324: SSP1IF = 0;
  5665  0D0C  0020               	movlb	0	; select bank0
  5666  0D0D  1191               	bcf	17,3	;volatile
  5667  0D0E  0008               	return
  5668  0D0F                     __end_of_I2C_SendACK:	
  5669                           
  5670                           	psect	text39
  5671  0D4B                     __ptext39:	
  5672 ;; *************** function _DELAY100 *****************
  5673 ;; Defined at:
  5674 ;;		line 12 in file "TimeCounterF1840.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  milisecond      1    wreg     unsigned char 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  milisecond      1    4[COMMON] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5688 ;;      Params:         0       0       0       0
  5689 ;;      Locals:         1       0       0       0
  5690 ;;      Temps:          3       0       0       0
  5691 ;;      Totals:         4       0       0       0
  5692 ;;Total ram usage:        4 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_main
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           
  5703                           ;psect for function _DELAY100
  5704  0D4B                     _DELAY100:	
  5705                           
  5706                           ;incstack = 0
  5707                           ; Regs used in _DELAY100: [wreg+status,2+status,0]
  5708                           ;DELAY100@milisecond stored from wreg
  5709  0D4B  00F4               	movwf	DELAY100@milisecond
  5710  0D4C                     L8:	
  5711                           
  5712                           ;TimeCounterF1840.c: 14: for(; milisecond >0; milisecond --)
  5713  0D4C  0874               	movf	DELAY100@milisecond,w
  5714  0D4D  1903               	btfsc	3,2
  5715  0D4E  0008               	return
  5716                           
  5717                           ;TimeCounterF1840.c: 15: _delay((unsigned long)((100)*(16000000L/4000.0)));
  5718  0D4F  3003               	movlw	3
  5719  0D50  00F3               	movwf	??_DELAY100+2
  5720  0D51  3008               	movlw	8
  5721  0D52  00F2               	movwf	??_DELAY100+1
  5722  0D53  3078               	movlw	120
  5723  0D54  00F1               	movwf	??_DELAY100
  5724  0D55                     u4307:	
  5725  0D55  0BF1               	decfsz	??_DELAY100,f
  5726  0D56  2D55               	goto	u4307
  5727  0D57  0BF2               	decfsz	??_DELAY100+1,f
  5728  0D58  2D55               	goto	u4307
  5729  0D59  0BF3               	decfsz	??_DELAY100+2,f
  5730  0D5A  2D55               	goto	u4307
  5731  0D5B  3001               	movlw	1
  5732  0D5C  02F4               	subwf	DELAY100@milisecond,f
  5733  0D5D  2D4C               	goto	L8
  5734  0D5E                     __end_of_DELAY100:	
  5735                           
  5736                           	psect	text40
  5737  0D2A                     __ptext40:	
  5738 ;; *************** function _DELAY *****************
  5739 ;; Defined at:
  5740 ;;		line 5 in file "TimeCounterF1840.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  milisecond      1    wreg     unsigned char 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  milisecond      1    3[COMMON] unsigned char 
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5754 ;;      Params:         0       0       0       0
  5755 ;;      Locals:         1       0       0       0
  5756 ;;      Temps:          2       0       0       0
  5757 ;;      Totals:         3       0       0       0
  5758 ;;Total ram usage:        3 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function _DELAY
  5770  0D2A                     _DELAY:	
  5771                           
  5772                           ;incstack = 0
  5773                           ; Regs used in _DELAY: [wreg+status,2+status,0]
  5774                           ;DELAY@milisecond stored from wreg
  5775  0D2A  00F3               	movwf	DELAY@milisecond
  5776  0D2B                     L9:	
  5777                           
  5778                           ;TimeCounterF1840.c: 7: for(; milisecond >0; milisecond --)
  5779  0D2B  0873               	movf	DELAY@milisecond,w
  5780  0D2C  1903               	btfsc	3,2
  5781  0D2D  0008               	return
  5782                           
  5783                           ;TimeCounterF1840.c: 8: _delay((unsigned long)((1)*(16000000L/4000.0)));
  5784  0D2E  3006               	movlw	6
  5785  0D2F  00F2               	movwf	??_DELAY+1
  5786  0D30  3030               	movlw	48
  5787  0D31  00F1               	movwf	??_DELAY
  5788  0D32                     u4317:	
  5789  0D32  0BF1               	decfsz	??_DELAY,f
  5790  0D33  2D32               	goto	u4317
  5791  0D34  0BF2               	decfsz	??_DELAY+1,f
  5792  0D35  2D32               	goto	u4317
  5793  0D36  0000               	nop
  5794  0D37  3001               	movlw	1
  5795  0D38  02F3               	subwf	DELAY@milisecond,f
  5796  0D39  2D2B               	goto	L9
  5797  0D3A                     __end_of_DELAY:	
  5798                           
  5799                           	psect	intentry
  5800  0004                     __pintentry:	
  5801 ;; *************** function _FNC *****************
  5802 ;; Defined at:
  5803 ;;		line 17 in file "INTERRUPT.h"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		None
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5817 ;;      Params:         0       0       0       0
  5818 ;;      Locals:         0       0       0       0
  5819 ;;      Temps:          1       0       0       0
  5820 ;;      Totals:         1       0       0       0
  5821 ;;Total ram usage:        1 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; This function calls:
  5824 ;;		Nothing
  5825 ;; This function is called by:
  5826 ;;		Interrupt level 1
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830  0004                     _FNC:	
  5831                           
  5832                           ;incstack = 0
  5833                           ; Regs used in _FNC: []
  5834  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5835  0005  3180               	pagesel	$
  5836  0006  0020               	movlb	0	; select bank0
  5837  0007  087F               	movf	127,w
  5838  0008  00F0               	movwf	??_FNC
  5839                           
  5840                           ;INTERRUPT.h: 20: if(TMR1IF)
  5841  0009  1C11               	btfss	17,0	;volatile
  5842  000A  280D               	goto	i1l244
  5843                           
  5844                           ;INTERRUPT.h: 21: {
  5845                           ;INTERRUPT.h: 24: TMR1IF = 0;
  5846  000B  1011               	bcf	17,0	;volatile
  5847                           
  5848                           ;INTERRUPT.h: 25: }
  5849  000C  2810               	goto	i1l247
  5850  000D                     i1l244:	
  5851                           
  5852                           ;INTERRUPT.h: 26: else
  5853                           ;INTERRUPT.h: 27: if(IOCIF == 1)
  5854  000D  1C0B               	btfss	11,0	;volatile
  5855  000E  2810               	goto	i1l247
  5856                           
  5857                           ;INTERRUPT.h: 28: {
  5858                           ;INTERRUPT.h: 31: IOCIF = 0;
  5859  000F  100B               	bcf	11,0	;volatile
  5860  0010                     i1l247:	
  5861  0010  0870               	movf	??_FNC,w
  5862  0011  00FF               	movwf	127
  5863  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5864  0013  0009               	retfie
  5865  0014                     __end_of_FNC:	
  5866  007E                     btemp	set	126	;btemp
  5867  007E                     int$flags	set	126
  5868  007E                     wtemp	set	126
  5869  007E                     wtemp0	set	126
  5870  0080                     wtemp1	set	128
  5871  0082                     wtemp2	set	130
  5872  0084                     wtemp3	set	132
  5873  0086                     wtemp4	set	134
  5874  0088                     wtemp5	set	136
  5875  007F                     wtemp6	set	127
  5876  007E                     ttemp	set	126
  5877  007E                     ttemp0	set	126
  5878  0081                     ttemp1	set	129
  5879  0084                     ttemp2	set	132
  5880  0087                     ttemp3	set	135
  5881  007F                     ttemp4	set	127
  5882  007E                     ltemp	set	126
  5883  007E                     ltemp0	set	126
  5884  0082                     ltemp1	set	130
  5885  0086                     ltemp2	set	134
  5886  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         90
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     67      78
    BANK1            80      0      78
    BANK2            80      0      34

Pointer List with Targets:

    mktime@timeptr	PTR struct tm size(1) Largest target is 18
		 -> Time1End(BANK1[18]), Time1Start(BANK1[18]), 

    DS1307_shared_get@reg	PTR unsigned char  size(1) Largest target is 7
		 -> zaman(BANK1[7]), 

    SetDataCenterPin@p	PTR unsigned char  size(1) Largest target is 5
		 -> CENTER_DATA(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_DisplayDate
    _main->_DisplayTime
    _ymd_to_scalar->_isleap
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    ___lwdiv->___wmul
    _isleap->___lwmod
    ___lltoft->___ftpack
    ___lltoft->___lmul
    ___fttol->___lltoft
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftdiv->___lltoft
    _SetDataCenterPin->_LoadDataCenter
    _LoadDataCenter->_SetMainShiftPin
    _SetMainShiftPin->_LoadMainShift
    _DS1307_time->_DS1307_shared_get
    _DS1307_date->_DS1307_shared_get
    _DS1307_shared_get->___bmul

Critical Paths under _FNC in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getTimeDifference
    _getTimeDifference->___altoft
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lmul
    _months_to_days->___lwdiv
    ___lltoft->___lmul
    ___fttol->___ftdiv
    ___ftsub->___ftadd
    ___ftdiv->___lltoft
    ___altoft->_mktime
    _DisplayTime->_DisplayNumber
    _DisplayDate->_DisplayNumber
    _DisplayNumber->_LoadSevenSegment
    _LoadSevenSegment->_SetDataCenterPin
    _SetDataCenterPin->_LoadDataCenter
    _DS1307_time->_DS1307_shared_get
    _DS1307_date->_DS1307_shared_get

Critical Paths under _FNC in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _FNC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _FNC in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   25944
                                             66 BANK0      1     1      0
                              _DELAY
                           _DELAY100
                        _DS1307_date
                        _DS1307_time
                        _DisplayDate
                        _DisplayTime
                     _I2C_initialize
                  _getTimeDifference
 ---------------------------------------------------------------------------------
 (1) _getTimeDifference                                    5     5      0   16987
                                             61 BANK0      5     5      0
                           ___altoft
                            ___ftdiv
                            ___ftsub
                            ___fttol
                           ___lltoft
                             ___lmul
                             _mktime
 ---------------------------------------------------------------------------------
 (2) _mktime                                              15    11      4    4583
                                             38 BANK0     15    11      4
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (3) _ymd_to_scalar                                       16    10      6    3347
                                             22 BANK0     16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (4) _years_to_days                                       18    14      4    1455
                                              4 BANK0     18    14      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     786
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _months_to_days                                       2     0      2     753
                                              3 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     198
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     480
                                              7 COMMON     5     1      4
                                              0 BANK0      3     3      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _isleap                                               5     3      2     514
                                              7 COMMON     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     371
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2300
                                              9 COMMON     2     2      0
                                              4 BANK0      4     0      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             24 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3649
                                             10 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3423
                                              9 COMMON     3     3      0
                                              0 BANK0     10     4      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2618
                                              8 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2337
                                             53 BANK0      8     4      4
                           ___ftpack
                             _mktime (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2068
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_initialize                                       2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DisplayTime                                          2     2      0    3587
                                             11 COMMON     1     1      0
                                             20 BANK0      1     1      0
                      _DisplayNumber
 ---------------------------------------------------------------------------------
 (1) _DisplayDate                                          2     2      0    3587
                                             11 COMMON     1     1      0
                                             20 BANK0      1     1      0
                      _DisplayNumber
 ---------------------------------------------------------------------------------
 (2) _DisplayNumber                                        6     5      1    3457
                                             14 BANK0      6     5      1
                   _LoadSevenSegment
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LoadSevenSegment                                     5     4      1    2255
                                              9 BANK0      5     4      1
                   _SetDataCenterPin
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _SetDataCenterPin                                     7     6      1    1930
                                              2 BANK0      7     6      1
                     _LoadDataCenter
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     512
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) _LoadDataCenter                                       5     4      1     805
                                              8 COMMON     3     2      1
                                              0 BANK0      2     2      0
                    _SetMainShiftPin
 ---------------------------------------------------------------------------------
 (6) _SetMainShiftPin                                      4     3      1     548
                                              4 COMMON     4     3      1
                      _LoadMainShift
 ---------------------------------------------------------------------------------
 (7) _LoadMainShift                                        3     3      0     130
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DS1307_time                                          1     1      0     845
                                             10 COMMON     1     1      0
                  _DS1307_shared_get
 ---------------------------------------------------------------------------------
 (1) _DS1307_date                                          1     1      0     845
                                             10 COMMON     1     1      0
                  _DS1307_shared_get
 ---------------------------------------------------------------------------------
 (2) _DS1307_shared_get                                    8     7      1     845
                                              5 COMMON     5     4      1
                                              0 BANK0      3     3      0
                        _I2C_SendACK
                       _I2C_SendNACK
                          _I2C_Start
                           _I2C_Stop
                   _I2C_data_receive
                      _I2C_data_send
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     266
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _I2C_data_send                                        3     3      0      31
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _I2C_data_receive                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_SendNACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_SendACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DELAY100                                             4     4      0      45
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DELAY                                                3     3      0      45
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _FNC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY
   _DELAY100
   _DS1307_date
     _DS1307_shared_get
       _I2C_SendACK
       _I2C_SendNACK
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
       ___bmul
   _DS1307_time
     _DS1307_shared_get
       _I2C_SendACK
       _I2C_SendNACK
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
       ___bmul
   _DisplayDate
     _DisplayNumber
       _LoadSevenSegment
         _SetDataCenterPin
           _LoadDataCenter
             _SetMainShiftPin
               _LoadMainShift
           ___awdiv
         ___awmod (ARG)
       ___awdiv
       ___awmod
   _DisplayTime
     _DisplayNumber
       _LoadSevenSegment
         _SetDataCenterPin
           _LoadDataCenter
             _SetMainShiftPin
               _LoadMainShift
           ___awdiv
         ___awmod (ARG)
       ___awdiv
       ___awmod
   _I2C_initialize
   _getTimeDifference
     ___altoft
       ___ftpack
       _mktime (ARG)
         ___lmul
         _ymd_to_scalar
           _isleap
             ___lwmod
           _months_to_days
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _years_to_days
             ___lmul
             ___lwdiv
               ___wmul (ARG)
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
     ___ftsub
       ___ftadd
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___lmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
           ___lmul (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___lmul (ARG)
     ___lltoft
       ___ftpack
       ___lmul (ARG)
     ___lmul
     _mktime
       ___lmul
       _ymd_to_scalar
         _isleap
           ___lwmod
         _months_to_days
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _years_to_days
           ___lmul
           ___lwdiv
             ___wmul (ARG)

 _FNC (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      22      10       42.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      CB      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Oct 19 11:19:17 2019

              ___altoft@exp 005B               _years_to_days 0540               _LoadMainShift 0EC7  
            ___bmul@product 0073          __size_of_I2C_Start 0007               ___altoft@sign 005C  
                        _BF 10A0                          _RD 0CA8                          _WR 0CA9  
              ___awdiv@sign 0077         months_to_days@month 0023         ___wmul@multiplicand 0073  
              ___ftadd@exp1 007B                ___ftadd@exp2 007A                ___ftadd@sign 0079  
                       l144 0D21                         l170 0D12                         l138 0CFB  
                       l147 0D23                         l155 0D8D                         l164 0D0A  
                       l158 0D98                         l176 0D02                         l197 0EEC  
                       l554 05F5                         l386 0DC0                         l555 05FD  
                       l547 05E2                         l638 04B4                         l578 0347  
                       l754 064F                         _GIE 005F                         _FNC 0004  
                       _RA0 0060                         _RA4 0064                         _RA5 0065  
                       _PEN 10B2                         _SEN 10B0                 _unnecessary 006D  
                       _t_i 007C        __size_of_I2C_SendACK 0008                ___awmod@sign 0077  
                       wreg 0009                        ?_FNC 0070                ___ftdiv@cntr 0032  
              ___ftdiv@sign 0037                        l2410 0FB7                        l2146 0460  
                      l2404 0F94                        l2172 04AB                        l2164 0490  
                      l1710 0694                        l2502 0799                        l2174 04B7  
                      l2166 049E                        l2414 0F30                        l2512 0D3C  
                      l1720 06AF                        l2450 05C9                        l2530 02D0  
                      l2178 04C5                        l2418 0F3B                        l2602 0639  
                      l2516 0D42                        l1724 06B7                        l1716 06A6  
                      l1708 0688                        l2436 06EC                        l2508 07BE  
                      l1900 0711                        l2460 05EF                        l2452 05CE  
                      l2444 05B8                        l2540 02E6                        l1740 07DF  
                      l2374 0ECF                        l2438 06FB                        l2710 040C  
                      l2534 02D7                        l1830 0F1E                        l1750 07FA  
                      l2640 0532                        l2632 050B                        l2624 04EE  
                      l2376 0EDD                        l1912 071E                        l1904 0718  
                      l2448 05BF                        l2560 031D                        l2552 0300  
                      l1832 0F1F                        l2642 0535                        l2394 0E3D  
                      l1914 072A                        l1922 073F                        l2458 05E7  
                      l2570 0339                        l2562 0322                        l2730 0DF8  
                      l1762 0EA1                        l1746 07F1                        l1738 07D3  
                      l1658 0DBA                        l2396 0E4A                        l1692 0675  
                      l2580 036B                        l2572 0343                        l2564 0326  
                      l2740 0E86                        l1764 0EAD                        l1772 0EC2  
                      l2652 01B0                        l2646 053D                        l1926 0747  
                      l1918 0736                        l2718 0425                        l2590 0386  
                      l2558 0313                        l2654 01B9                        l2822 0184  
                      l2806 00BF                        l2680 0FE8                        l2576 0359  
                      l1768 0EB9                        l2816 0170                        l1698 0680  
                      l2690 03B5                        l2738 0E74                        l2678 0FD8  
                      l2696 03CB                        l2880 0F77                        _CFGS 0CAE  
                      _EEIF 0094                        u2005 0EA4                        u2025 0EB3  
                      u2035 0EBA                        u3230 0EDB                        u2415 0730  
                      u3224 0ED4                        u3304 0F99                        u3225 0ED3  
                      u3305 0F98                        u2425 0737                        u4105 0E7A  
                      u4035 03DD                        u4045 03ED                        u4205 011A  
                      u3415 05C4                        u4055 040D                        u3335 0F3C  
                      u4215 012E                        u4065 041C                        u3345 0F43  
               main@counter 0062                        u3274 0E35                        u4307 0D55  
                      u3275 0E34                        u2395 0721                        u3435 05DD  
                      u4075 0426                        u1755 0DC1                        u3284 0E42  
                      u3604 079E                        u4317 0D32                        u3285 0E41  
                      u3605 079D                        u1765 0DC6                        u3374 06E2  
                      u1855 068B                        u3375 06E1                        u3455 05EA  
                      u1935 07D6                        u4175 00C8                        u3384 06F1  
                      u3385 06F0                        u4185 00F4                        u1875 0695  
                      u4267 0D6C                        u1955 07E0                        u4195 0107  
                      _PEIE 005E                        u4277 0EE0                        u1885 069F  
                      u2925 0467                        u1965 07EA                        u4287 0EF0  
                      u1895 06A7                        u3495 0604                        u3735 0301  
                      u1975 07F2                        u4297 0D93                        u3825 033A  
                      u2955 0491                        _RCEN 10B3                        u3925 0505  
                      u3765 0314                        u3935 0515                        u2985 04AC  
                      _SCS0 04C8                        u3795 0327                        _SCS1 04C9  
                      u3965 019A                        u3975 01AE                        u3995 0FDD  
                      _TMR1 0016                        _WREN 0CAA                        _main 0F59  
              ___ftpack@arg 0071                        _saat 006B                ___ftpack@exp 0074  
                      fsr0h 0005                        fsr1h 0007                        fsr0l 0004  
                      indf0 0000                        indf1 0001                        fsr1l 0006  
                      btemp 007E            __end_of_DELAY100 0D5E            __end_of_I2C_Stop 0D07  
     __size_of_I2C_SendNACK 0008                        ltemp 007E                        start 0014  
                      ttemp 007E                        wtemp 007E            ??_I2C_initialize 0071  
           ?_LoadDataCenter 0078           ___bmul@multiplier 0074              ?_years_to_days 0024  
            ?_LoadMainShift 0070                       ??_FNC 0070                ___fttol@exp1 0045  
  __size_of_SetMainShiftPin 0022                ___fttol@lval 0041         __end_of_DisplayDate 0DF0  
__size_of_getTimeDifference 0151         __end_of_DisplayTime 0DB8                       ?_main 0070  
    __size_of_ymd_to_scalar 0057                       _ACKEN 10B4                       _ACKDT 10B5  
        LoadMainShift@index 0073             __end_of___awdiv 06BC             __end_of___ftadd 039E  
           __end_of___awmod 074C                       _DELAY 0D2A             __end_of___ftdiv 0447  
                     _EEPGD 0CAF             ___awdiv@divisor 0071             __end_of___ftsub 0E0E  
           __end_of___fttol 04CE                       _IOCAN 0392                       _IOCAP 0391  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE                       _IOCIE 005B                       _IOCIF 0058  
           __end_of___lwdiv 07FF                       i1l244 000D                       i1l247 0010  
           __end_of___lwmod 0EC7             ___awdiv@counter 0076                       _TMR1H 0017  
                     _TMR1L 0016                       _PORTA 000C                       _SSPM0 10A8  
                     _SSPM1 10A9                       _SSPM2 10AA                       _SSPM3 10AB  
                     _SSPEN 10AD   LoadDataCenter@center_data 0078         ___lmul@multiplicand 0075  
              ___lltoft@exp 007A                       _diffs 00B8                _I2C_SendNACK 0D0F  
             ___ftpack@sign 0075                       _zaman 00E2           __end_of_I2C_Start 0D00  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080            ymd_to_scalar@day 003A                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
           years_to_days@yr 0024             DELAY@milisecond 0073             __initialization 0016  
              __end_of_main 0F8B   __size_of_SetDataCenterPin 004B                      ??_main 007C  
             ___fttol@sign1 0040                      ?_DELAY 0070   __size_of_I2C_data_receive 000B  
          __end_of___altoft 1000                      _EEADRL 0191                      _EEDATL 0193  
                    _EECON2 0196            ___awdiv@dividend 0073                      _ANSELA 018C  
          __end_of___ftpack 0614                  _Time1Start 00D0                      _IOCAP3 1C8B  
          __end_of___lltoft 0E9B                      _TMR1IE 0488                      _TMR1IF 0088  
                    _TMR1ON 00C0               _ymd_to_scalar 0614                      _SSP1IF 008B  
                    _SPLLEN 04CF                      _SSPADD 0212                      _TRISA0 0460  
                    _TRISA1 0461                      _TRISA2 0462                      _TRISA3 0463  
                    _TRISA4 0464                      _TRISA5 0465                      _SSPBUF 0211  
           ??_years_to_days 0028             ??_LoadMainShift 0071      __size_of_I2C_data_send 0016  
               _DisplayDate 0DD3                 _DisplayTime 0D9D                      ___bmul 0D3A  
                    ___lmul 0F27                      ___wmul 0DB8                   ??___awdiv 0075  
                 ??___ftadd 0026                      _dakika 006A                   ??___awmod 0075  
                 ??___ftdiv 002E                   ??___ftsub 007C                   ??___fttol 003C  
                 ??___lwdiv 007B                   ??___lwmod 0075           _DS1307_shared_get 04CE  
        getTimeDifference@i 0061                      _isleap 0EF6            ___awdiv@quotient 0078  
                    _mktime 0187                      _saniye 006C             ___awmod@divisor 0071  
           ___awmod@counter 0076          ?_DS1307_shared_get 0075           ??_SetMainShiftPin 0075  
                 ?_DELAY100 0070                   ?_I2C_Stop 0070  LoadSevenSegment@segment_no 002C  
 __size_of_LoadSevenSegment 003E         ??_DS1307_shared_get 0076          DELAY100@milisecond 0074  
            ?_ymd_to_scalar 0036     __end_of__initialization 0032                  ___altoft@c 0055  
                ___ftadd@f1 0020                  ___ftadd@f2 0023               __end_of_DELAY 0D3A  
                ___ftdiv@f1 002B                  ___ftdiv@f2 0028                  ___ftdiv@f3 0033  
       ___bmul@multiplicand 0071                  ___ftsub@f1 002D                  ___ftsub@f2 002A  
                ___fttol@f1 0038              __pcstackCOMMON 0070   __end_of_DS1307_shared_get 0540  
              __pidataBANK2 0E4E                  ___lltoft@c 0024                     ??_DELAY 0071  
                ??_DELAY100 0071               _I2C_data_send 0D87                  ??_I2C_Stop 0071  
   __size_of_months_to_days 001E                  __pbssBANK0 0063                  __pbssBANK1 00A0  
             ??_DS1307_date 007A               ??_DS1307_time 007A            ??_LoadDataCenter 0079  
                _difference 00A0                  __pmaintext 0F59                     ?___bmul 0071  
                   ?___lmul 0071       __end_of_DisplayNumber 078C                     ?___wmul 0071  
                __pintentry 0004            _SetDataCenterPin 06BC                   ?___altoft 0055  
                   ?_isleap 0077              ___lmul@product 0020                     ?_mktime 0046  
                 ?___ftpack 0071               ??_I2C_SendACK 0071                   ?___lltoft 0024  
                   _T1CKPS0 00C4                     _T1CKPS1 00C5              ?_I2C_data_send 0070  
          _I2C_data_receive 0D1F                     _TMR1CS0 00C6                     _TMR1CS1 00C7  
           ??_ymd_to_scalar 003C                   _I2C_Start 0CF9         __end_of_DS1307_date 0D87  
       __end_of_DS1307_time 0D1F          DisplayNumber@value 002E  __size_of_DS1307_shared_get 0072  
           __size_of___bmul 0011                     ___awdiv 066B             __size_of___lmul 0032  
                   ___ftadd 02A8                     ___awmod 0707                     ___ftdiv 039E  
           __size_of___wmul 001B                     ___ftsub 0DF0                     ___fttol 0447  
                   ___lwdiv 07CA                     ___lwmod 0E9B                  _isleap$458 007B  
                ??___altoft 0059                  ??___ftpack 0076         LoadDataCenter@index 0021  
           __size_of_isleap 0031             __size_of_mktime 0121                  ??___lltoft 0079  
                   __ptext1 0036                     __ptext2 0187                     __ptext3 0614  
                   __ptext4 0540                     __ptext5 0F27                     __ptext6 0E0E  
                   __ptext7 0DB8                     __ptext8 07CA                     __ptext9 0EF6  
              __size_of_FNC 0010            ___awmod@dividend 0073               mktime@timeptr 0054  
                   _seconds 0063            _LoadSevenSegment 078C         __end_of_I2C_SendACK 0D0F  
                   clrloop0 0CF4        end_of_initialization 0032                     init_ram 0CED  
                   initloop 0CEE                  ?_I2C_Start 0070                ?_DisplayDate 0070  
              ?_DisplayTime 0070             _SetMainShiftPin 0E2C                  _time_array 0066  
           ??_I2C_data_send 0071          DS1307_shared_get@k 0021     __size_of_I2C_initialize 0014  
            _months_to_days 0E0E    SetMainShiftPin@pin_value 0074           __size_of_DELAY100 0013  
         __size_of_I2C_Stop 0007                 _DS1307_date 0D72                 _DS1307_time 0D17  
               ___ftdiv@exp 0036       __end_of_years_to_days 05B0       __end_of_LoadMainShift 0EF6  
         LoadMainShift@data 0072              __end_of___bmul 0D4B              __end_of___lmul 0F59  
            __end_of___wmul 0DD3                 _I2C_SendACK 0D07              __end_of_isleap 0F27  
    __end_of_months_to_days 0E2C              __end_of_mktime 02A8             ymd_to_scalar@mo 0038  
           ymd_to_scalar@yr 0036         start_initialization 0016                 __end_of_FNC 0014  
  __end_of_SetDataCenterPin 0707     __end_of_SetMainShiftPin 0E4E                 ??_I2C_Start 0071  
  __end_of_I2C_data_receive 0D2A   SetMainShiftPin@pin_number 0077                 _CENTER_DATA 00E9  
                  ??___bmul 0072                    ??___lmul 0079                    ??___wmul 0075  
               __pdataBANK2 0120                    ??_isleap 0079                    ??_mktime 004A  
           ?_months_to_days 0023           __size_of___altoft 003D           __size_of___ftpack 0064  
   LoadDataCenter@center_no 0020           __size_of___lltoft 002B                 __pbssCOMMON 007C  
                 ___latbits 0001               __pcstackBANK0 0020             _MAIN_SHIFT_DATA 0069  
             ?_I2C_SendNACK 0070  SetDataCenterPin@pin_number 0027            ___lwdiv@dividend 0079  
  __end_of_LoadSevenSegment 07CA                    ?___awdiv 0071                    ?___ftadd 0020  
                  ?___awmod 0071                    ?___ftdiv 0028        __size_of_DisplayDate 001D  
                  ?___ftsub 002A                    ?___fttol 0038                    ?___lwdiv 0077  
                  ?___lwmod 0071        __size_of_DisplayTime 001B              _I2C_initialize 0D5E  
                 _divisions 0120              __size_of_DELAY 0010                    _DELAY100 0D4B  
                  _I2C_Stop 0D00           SetDataCenterPin@p 0028              ??_I2C_SendNACK 0071  
          ___lwdiv@quotient 0020      __size_of_DisplayNumber 0040       __end_of_ymd_to_scalar 066B  
            ___wmul@product 0075            ?_SetMainShiftPin 0074                   clear_ram0 0CF3  
   __size_of_LoadDataCenter 0038      __end_of_I2C_initialize 0D72           ___wmul@multiplier 0071  
         I2C_data_send@data 0073   SetDataCenterPin@center_no 0026           ___lmul@multiplier 0071  
            DisplayNumber@s 0033                ?_DS1307_date 0070                ?_DS1307_time 0070  
                  _Time1End 00BE               _DisplayNumber 074C            __size_of___awdiv 0051  
          __size_of___ftadd 00F6            __size_of___awmod 0045             ?_I2C_initialize 0070  
          __size_of___ftdiv 00A9                    ___altoft 0FC3            __size_of___ftsub 001E  
          __size_of___fttol 0087            __size_of___lwdiv 0035            __size_of___lwmod 002C  
                  ___ftpack 05B0                ?_I2C_SendACK 0070                    ___lltoft 0E70  
 SetDataCenterPin@pin_value 0022       __end_of_I2C_data_send 0D9D             ___lwdiv@divisor 0077  
           ___lwdiv@counter 0022                    __ptext10 0E9B                    __ptext11 0E70  
                  __ptext20 0DD3                    __ptext12 0447                    __ptext21 074C  
                  __ptext13 0DF0                    __ptext30 0D72                    __ptext22 0707  
                  __ptext14 02A8                    __ptext31 04CE                    __ptext23 078C  
                  __ptext15 039E                    __ptext40 0D2A                    __ptext32 0D3A  
                  __ptext24 06BC                    __ptext16 0FC3                    __ptext33 0D87  
                  __ptext25 066B                    __ptext17 05B0                    __ptext34 0D1F  
                  __ptext26 0F8B                    __ptext18 0D5E                    __ptext35 0D00  
                  __ptext27 0E2C                    __ptext19 0D9D                    __ptext36 0CF9  
                  __ptext28 0EC7                    __ptext37 0D0F                    __ptext29 0D17  
                  __ptext38 0D07                    __ptext39 0D4B       LoadSevenSegment@index 002D  
     LoadSevenSegment@value 0029           ?_SetDataCenterPin 0022               __size_of_main 0032  
                  _rakamlar 0138          ??_SetDataCenterPin 0023           ?_I2C_data_receive 0070  
        ??_I2C_data_receive 0071        __end_of_I2C_SendNACK 0D17              ?_DisplayNumber 002E  
                  int$flags 007E            ??_months_to_days 007C       DS1307_shared_get@addr 0020  
         _getTimeDifference 0036          ?_getTimeDifference 0070      __size_of_years_to_days 0070  
                  isleap@yr 0077      __size_of_LoadMainShift 002F                    intlevel1 0000  
       ??_getTimeDifference 005D            ___lwmod@dividend 0073                    mktime@tt 0050  
       ymd_to_scalar@scalar 0042           _DisplayNumber$700 0032                DisplayDate@k 0034  
         ?_LoadSevenSegment 0029              _LoadDataCenter 0F8B                DisplayTime@k 0034  
        ??_LoadSevenSegment 002A           _ymd_to_scalar$470 0040        DS1307_shared_get@den 0022  
      DS1307_shared_get@reg 0075   __end_of_getTimeDifference 0187             ___lwmod@divisor 0071  
           ___lwmod@counter 0076        __size_of_DS1307_date 0015        __size_of_DS1307_time 0008  
             ??_DisplayDate 007B             ??_DisplayNumber 002F      __end_of_LoadDataCenter 0FC3  
             ??_DisplayTime 007B  
