     1: #define TRUE 1
     2: #define FALSE 0
     3: 
     4: typedef unsigned char byte;
     5: #include <htc.h>
     6: #include <string.h>
     7: #include <stdlib.h>
     8: #include "MainRegister.h"
     9: #include "CenterRegister.h"
    10: #include "SicaklikSegment.h"
    11: #include "GUN.h"
    12: #include "TARIH.h"
    13: #include "HAVADURUMU.h"
    14: #include "LCD.h"
    15: #include "INTERRUPT.h"
    16: #include "UART.h"
    17: #include "IOPINSELECT.h"
    18: #include "EEPROM.h"
    19: #include "HAVASTRUCTURE.h"
    20: #include "Requests.h"
    21: #include "DHT11.h"
    22: 
    23: 
    24: //Weather status will be stored in EEPROM and will be read from there...
    25: 
    26: 
    27: void main()
    28: {
    29:  //Internal oscillator will be used...
    30:         SCS1 = 1 ;
    31:         SCS0 = 0 ; 
    32:         
    33:         //4 MHZ...
    34:         IRCF3 = 1 ;
    35:         IRCF2 = 1 ;
    36:         
    37:         IRCF1 = 0;
    38:         IRCF0 = 1 ;
    39:         ANSELA  = 0 ;
    40: 
    41:         //WPUA = 1 <<3;
    42:         //nWPUEN = 1;
    43: 
    44:         TRISA3 = 1;
    45: 
    46: 
    47:         TRISA0 = 0;
    48:         TRISA5 = 0; //Main register...
    49: 
    50:         TRISA2 = 0;
    51:         TRISA4 = 0;
    52:         //choose_input_pin(0);
    53:         //DHT11_get_data();
    54: 
    55:         __delay_ms(20);
    56:         LCD_init();
    57:         UART_init();
    58:         __delay_ms(200);
    59:         //PEIE = 1;
    60:         //GIE = 1;
    61:         retrive_weather_situations();
    62:         __delay_ms(100);
    63: 
    64:         ask_5_day_weather();
    65:         
    66:         if(time_exceed == FALSE)
    67: {
    68:         if (compareData(0, current_buffer, 40) == FALSE)
    69:                 saveToEEPROM(0, current_buffer, 40);
    70:         
    71:         resetBuffer();
    72: }
    73:         __delay_ms(100);
    74: 
    75: 
    76: 
    77:         ask_currency();
    78: 
    79: if(time_exceed == FALSE)
    80: {       
    81:         if (compareData(51, current_buffer, 6) == FALSE)
    82:                 saveToEEPROM(51, current_buffer, 6);
    83:                 resetBuffer();
    84: }
    85:         __delay_ms(100);
    86:         ask_current_situation();
    87:         
    88: if(time_exceed == FALSE)
    89: {
    90:         if (compareData(40, current_buffer, 11) == FALSE)
    91:                 saveToEEPROM(40, current_buffer, 11);
    92:                 resetBuffer();
    93: }
    94:         __delay_ms(100);
    95:         
    96:         byte prev_phrase = 0;
    97:         signed char * temporary;
    98:         while(1)
    99:         {
   100:                 show_currency_information();
   101: 
   102:                 for(byte k = 0; k < 5 ; k++)
   103:                 {       
   104:                         temporary = (signed char*)&gunler[k];
   105:                         SetHavaDurumuPin(prev_phrase, 0);
   106:                         show_date_info(temporary);
   107:                         DisplayGun(temporary[1]);//gunler[k].day);
   108:                         DisplayAy(temporary[2]);//gunler[k].month);
   109:                         DisplayYil(temporary[3]);//gunler[k].year);
   110:                         EnYuksekDisplay(temporary[5]);//gunler[k].max_temp);
   111:                         EnDusukDisplay(temporary[4]);//gunler[k].min_temp);
   112:                         LoadGunInfo(temporary[0]);//gunler[k].week_day);
   113:                         LoadGosterilenGunInfo(temporary[7]);//gunler[k].relative_index);
   114:                         SetHavaDurumuPin(temporary[6], 1);//gunler[k].weather_phrase, 1);
   115:                         prev_phrase = temporary[6];//gunler[k].weather_phrase;
   116:                         __delay_ms(3000);
   117: }
   118:                         }
   119: 
   120: 
   121: }
