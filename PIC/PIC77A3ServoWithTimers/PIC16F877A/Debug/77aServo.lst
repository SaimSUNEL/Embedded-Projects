     1: /* Main.c file generated by New Project wizard
     2:  *
     3:  * Created:   Cum Oca 15 2016
     4:  * Processor: PIC18F4520
     5:  * Compiler:  HI-TECH C for PIC18
     6:  */
     7: 
     8: /*
     9: Projede iki dc motor kullanýlýrsa TMR1 ile compare match modulünü kullanmadan TMR1 overflow interruptýný kullanarak yazacaðýz
    10: 
    11: Eðer sadece bir tane dc varsa bu program iþ görür...
    12: CCP1 compare match modulü olarak servolar için ayrýldý...
    13: CCP2 DC motoru sürmek için
    14: Timer1 Servolar için...
    15: 
    16: Usart baud rate BRGH = 0 SSPBRG = 25 ( 9600 16 MHZ için... )
    17: ( Bunu RF modulüne göre deðiþtirebiliriz... )
    18: 
    19: 
    20: 
    21: 
    22: 
    23: 
    24: */
    25: 
    26: 
    27: 
    28: #include <htc.h>
    29: 
    30: 
    31: #define false 0
    32: #define true 1
    33: 
    34: 
    35: 
    36: char servo_number=0;
    37: char dogru = false;
    38: 
    39: 
    40: 
    41: unsigned char seri_porttan_veri_al()
    42: {
    43: while( !RCIF );
    44: return RCREG;
    45: }
    46: void seri_porta_veri_gonder(unsigned char jk)
    47:  { while( !TXIF );
    48:          TXREG=jk;
    49: 
    50:         
    51:          }
    52: void seri_portu_ayarla()
    53: {SPBRG=25;
    54:         BRGH=0;
    55:         
    56:         SPEN=1;
    57:         
    58:         SYNC=0;
    59:         
    60:         TX9=0;
    61:         
    62:         TXEN=1;
    63:         
    64:         RX9=0;
    65:         
    66:         CREN=1;
    67:         
    68:         
    69:         /*
    70:         RC6=1;
    71:         
    72:         RC7=1;
    73: */
    74:         }
    75: 
    76:  volatile int temp;
    77: volatile int temp2 = 0;
    78: 
    79: 
    80: struct _servo 
    81: {
    82:         
    83:         
    84: unsigned int angle ;
    85:         
    86: }
    87: bir , iki , uc;
    88: 
    89: 
    90: 
    91: void interrupt FNC( )
    92: {
    93:         GIE = 0;
    94:         
    95: CCP1IF = 0;     
    96: TMR1 = 0 ;
    97:         //Interruptlarý kapat   
    98:         if( servo_number == 0 )
    99:         {
   100:                 
   101:         if( dogru ) 
   102:         {
   103:                 dogru = false;
   104:         
   105:                 RB4 = 0;
   106:                 
   107: 
   108:                 CCPR1 = 20000;
   109:                 
   110:                 servo_number = 1;
   111:                 
   112:                 
   113:                 }
   114:         else
   115:         {
   116:                 RB4 = 1;
   117:         
   118:                 
   119:                 CCPR1 = 540 + 9 * bir.angle;
   120:         
   121:                 dogru = true;
   122:                         }
   123:                 
   124:                 
   125:         
   126:         }       
   127:         else if ( servo_number == 1 )
   128:         {
   129:         if( dogru ) 
   130:         {
   131:         dogru = false;
   132:         RB1 = 0;
   133:         
   134:         
   135:                 CCPR1 = 20000;
   136:         
   137:                 servo_number = 0;
   138:                 }
   139:         else
   140:         {
   141:                 dogru = true;
   142:         RB1 = 1;
   143:                 
   144:                 CCPR1 = 540 + 9 * iki.angle ;
   145:                 
   146:                 }
   147:                 
   148:                 
   149:                 
   150:                 
   151:                         
   152: 
   153:         
   154:                 
   155:                 
   156:                         
   157:         //Interruptlarý aç...
   158: 
   159: 
   160: }
   161:         
   162:         
   163: 
   164: CCP1IF = 0;
   165: 
   166: }
   167: 
   168: int sol= 0 , sag = 0 ;
   169: void main(void)
   170:  {
   171:    // Write your code here
   172: 
   173:         TRISB = 0;
   174: 
   175:          PORTB = 0;
   176:          //RB0 1.servo
   177:          //RB1 2.servo
   178:          //RB2 3.Servo...
   179:  
   180:          __delay_ms( 5000 );
   181:          seri_portu_ayarla();
   182:         
   183:          __delay_ms( 9000 );
   184:           __delay_ms( 9000 );
   185:  GIE = 1;
   186:  PEIE = 1;
   187: //Compare mode no change on CCP1 pin ...
   188:          CCP1M3 = 1;
   189:          CCP1M2 = 0;
   190:          CCP1M1 = 1;
   191:          CCP1M0 = 1;     
   192:         
   193:         CCP1IF = 0;     
   194:         CCP1IE = 1; //Interrupt enabled...
   195:          
   196:         //CCPR1 our register....
   197:         // 10  1 /4 presc... 16 /4/4 her bir artýþ 1 us
   198:         T1CKPS1 = 1 ;
   199:         T1CKPS0 = 0 ; 
   200:         CCPR1 = 20000 ;
   201:         T1OSCEN = 0 ; //Oscillator not enabled...
   202:         TMR1CS  = 0 ; //Internal clock FOSC/4
   203:         
   204:         TMR1 = 0 ;
   205:         TMR1ON = 1 ;
   206:         
   207:         
   208:         //CCP2 PWM ,çin...
   209:         CCP2M3 = 1 ;
   210:         CCP2M2 = 1 ;
   211:         CCP2M1 =  0;
   212:         CCP2M0 = 0 ;
   213:         
   214:         
   215:         PR2 = 0b11111001 ; //1KHZ
   216: T2CON = 0b00000111 ; //Presc 1/16
   217: CCPR2L = 0b01111100 ;
   218: CCP2CON = 0b00111100 ; //PWM modu
   219: 
   220: //10 bit resolution biz usarttan gelen bilgiyi 4 ile çarpacaðýz...
   221:         
   222:         TMR2ON = 0;
   223:         
   224:         
   225:         
   226:         
   227:         
   228:          
   229: #define false 0
   230: #define true 1
   231:          
   232: unsigned int angle  = 3;
   233: char open = false;
   234: bir.angle = 3;
   235: iki.angle = 3;
   236: int l ;
   237: uc.angle = 3;
   238: int temp;
   239: unsigned char speed ;
   240: unsigned char data ;
   241:          while (1)
   242:          {
   243:         
   244:         data =seri_porttan_veri_al () ;
   245:                 speed = seri_porttan_veri_al () ;
   246:                 if ( data == 10 ) 
   247:                  bir.angle = speed ;
   248:                 else if ( data == 11 )
   249:                 iki.angle = speed ;
   250:                 else if ( data == 12 )
   251:                 {
   252:                 temp = speed * 4 ;
   253:                         CCP2X = temp >> 1 ;
   254:                         CCP2Y = temp ;
   255:                         CCPR2L = temp >> 2 ;
   256:                 }       
   257: }
   258:          
   259:     
   260:  }
   261:  
   262:  
   263:  
   264:  
   265:  
   266:         /*for( angle = 0 ; angle < 180 ; angle += 10 )
   267:         {
   268:                 
   269:                 bir.angle  = angle ;
   270:                 iki.angle = angle ;
   271:         __delay_ms( 16000 );
   272:                 
   273:                 
   274:         }
   275:         
   276:         for( angle = 180 ; angle > 0 ; angle -=10 )
   277:         {
   278:                 
   279:                 bir.angle  = angle ;
   280:         iki.angle = angle;
   281:                 __delay_ms( 16000 );
   282:                 
   283:                 
   284:         }
   285:         
   286:         
   287:         
   288:         */