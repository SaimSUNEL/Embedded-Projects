

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Apr 03 17:15:32 2020

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001E                     	;# 
    65  001F                     	;# 
    66  008C                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  010C                     	;# 
    81  0111                     	;# 
    82  0112                     	;# 
    83  0115                     	;# 
    84  0116                     	;# 
    85  0117                     	;# 
    86  0118                     	;# 
    87  0119                     	;# 
    88  011A                     	;# 
    89  011B                     	;# 
    90  011D                     	;# 
    91  011D                     	;# 
    92  018C                     	;# 
    93  0191                     	;# 
    94  0191                     	;# 
    95  0192                     	;# 
    96  0193                     	;# 
    97  0193                     	;# 
    98  0193                     	;# 
    99  0194                     	;# 
   100  0195                     	;# 
   101  0196                     	;# 
   102  0197                     	;# 
   103  0199                     	;# 
   104  019A                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019F                     	;# 
   114  020C                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0391                     	;# 
   139  0392                     	;# 
   140  0393                     	;# 
   141  039A                     	;# 
   142  039C                     	;# 
   143  039D                     	;# 
   144  039E                     	;# 
   145  039F                     	;# 
   146  0FE4                     	;# 
   147  0FE5                     	;# 
   148  0FE6                     	;# 
   149  0FE7                     	;# 
   150  0FE8                     	;# 
   151  0FE9                     	;# 
   152  0FEA                     	;# 
   153  0FEB                     	;# 
   154  0FED                     	;# 
   155  0FEE                     	;# 
   156  0FEF                     	;# 
   157                           
   158                           	psect	idataCOMMON
   159  0653                     __pidataCOMMON:	
   160                           
   161                           ;initializer for __x
   162  0653  3401               	retlw	1
   163                           
   164                           ;initializer for __y
   165  0654  3401               	retlw	1
   166  008E                     _ADIF	set	142
   167  0094                     _EEIF	set	148
   168  005F                     _GIE	set	95
   169  005B                     _IOCIE	set	91
   170  0058                     _IOCIF	set	88
   171  005E                     _PEIE	set	94
   172  0064                     _RA4	set	100
   173  008D                     _RCIF	set	141
   174  008B                     _SSP1IF	set	139
   175  008C                     _TXIF	set	140
   176  009C                     _ADRESH	set	156
   177  009B                     _ADRESL	set	155
   178  04F4                     _ADCS0	set	1268
   179  04F5                     _ADCS1	set	1269
   180  04F6                     _ADCS2	set	1270
   181  04F7                     _ADFM	set	1271
   182  04E9                     _ADGO	set	1257
   183  04E8                     _ADON	set	1256
   184  04EA                     _CHS0	set	1258
   185  04EB                     _CHS1	set	1259
   186  04EC                     _CHS2	set	1260
   187  04ED                     _CHS3	set	1261
   188  04CB                     _IRCF0	set	1227
   189  04CC                     _IRCF1	set	1228
   190  04CD                     _IRCF2	set	1229
   191  04CE                     _IRCF3	set	1230
   192  048D                     _RCIE	set	1165
   193  04C8                     _SCS0	set	1224
   194  04C9                     _SCS1	set	1225
   195  04CF                     _SPLLEN	set	1231
   196  0460                     _TRISA0	set	1120
   197  0461                     _TRISA1	set	1121
   198  0462                     _TRISA2	set	1122
   199  0464                     _TRISA4	set	1124
   200  0465                     _TRISA5	set	1125
   201  08EF                     _RXDTSEL	set	2287
   202  018C                     _ANSELA	set	396
   203  0191                     _EEADRL	set	401
   204  0196                     _EECON2	set	406
   205  0193                     _EEDATL	set	403
   206  0199                     _RCREG	set	409
   207  019B                     _SPBRG	set	411
   208  019A                     _TXREG	set	410
   209  0C61                     _ANSA1	set	3169
   210  0C62                     _ANSA2	set	3170
   211  0C64                     _ANSA4	set	3172
   212  0CFB                     _BRG16	set	3323
   213  0CF2                     _BRGH	set	3314
   214  0CAE                     _CFGS	set	3246
   215  0CEC                     _CREN	set	3308
   216  0CAF                     _EEPGD	set	3247
   217  0CA8                     _RD	set	3240
   218  0CEF                     _SPEN	set	3311
   219  0CF4                     _SYNC	set	3316
   220  0CF5                     _TXEN	set	3317
   221  0CA9                     _WR	set	3241
   222  0CAA                     _WREN	set	3242
   223  0212                     _SSPADD	set	530
   224  0211                     _SSPBUF	set	529
   225  10B5                     _ACKDT	set	4277
   226  10B4                     _ACKEN	set	4276
   227  10A0                     _BF	set	4256
   228  10B2                     _PEN	set	4274
   229  10B3                     _RCEN	set	4275
   230  10B0                     _SEN	set	4272
   231  10AD                     _SSPEN	set	4269
   232  10A8                     _SSPM0	set	4264
   233  10A9                     _SSPM1	set	4265
   234  10AA                     _SSPM2	set	4266
   235  10AB                     _SSPM3	set	4267
   236  1C8B                     _IOCAP3	set	7307
   237                           
   238                           	psect	cinit
   239  017C                     start_initialization:	
   240                           ; #config settings
   241                           
   242  017C                     __initialization:	
   243                           
   244                           ; Clear objects allocated to COMMON
   245  017C  01FD               	clrf	__pbssCOMMON& (0+127)
   246                           
   247                           ; Clear objects allocated to BANK0
   248  017D  303C               	movlw	low __pbssBANK0
   249  017E  0084               	movwf	4
   250  017F  3000               	movlw	high __pbssBANK0
   251  0180  0085               	movwf	5
   252  0181  3018               	movlw	24
   253  0182  3186  2641  3181   	fcall	clear_ram0
   254                           
   255                           ; Initialize objects allocated to COMMON
   256  0185  3186  2653  3181   	fcall	__pidataCOMMON	;fetch initializer
   257  0188  00FB               	movwf	__pdataCOMMON& (0+127)
   258  0189  3186  2654         	fcall	__pidataCOMMON+1	;fetch initializer
   259  018B  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   260  018C                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  018C                     __end_of__initialization:	
   264  018C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   265  018D  0020               	movlb	0
   266  018E  3185  2D1B         	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMMON
   269  007D                     __pbssCOMMON:	
   270  007D                     _LCDData:	
   271  007D                     	ds	1
   272                           
   273                           	psect	dataCOMMON
   274  007B                     __pdataCOMMON:	
   275  007B                     __x:	
   276  007B                     	ds	1
   277  007C                     __y:	
   278  007C                     	ds	1
   279                           
   280                           	psect	bssBANK0
   281  003C                     __pbssBANK0:	
   282  003C                     _EEPROM_memory_address:	
   283  003C                     	ds	4
   284  0040                     _PCF8574_value:	
   285  0040                     	ds	4
   286  0044                     _EEPROM24C64_memory_address:	
   287  0044                     	ds	2
   288  0046                     _configuration_count:	
   289  0046                     	ds	2
   290  0048                     _fail_count:	
   291  0048                     	ds	2
   292  004A                     _pass_count:	
   293  004A                     	ds	2
   294  004C                     __temp_:	
   295  004C                     	ds	1
   296  004D                     _input_count:	
   297  004D                     	ds	1
   298  004E                     _output_count:	
   299  004E                     	ds	1
   300  004F                     _received_data:	
   301  004F                     	ds	1
   302  0050                     _saim:	
   303  0050                     	ds	1
   304  0051                     _unnecessary:	
   305  0051                     	ds	1
   306  0052                     _measured_adc_value:	
   307  0052                     	ds	2
   308                           
   309                           	psect	clrtext
   310  0641                     clear_ram0:	
   311                           ;	Called with FSR0 containing the base address, and
   312                           ;	WREG with the size to clear
   313                           
   314  0641  0064               	clrwdt	;clear the watchdog before getting into this loop
   315  0642                     clrloop0:	
   316  0642  0180               	clrf	0	;clear RAM location pointed to by FSR
   317  0643  3101               	addfsr 0,1
   318  0644  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   319  0645  2E42               	goto	clrloop0	;have we reached the end yet?
   320  0646  3400               	retlw	0	;all done for this memory range, return
   321                           
   322                           	psect	cstackBANK1
   323  00A0                     __pcstackBANK1:	
   324  00A0                     ??_DELAY:	
   325  00A0                     ??_DELAY100:	
   326                           ; 1 bytes @ 0x0
   327                           
   328                           
   329                           ; 1 bytes @ 0x0
   330  00A0                     	ds	1
   331  00A1                     DELAY@number:	
   332                           
   333                           ; 1 bytes @ 0x1
   334  00A1                     	ds	1
   335  00A2                     DELAY@k:	
   336  00A2                     DELAY100@number:	
   337                           ; 1 bytes @ 0x2
   338                           
   339                           
   340                           ; 1 bytes @ 0x2
   341  00A2                     	ds	1
   342  00A3                     DELAY100@k:	
   343                           
   344                           ; 1 bytes @ 0x3
   345  00A3                     	ds	1
   346  00A4                     main@l:	
   347                           
   348                           ; 1 bytes @ 0x4
   349  00A4                     	ds	1
   350                           
   351                           	psect	cstackCOMMON
   352  0070                     __pcstackCOMMON:	
   353  0070                     ?_DELAY:	
   354  0070                     ?_DELAY100:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_UART_byte_send:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ??_UART_byte_send:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_UART_byte_receive:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ??_UART_byte_receive:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_UART_init:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_I2C_initialize:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_I2C_Start:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_I2C_Start:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_I2C_data_receive:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ??_I2C_data_receive:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_I2C_data_send:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ??_I2C_data_send:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_I2C_SendNACK:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ??_I2C_SendNACK:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_I2C_Stop:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ??_I2C_Stop:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_EEPROMAT24C1024B_write_page:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_EEPROMAT24C1024B_stop_write_page:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_EEPROMAT24C1024B_stop_write_page:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_EEPROM_WriteByte:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_EEPROM_ReadByte:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ??_EEPROM_ReadByte:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_PCF8574_read:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_EEPROM24C64_write_page:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_EEPROM24C64_stop_write_page:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_EEPROM24C64_stop_write_page:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_check_circuit:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_FNC:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_main:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?i1_DELAY100:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??i1_DELAY100:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     UART_byte_send@data:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     EEPROM_WriteByte@value:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     EEPROM_ReadByte@address:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           ; 1 bytes @ 0x0
   461  0070                     	ds	1
   462  0071                     ??_EEPROM_WriteByte:	
   463  0071                     I2C_data_send@data:	
   464                           ; 1 bytes @ 0x1
   465                           
   466  0071                     EEPROM_WriteByte@address:	
   467                           ; 1 bytes @ 0x1
   468                           
   469                           
   470                           ; 1 bytes @ 0x1
   471  0071                     	ds	1
   472  0072                     ?_EEPROMAT24C1024B_start_write_page:	
   473  0072                     ??_EEPROMAT24C1024B_write_page:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0072                     ?_EEPROMAT24C1024B_read_byte:	
   477                           ; 1 bytes @ 0x2
   478                           
   479  0072                     ?_PCF8574_load_data:	
   480                           ; 1 bytes @ 0x2
   481                           
   482  0072                     ??_PCF8574_read:	
   483                           ; 1 bytes @ 0x2
   484                           
   485  0072                     ?_EEPROM24C64_start_write_page:	
   486                           ; 1 bytes @ 0x2
   487                           
   488  0072                     ??_EEPROM24C64_write_page:	
   489                           ; 1 bytes @ 0x2
   490                           
   491  0072                     PCF8574_load_data@data:	
   492                           ; 1 bytes @ 0x2
   493                           
   494  0072                     i1DELAY100@number:	
   495                           ; 1 bytes @ 0x2
   496                           
   497  0072                     EEPROM24C64_start_write_page@address:	
   498                           ; 1 bytes @ 0x2
   499                           
   500  0072                     EEPROMAT24C1024B_start_write_page@address:	
   501                           ; 2 bytes @ 0x2
   502                           
   503  0072                     EEPROMAT24C1024B_read_byte@address:	
   504                           ; 4 bytes @ 0x2
   505                           
   506                           
   507                           ; 4 bytes @ 0x2
   508  0072                     	ds	1
   509  0073                     ??_PCF8574_load_data:	
   510  0073                     PCF8574_load_data@id:	
   511                           ; 1 bytes @ 0x3
   512                           
   513  0073                     PCF8574_read@id:	
   514                           ; 1 bytes @ 0x3
   515                           
   516  0073                     i1DELAY100@k:	
   517                           ; 1 bytes @ 0x3
   518                           
   519                           
   520                           ; 1 bytes @ 0x3
   521  0073                     	ds	1
   522  0074                     ??_EEPROM24C64_start_write_page:	
   523  0074                     PCF8574_read@received:	
   524                           ; 1 bytes @ 0x4
   525                           
   526  0074                     EEPROM24C64_write_page@data:	
   527                           ; 1 bytes @ 0x4
   528                           
   529                           
   530                           ; 1 bytes @ 0x4
   531  0074                     	ds	2
   532  0076                     ??_EEPROMAT24C1024B_start_write_page:	
   533  0076                     ??_EEPROMAT24C1024B_read_byte:	
   534                           ; 1 bytes @ 0x6
   535                           
   536  0076                     EEPROMAT24C1024B_write_page@data:	
   537                           ; 1 bytes @ 0x6
   538                           
   539                           
   540                           ; 1 bytes @ 0x6
   541  0076                     	ds	4
   542  007A                     EEPROMAT24C1024B_read_byte@data:	
   543                           
   544                           ; 1 bytes @ 0xA
   545  007A                     	ds	1
   546                           
   547                           	psect	cstackBANK0
   548  0020                     __pcstackBANK0:	
   549  0020                     ??_check_circuit:	
   550                           
   551                           ; 1 bytes @ 0x0
   552  0020                     	ds	5
   553  0025                     check_circuit@correct2:	
   554                           
   555                           ; 1 bytes @ 0x5
   556  0025                     	ds	1
   557  0026                     check_circuit@j:	
   558                           
   559                           ; 1 bytes @ 0x6
   560  0026                     	ds	1
   561  0027                     check_circuit@j_181:	
   562                           
   563                           ; 1 bytes @ 0x7
   564  0027                     	ds	1
   565  0028                     check_circuit@j_187:	
   566                           
   567                           ; 1 bytes @ 0x8
   568  0028                     	ds	1
   569  0029                     check_circuit@output2:	
   570                           
   571                           ; 1 bytes @ 0x9
   572  0029                     	ds	1
   573  002A                     check_circuit@configuration_count:	
   574                           
   575                           ; 2 bytes @ 0xA
   576  002A                     	ds	2
   577  002C                     check_circuit@result_byte:	
   578                           
   579                           ; 1 bytes @ 0xC
   580  002C                     	ds	1
   581  002D                     check_circuit@k:	
   582                           
   583                           ; 1 bytes @ 0xD
   584  002D                     	ds	1
   585  002E                     check_circuit@k_188:	
   586                           
   587                           ; 1 bytes @ 0xE
   588  002E                     	ds	1
   589  002F                     check_circuit@send_data:	
   590                           
   591                           ; 1 bytes @ 0xF
   592  002F                     	ds	1
   593  0030                     check_circuit@correct1:	
   594                           
   595                           ; 1 bytes @ 0x10
   596  0030                     	ds	1
   597  0031                     check_circuit@output1:	
   598                           
   599                           ; 1 bytes @ 0x11
   600  0031                     	ds	1
   601  0032                     check_circuit@i:	
   602                           
   603                           ; 2 bytes @ 0x12
   604  0032                     	ds	2
   605  0034                     ??_FNC:	
   606                           
   607                           ; 1 bytes @ 0x14
   608  0034                     	ds	4
   609  0038                     FNC@byte_location:	
   610                           
   611                           ; 2 bytes @ 0x18
   612  0038                     	ds	2
   613  003A                     FNC@i:	
   614                           
   615                           ; 2 bytes @ 0x1A
   616  003A                     	ds	2
   617  003C                     ??_UART_init:	
   618  003C                     ??_I2C_initialize:	
   619                           ; 1 bytes @ 0x1C
   620                           
   621  003C                     ??_main:	
   622                           ; 1 bytes @ 0x1C
   623                           
   624                           
   625                           	psect	maintext
   626  051B                     __pmaintext:	
   627                           ; 1 bytes @ 0x1C
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 35 in file "LogicCircuitTester.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  l               1    4[BANK1 ] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : B1F/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   647 ;;      Params:         0       0       0       0
   648 ;;      Locals:         0       0       1       0
   649 ;;      Temps:          0       0       0       0
   650 ;;      Totals:         0       0       1       0
   651 ;;Total ram usage:        1 bytes
   652 ;; Hardware stack levels required when called:    6
   653 ;; This function calls:
   654 ;;		_DELAY
   655 ;;		_DELAY100
   656 ;;		_I2C_initialize
   657 ;;		_UART_init
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _main
   665  051B                     _main:	
   666                           
   667                           ;LogicCircuitTester.c: 37: ANSELA = 0;
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   671  051B  0023               	movlb	3	; select bank3
   672  051C  018C               	clrf	12	;volatile
   673                           
   674                           ;LogicCircuitTester.c: 38: SPLLEN = 0;
   675  051D  0021               	movlb	1	; select bank1
   676  051E  1399               	bcf	25,7	;volatile
   677                           
   678                           ;LogicCircuitTester.c: 43: IRCF3 = 1;
   679  051F  1719               	bsf	25,6	;volatile
   680                           
   681                           ;LogicCircuitTester.c: 44: IRCF2 = 1;
   682  0520  1699               	bsf	25,5	;volatile
   683                           
   684                           ;LogicCircuitTester.c: 45: IRCF1 = 0;
   685  0521  1219               	bcf	25,4	;volatile
   686                           
   687                           ;LogicCircuitTester.c: 46: IRCF0 = 1;
   688  0522  1599               	bsf	25,3	;volatile
   689                           
   690                           ;LogicCircuitTester.c: 48: SCS1 = 1 ;
   691  0523  1499               	bsf	25,1	;volatile
   692                           
   693                           ;LogicCircuitTester.c: 49: SCS0 = 0;
   694  0524  1019               	bcf	25,0	;volatile
   695                           
   696                           ;LogicCircuitTester.c: 50: RXDTSEL = 1;
   697  0525  0022               	movlb	2	; select bank2
   698  0526  179D               	bsf	29,7	;volatile
   699                           
   700                           ;LogicCircuitTester.c: 52: IOCAP3 = 1;
   701  0527  0027               	movlb	7	; select bank7
   702  0528  1591               	bsf	17,3	;volatile
   703                           
   704                           ;LogicCircuitTester.c: 53: IOCIE = 1;
   705  0529  158B               	bsf	11,3	;volatile
   706                           
   707                           ;LogicCircuitTester.c: 54: IOCIF = 0;
   708  052A  100B               	bcf	11,0	;volatile
   709                           
   710                           ;LogicCircuitTester.c: 55: DELAY(120);
   711  052B  3078               	movlw	120
   712  052C  3185  259A  3185   	fcall	_DELAY
   713                           
   714                           ;LogicCircuitTester.c: 56: UART_init();
   715  052F  3185  25E9  3185   	fcall	_UART_init
   716                           
   717                           ;LogicCircuitTester.c: 57: I2C_initialize();
   718  0532  3185  2586  3185   	fcall	_I2C_initialize
   719                           
   720                           ;LogicCircuitTester.c: 58: DELAY(100);
   721  0535  3064               	movlw	100
   722  0536  3185  259A  3185   	fcall	_DELAY
   723                           
   724                           ;LogicCircuitTester.c: 59: PEIE = 1;
   725  0539  170B               	bsf	11,6	;volatile
   726                           
   727                           ;LogicCircuitTester.c: 60: GIE = 1;
   728  053A  178B               	bsf	11,7	;volatile
   729                           
   730                           ;LogicCircuitTester.c: 62: TRISA4 = 0;
   731  053B  0021               	movlb	1	; select bank1
   732  053C  120C               	bcf	12,4	;volatile
   733                           
   734                           ;LogicCircuitTester.c: 75: byte l = 0;
   735  053D  01A4               	clrf	main@l^(0+128)
   736  053E                     l2369:	
   737                           ;LogicCircuitTester.c: 77: while(1)
   738                           
   739                           
   740                           ;LogicCircuitTester.c: 78: {
   741                           ;LogicCircuitTester.c: 81: DELAY100(10);
   742  053E  300A               	movlw	10
   743  053F  3185  255B  3185   	fcall	_DELAY100
   744  0542  2D3E               	goto	l2369
   745  0543                     __end_of_main:	
   746                           
   747                           	psect	text1
   748  05E9                     __ptext1:	
   749 ;; *************** function _UART_init *****************
   750 ;; Defined at:
   751 ;;		line 34 in file "UART.h"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   765 ;;      Params:         0       0       0       0
   766 ;;      Locals:         0       0       0       0
   767 ;;      Temps:          0       0       0       0
   768 ;;      Totals:         0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    4
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _UART_init
   781  05E9                     _UART_init:	
   782                           
   783                           ;UART.h: 37: TRISA5 = 1 ;
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _UART_init: [wreg]
   787  05E9  0021               	movlb	1	; select bank1
   788  05EA  168C               	bsf	12,5	;volatile
   789                           
   790                           ;UART.h: 39: TRISA0 = 0 ;
   791  05EB  100C               	bcf	12,0	;volatile
   792                           
   793                           ;UART.h: 42: SYNC = 0 ;
   794  05EC  0023               	movlb	3	; select bank3
   795  05ED  121E               	bcf	30,4	;volatile
   796                           
   797                           ;UART.h: 44: BRGH = 1;
   798  05EE  151E               	bsf	30,2	;volatile
   799                           
   800                           ;UART.h: 45: BRG16 = 0 ;
   801  05EF  119F               	bcf	31,3	;volatile
   802                           
   803                           ;UART.h: 46: SPBRG = 25;
   804  05F0  3019               	movlw	25
   805  05F1  009B               	movwf	27	;volatile
   806                           
   807                           ;UART.h: 48: CREN = 1 ;
   808  05F2  161D               	bsf	29,4	;volatile
   809                           
   810                           ;UART.h: 50: SPEN = 1 ;
   811  05F3  179D               	bsf	29,7	;volatile
   812                           
   813                           ;UART.h: 51: TXEN = 1 ;
   814  05F4  169E               	bsf	30,5	;volatile
   815                           
   816                           ;UART.h: 54: RCIE = 1;
   817  05F5  0021               	movlb	1	; select bank1
   818  05F6  1691               	bsf	17,5	;volatile
   819                           
   820                           ;UART.h: 55: RCREG;
   821  05F7  0023               	movlb	3	; select bank3
   822  05F8  0819               	movf	25,w	;volatile
   823  05F9  0008               	return
   824  05FA                     __end_of_UART_init:	
   825                           
   826                           	psect	text2
   827  0586                     __ptext2:	
   828 ;; *************** function _I2C_initialize *****************
   829 ;; Defined at:
   830 ;;		line 146 in file "I2C.h"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   844 ;;      Params:         0       0       0       0
   845 ;;      Locals:         0       0       0       0
   846 ;;      Temps:          0       0       0       0
   847 ;;      Totals:         0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    5
   851 ;; This function calls:
   852 ;;		_DELAY
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _I2C_initialize
   860  0586                     _I2C_initialize:	
   861                           
   862                           ;I2C.h: 148: ANSA1 = 0;
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _I2C_initialize: [wreg+status,2+status,0+pclath+cstack]
   866  0586  0023               	movlb	3	; select bank3
   867  0587  108C               	bcf	12,1	;volatile
   868                           
   869                           ;I2C.h: 149: ANSA2 = 0;
   870  0588  110C               	bcf	12,2	;volatile
   871                           
   872                           ;I2C.h: 150: TRISA1 = 1 ;
   873  0589  0021               	movlb	1	; select bank1
   874  058A  148C               	bsf	12,1	;volatile
   875                           
   876                           ;I2C.h: 151: TRISA2 = 1 ;
   877  058B  150C               	bsf	12,2	;volatile
   878                           
   879                           ;I2C.h: 156: SSPM3 = 1;
   880  058C  0024               	movlb	4	; select bank4
   881  058D  1595               	bsf	21,3	;volatile
   882                           
   883                           ;I2C.h: 157: SSPM2 = 0;
   884  058E  1115               	bcf	21,2	;volatile
   885                           
   886                           ;I2C.h: 158: SSPM1 = 0;
   887  058F  1095               	bcf	21,1	;volatile
   888                           
   889                           ;I2C.h: 159: SSPM0 = 0;
   890  0590  1015               	bcf	21,0	;volatile
   891                           
   892                           ;I2C.h: 191: SSPADD = 39;
   893  0591  3027               	movlw	39
   894  0592  0092               	movwf	18	;volatile
   895                           
   896                           ;I2C.h: 197: SSPEN = 1 ;
   897  0593  1695               	bsf	21,5	;volatile
   898                           
   899                           ;I2C.h: 198: SSP1IF = 0;
   900  0594  0020               	movlb	0	; select bank0
   901  0595  1191               	bcf	17,3	;volatile
   902                           
   903                           ;I2C.h: 199: DELAY(5);
   904  0596  3005               	movlw	5
   905  0597  3185  259A         	fcall	_DELAY
   906  0599  0008               	return
   907  059A                     __end_of_I2C_initialize:	
   908                           
   909                           	psect	text3
   910  059A                     __ptext3:	
   911 ;; *************** function _DELAY *****************
   912 ;; Defined at:
   913 ;;		line 13 in file "LogicCircuitTester.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  number          1    wreg     unsigned char 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  number          1    1[BANK1 ] unsigned char 
   918 ;;  k               1    2[BANK1 ] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   928 ;;      Params:         0       0       0       0
   929 ;;      Locals:         0       0       2       0
   930 ;;      Temps:          0       0       1       0
   931 ;;      Totals:         0       0       3       0
   932 ;;Total ram usage:        3 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    4
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_I2C_initialize
   939 ;;		_main
   940 ;;		_lcd_info
   941 ;;		_lcd_write
   942 ;;		_LCD_init
   943 ;;		_ADC_init
   944 ;;		_ADC_read
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _DELAY
   950  059A                     _DELAY:	
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _DELAY: [wreg+status,2+status,0]
   954                           ;DELAY@number stored from wreg
   955  059A  0021               	movlb	1	; select bank1
   956  059B  00A1               	movwf	DELAY@number^(0+128)
   957                           
   958                           ;LogicCircuitTester.c: 15: for(byte k=0; k != number; k++)
   959  059C  01A2               	clrf	DELAY@k^(0+128)
   960  059D                     l2239:	
   961  059D  0822               	movf	DELAY@k^(0+128),w
   962  059E  0621               	xorwf	DELAY@number^(0+128),w
   963  059F  1903               	btfsc	3,2
   964  05A0  0008               	return
   965                           
   966                           ;LogicCircuitTester.c: 16: _delay((unsigned long)((1)*(4000000/4000.0)));
   967  05A1  30F9               	movlw	249
   968  05A2  00A0               	movwf	??_DELAY^(0+128)
   969  05A3                     u1537:	
   970  05A3  0000               	nop
   971  05A4  0BA0               	decfsz	??_DELAY^(0+128),f
   972  05A5  2DA3               	goto	u1537
   973  05A6  3200               	nop2	;nop
   974  05A7  0000               	nop
   975  05A8  3001               	movlw	1
   976  05A9  0021               	movlb	1	; select bank1
   977  05AA  00A0               	movwf	??_DELAY^(0+128)
   978  05AB  0820               	movf	??_DELAY^(0+128),w
   979  05AC  07A2               	addwf	DELAY@k^(0+128),f
   980  05AD  2D9D               	goto	l2239
   981  05AE                     __end_of_DELAY:	
   982                           
   983                           	psect	text4
   984  055B                     __ptext4:	
   985 ;; *************** function _DELAY100 *****************
   986 ;; Defined at:
   987 ;;		line 18 in file "LogicCircuitTester.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  number          1    wreg     unsigned char 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  number          1    2[BANK1 ] unsigned char 
   992 ;;  k               1    3[BANK1 ] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1002 ;;      Params:         0       0       0       0
  1003 ;;      Locals:         0       0       2       0
  1004 ;;      Temps:          0       0       2       0
  1005 ;;      Totals:         0       0       4       0
  1006 ;;Total ram usage:        4 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    4
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _DELAY100
  1018  055B                     _DELAY100:	
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _DELAY100: [wreg+status,2+status,0]
  1022                           ;DELAY100@number stored from wreg
  1023  055B  0021               	movlb	1	; select bank1
  1024  055C  00A2               	movwf	DELAY100@number^(0+128)
  1025                           
  1026                           ;LogicCircuitTester.c: 20: for(byte k=0; k != number; k++)
  1027  055D  01A3               	clrf	DELAY100@k^(0+128)
  1028  055E                     l2255:	
  1029  055E  0823               	movf	DELAY100@k^(0+128),w
  1030  055F  0622               	xorwf	DELAY100@number^(0+128),w
  1031  0560  1903               	btfsc	3,2
  1032  0561  0008               	return
  1033                           
  1034                           ;LogicCircuitTester.c: 21: _delay((unsigned long)((100)*(4000000/4000.0)));
  1035  0562  3082               	movlw	130
  1036  0563  00A1               	movwf	(??_DELAY100^(0+128)+1)
  1037  0564  30DD               	movlw	221
  1038  0565  00A0               	movwf	??_DELAY100^(0+128)
  1039  0566                     u1547:	
  1040  0566  0BA0               	decfsz	??_DELAY100^(0+128),f
  1041  0567  2D66               	goto	u1547
  1042  0568  0BA1               	decfsz	(??_DELAY100^(0+128)+1),f
  1043  0569  2D66               	goto	u1547
  1044  056A  3200               	nop2
  1045  056B  3001               	movlw	1
  1046  056C  0021               	movlb	1	; select bank1
  1047  056D  00A0               	movwf	??_DELAY100^(0+128)
  1048  056E  0820               	movf	??_DELAY100^(0+128),w
  1049  056F  07A3               	addwf	DELAY100@k^(0+128),f
  1050  0570  2D5E               	goto	l2255
  1051  0571                     __end_of_DELAY100:	
  1052                           
  1053                           	psect	intentry
  1054  0004                     __pintentry:	
  1055 ;; *************** function _FNC *****************
  1056 ;; Defined at:
  1057 ;;		line 214 in file "INTERRUPT.h"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  i               2   26[BANK0 ] unsigned int 
  1062 ;;  byte_locatio    2   24[BANK0 ] unsigned int 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1072 ;;      Params:         0       0       0       0
  1073 ;;      Locals:         0       4       0       0
  1074 ;;      Temps:          0       4       0       0
  1075 ;;      Totals:         0       8       0       0
  1076 ;;Total ram usage:        8 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    3
  1079 ;; This function calls:
  1080 ;;		_EEPROMAT24C1024B_start_write_page
  1081 ;;		_EEPROMAT24C1024B_stop_write_page
  1082 ;;		_EEPROMAT24C1024B_write_page
  1083 ;;		_EEPROM_WriteByte
  1084 ;;		_UART_byte_receive
  1085 ;;		_UART_byte_send
  1086 ;;		_check_circuit
  1087 ;;		i1_DELAY100
  1088 ;; This function is called by:
  1089 ;;		Interrupt level 1
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093  0004                     _FNC:	
  1094                           
  1095                           ;incstack = 0
  1096                           ; Regs used in _FNC: [wreg+status,2+status,0+pclath+cstack]
  1097  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1098  0005  3180               	pagesel	$
  1099  0006  0020               	movlb	0	; select bank0
  1100  0007  087F               	movf	127,w
  1101  0008  00B7               	movwf	??_FNC+3
  1102                           
  1103                           ;INTERRUPT.h: 216: if(RCIF)
  1104  0009  1E91               	btfss	17,5	;volatile
  1105  000A  2968               	goto	i1l319
  1106                           
  1107                           ;INTERRUPT.h: 217: {
  1108                           ;INTERRUPT.h: 218: received_data = UART_byte_receive();
  1109  000B  3186  2647  3180   	fcall	_UART_byte_receive
  1110  000E  0020               	movlb	0	; select bank0
  1111  000F  00B4               	movwf	??_FNC
  1112  0010  0834               	movf	??_FNC,w
  1113  0011  00CF               	movwf	_received_data
  1114                           
  1115                           ;INTERRUPT.h: 219: _delay((unsigned long)((1)*(4000000/4000.0)));
  1116  0012  30F9               	movlw	249
  1117  0013  00B4               	movwf	??_FNC
  1118  0014                     u155_27:	
  1119  0014  0000               	nop
  1120  0015  0BB4               	decfsz	??_FNC,f
  1121  0016  2814               	goto	u155_27
  1122  0017  3200               	nop2	;nop
  1123  0018  0000               	nop
  1124                           
  1125                           ;INTERRUPT.h: 220: UART_byte_send('T');
  1126  0019  3054               	movlw	84
  1127  001A  3186  2623  3180   	fcall	_UART_byte_send
  1128                           
  1129                           ;INTERRUPT.h: 221: _delay((unsigned long)((10)*(4000000/4000.0)));
  1130  001D  300D               	movlw	13
  1131  001E  0020               	movlb	0	; select bank0
  1132  001F  00B5               	movwf	??_FNC+1
  1133  0020  30FB               	movlw	251
  1134  0021  00B4               	movwf	??_FNC
  1135  0022                     u156_27:	
  1136  0022  0BB4               	decfsz	??_FNC,f
  1137  0023  2822               	goto	u156_27
  1138  0024  0BB5               	decfsz	??_FNC+1,f
  1139  0025  2822               	goto	u156_27
  1140  0026  3200               	nop2
  1141                           
  1142                           ;INTERRUPT.h: 223: received_data = UART_byte_receive();
  1143  0027  3186  2647  3180   	fcall	_UART_byte_receive
  1144  002A  0020               	movlb	0	; select bank0
  1145  002B  00B4               	movwf	??_FNC
  1146  002C  0834               	movf	??_FNC,w
  1147  002D  00CF               	movwf	_received_data
  1148                           
  1149                           ;INTERRUPT.h: 224: if (received_data == 'T')
  1150  002E  3054               	movlw	84
  1151  002F  064F               	xorwf	_received_data,w
  1152  0030  1D03               	btfss	3,2
  1153  0031  2968               	goto	i1l319
  1154                           
  1155                           ;INTERRUPT.h: 225: {
  1156                           ;INTERRUPT.h: 226: _delay((unsigned long)((1)*(4000000/4000.0)));
  1157  0032  30F9               	movlw	249
  1158  0033  00B4               	movwf	??_FNC
  1159  0034                     u157_27:	
  1160  0034  0000               	nop
  1161  0035  0BB4               	decfsz	??_FNC,f
  1162  0036  2834               	goto	u157_27
  1163  0037  3200               	nop2	;nop
  1164  0038  0000               	nop
  1165                           
  1166                           ;INTERRUPT.h: 227: UART_byte_send('T');
  1167  0039  3054               	movlw	84
  1168  003A  3186  2623  3180   	fcall	_UART_byte_send
  1169                           
  1170                           ;INTERRUPT.h: 228: received_data = UART_byte_receive();
  1171  003D  3186  2647  3180   	fcall	_UART_byte_receive
  1172  0040  0020               	movlb	0	; select bank0
  1173  0041  00B4               	movwf	??_FNC
  1174  0042  0834               	movf	??_FNC,w
  1175  0043  00CF               	movwf	_received_data
  1176                           
  1177                           ;INTERRUPT.h: 230: if(received_data == 'N')
  1178  0044  304E               	movlw	78
  1179  0045  064F               	xorwf	_received_data,w
  1180  0046  1D03               	btfss	3,2
  1181  0047  2940               	goto	i1l2107
  1182                           
  1183                           ;INTERRUPT.h: 231: {
  1184                           ;INTERRUPT.h: 232: _delay((unsigned long)((1)*(4000000/4000.0)));
  1185  0048  30F9               	movlw	249
  1186  0049  00B4               	movwf	??_FNC
  1187  004A                     u158_27:	
  1188  004A  0000               	nop
  1189  004B  0BB4               	decfsz	??_FNC,f
  1190  004C  284A               	goto	u158_27
  1191  004D  3200               	nop2	;nop
  1192  004E  0000               	nop
  1193                           
  1194                           ;INTERRUPT.h: 233: UART_byte_send('T');
  1195  004F  3054               	movlw	84
  1196  0050  3186  2623  3180   	fcall	_UART_byte_send
  1197                           
  1198                           ;INTERRUPT.h: 234: input_count = UART_byte_receive();
  1199  0053  3186  2647  3180   	fcall	_UART_byte_receive
  1200  0056  0020               	movlb	0	; select bank0
  1201  0057  00B4               	movwf	??_FNC
  1202  0058  0834               	movf	??_FNC,w
  1203  0059  00CD               	movwf	_input_count
  1204                           
  1205                           ;INTERRUPT.h: 237: EEPROM_WriteByte(0, input_count);
  1206  005A  084D               	movf	_input_count,w
  1207  005B  00B4               	movwf	??_FNC
  1208  005C  0834               	movf	??_FNC,w
  1209  005D  00F0               	movwf	EEPROM_WriteByte@value
  1210  005E  3000               	movlw	0
  1211  005F  3185  2571  3180   	fcall	_EEPROM_WriteByte
  1212                           
  1213                           ;INTERRUPT.h: 238: _delay((unsigned long)((1)*(4000000/4000.0)));
  1214  0062  30F9               	movlw	249
  1215  0063  0020               	movlb	0	; select bank0
  1216  0064  00B4               	movwf	??_FNC
  1217  0065                     u159_27:	
  1218  0065  0000               	nop
  1219  0066  0BB4               	decfsz	??_FNC,f
  1220  0067  2865               	goto	u159_27
  1221  0068  3200               	nop2	;nop
  1222  0069  0000               	nop
  1223                           
  1224                           ;INTERRUPT.h: 239: UART_byte_send('T');
  1225  006A  3054               	movlw	84
  1226  006B  3186  2623  3180   	fcall	_UART_byte_send
  1227                           
  1228                           ;INTERRUPT.h: 240: output_count = UART_byte_receive();
  1229  006E  3186  2647  3180   	fcall	_UART_byte_receive
  1230  0071  0020               	movlb	0	; select bank0
  1231  0072  00B4               	movwf	??_FNC
  1232  0073  0834               	movf	??_FNC,w
  1233  0074  00CE               	movwf	_output_count
  1234                           
  1235                           ;INTERRUPT.h: 241: EEPROM_WriteByte(1, output_count);
  1236  0075  084E               	movf	_output_count,w
  1237  0076  00B4               	movwf	??_FNC
  1238  0077  0834               	movf	??_FNC,w
  1239  0078  00F0               	movwf	EEPROM_WriteByte@value
  1240  0079  3001               	movlw	1
  1241  007A  3185  2571  3180   	fcall	_EEPROM_WriteByte
  1242                           
  1243                           ;INTERRUPT.h: 242: _delay((unsigned long)((1)*(4000000/4000.0)));
  1244  007D  30F9               	movlw	249
  1245  007E  0020               	movlb	0	; select bank0
  1246  007F  00B4               	movwf	??_FNC
  1247  0080                     u160_27:	
  1248  0080  0000               	nop
  1249  0081  0BB4               	decfsz	??_FNC,f
  1250  0082  2880               	goto	u160_27
  1251  0083  3200               	nop2	;nop
  1252  0084  0000               	nop
  1253                           
  1254                           ;INTERRUPT.h: 243: UART_byte_send('T');
  1255  0085  3054               	movlw	84
  1256  0086  3186  2623  3180   	fcall	_UART_byte_send
  1257                           
  1258                           ;INTERRUPT.h: 245: received_data = UART_byte_receive();
  1259  0089  3186  2647  3180   	fcall	_UART_byte_receive
  1260  008C  0020               	movlb	0	; select bank0
  1261  008D  00B4               	movwf	??_FNC
  1262  008E  0834               	movf	??_FNC,w
  1263  008F  00CF               	movwf	_received_data
  1264                           
  1265                           ;INTERRUPT.h: 247: configuration_count = received_data << 8;
  1266  0090  084F               	movf	_received_data,w
  1267  0091  00B4               	movwf	??_FNC
  1268  0092  01B5               	clrf	??_FNC+1
  1269  0093  0834               	movf	??_FNC,w
  1270  0094  00B5               	movwf	??_FNC+1
  1271  0095  01B4               	clrf	??_FNC
  1272  0096  0834               	movf	??_FNC,w
  1273  0097  00C6               	movwf	_configuration_count
  1274  0098  0835               	movf	??_FNC+1,w
  1275  0099  00C7               	movwf	_configuration_count+1
  1276                           
  1277                           ;INTERRUPT.h: 248: EEPROM_WriteByte(2, received_data);
  1278  009A  084F               	movf	_received_data,w
  1279  009B  00B4               	movwf	??_FNC
  1280  009C  0834               	movf	??_FNC,w
  1281  009D  00F0               	movwf	EEPROM_WriteByte@value
  1282  009E  3002               	movlw	2
  1283  009F  3185  2571  3180   	fcall	_EEPROM_WriteByte
  1284                           
  1285                           ;INTERRUPT.h: 249: UART_byte_send('T');
  1286  00A2  3054               	movlw	84
  1287  00A3  3186  2623  3180   	fcall	_UART_byte_send
  1288                           
  1289                           ;INTERRUPT.h: 251: received_data = UART_byte_receive();
  1290  00A6  3186  2647  3180   	fcall	_UART_byte_receive
  1291  00A9  0020               	movlb	0	; select bank0
  1292  00AA  00B4               	movwf	??_FNC
  1293  00AB  0834               	movf	??_FNC,w
  1294  00AC  00CF               	movwf	_received_data
  1295                           
  1296                           ;INTERRUPT.h: 253: configuration_count |= received_data;
  1297  00AD  084F               	movf	_received_data,w
  1298  00AE  00B4               	movwf	??_FNC
  1299  00AF  01B5               	clrf	??_FNC+1
  1300  00B0  0834               	movf	??_FNC,w
  1301  00B1  04C6               	iorwf	_configuration_count,f
  1302  00B2  0835               	movf	??_FNC+1,w
  1303  00B3  04C7               	iorwf	_configuration_count+1,f
  1304                           
  1305                           ;INTERRUPT.h: 254: EEPROM_WriteByte(3, received_data);
  1306  00B4  084F               	movf	_received_data,w
  1307  00B5  00B4               	movwf	??_FNC
  1308  00B6  0834               	movf	??_FNC,w
  1309  00B7  00F0               	movwf	EEPROM_WriteByte@value
  1310  00B8  3003               	movlw	3
  1311  00B9  3185  2571  3180   	fcall	_EEPROM_WriteByte
  1312                           
  1313                           ;INTERRUPT.h: 255: UART_byte_send('T');
  1314  00BC  3054               	movlw	84
  1315  00BD  3186  2623  3180   	fcall	_UART_byte_send
  1316                           
  1317                           ;INTERRUPT.h: 256: unsigned int byte_location;
  1318                           ;INTERRUPT.h: 257: EEPROMAT24C1024B_start_write_page(0);
  1319  00C0  3000               	movlw	0
  1320  00C1  00F5               	movwf	EEPROMAT24C1024B_start_write_page@address+3
  1321  00C2  3000               	movlw	0
  1322  00C3  00F4               	movwf	EEPROMAT24C1024B_start_write_page@address+2
  1323  00C4  3000               	movlw	0
  1324  00C5  00F3               	movwf	EEPROMAT24C1024B_start_write_page@address+1
  1325  00C6  3000               	movlw	0
  1326  00C7  00F2               	movwf	EEPROMAT24C1024B_start_write_page@address
  1327  00C8  3184  24B1  3180   	fcall	_EEPROMAT24C1024B_start_write_page
  1328                           
  1329                           ;INTERRUPT.h: 258: for(unsigned int i=0; i < configuration_count ; i++ )
  1330  00CB  0020               	movlb	0	; select bank0
  1331  00CC  01BA               	clrf	FNC@i
  1332  00CD  01BB               	clrf	FNC@i+1
  1333  00CE                     i1l2101:	
  1334  00CE  0847               	movf	_configuration_count+1,w
  1335  00CF  023B               	subwf	FNC@i+1,w
  1336  00D0  1D03               	skipz
  1337  00D1  28D4               	goto	u139_25
  1338  00D2  0846               	movf	_configuration_count,w
  1339  00D3  023A               	subwf	FNC@i,w
  1340  00D4                     u139_25:	
  1341  00D4  1803               	btfsc	3,0
  1342  00D5  2932               	goto	i1l2103
  1343                           
  1344                           ;INTERRUPT.h: 259: {
  1345                           ;INTERRUPT.h: 260: received_data = UART_byte_receive();
  1346  00D6  3186  2647  3180   	fcall	_UART_byte_receive
  1347  00D9  0020               	movlb	0	; select bank0
  1348  00DA  00B4               	movwf	??_FNC
  1349  00DB  0834               	movf	??_FNC,w
  1350  00DC  00CF               	movwf	_received_data
  1351                           
  1352                           ;INTERRUPT.h: 262: if(output_count < 9)
  1353  00DD  3009               	movlw	9
  1354  00DE  024E               	subwf	_output_count,w
  1355  00DF  1803               	skipnc
  1356  00E0  28F4               	goto	i1l2083
  1357                           
  1358                           ;INTERRUPT.h: 263: {
  1359                           ;INTERRUPT.h: 264: byte_location = i+2;
  1360  00E1  083A               	movf	FNC@i,w
  1361  00E2  3E02               	addlw	2
  1362  00E3  00B8               	movwf	FNC@byte_location
  1363  00E4  3000               	movlw	0
  1364  00E5  3D3B               	addwfc	FNC@i+1,w
  1365  00E6  00B9               	movwf	FNC@byte_location+1
  1366                           
  1367                           ;INTERRUPT.h: 265: EEPROMAT24C1024B_write_page(received_data);
  1368  00E7  084F               	movf	_received_data,w
  1369  00E8  3184  2452  3180   	fcall	_EEPROMAT24C1024B_write_page
  1370                           
  1371                           ;INTERRUPT.h: 266: _delay((unsigned long)((1)*(4000000/4000.0)));
  1372  00EB  30F9               	movlw	249
  1373  00EC  0020               	movlb	0	; select bank0
  1374  00ED  00B4               	movwf	??_FNC
  1375  00EE                     u161_27:	
  1376  00EE  0000               	nop
  1377  00EF  0BB4               	decfsz	??_FNC,f
  1378  00F0  28EE               	goto	u161_27
  1379  00F1  3200               	nop2	;nop
  1380  00F2  0000               	nop
  1381  00F3  2928               	goto	L1
  1382  00F4                     i1l2083:	
  1383                           ;INTERRUPT.h: 269: }
  1384                           
  1385                           ;INTERRUPT.h: 267: UART_byte_send('T');
  1386                           
  1387                           
  1388                           ;INTERRUPT.h: 270: else
  1389                           ;INTERRUPT.h: 271: {
  1390                           ;INTERRUPT.h: 272: byte_location = i*2+2;
  1391  00F4  0020               	movlb	0	; select bank0
  1392  00F5  083B               	movf	FNC@i+1,w
  1393  00F6  00B5               	movwf	??_FNC+1
  1394  00F7  083A               	movf	FNC@i,w
  1395  00F8  00B4               	movwf	??_FNC
  1396  00F9  35B4               	lslf	??_FNC,f
  1397  00FA  0DB5               	rlf	??_FNC+1,f
  1398  00FB  0834               	movf	??_FNC,w
  1399  00FC  3E02               	addlw	2
  1400  00FD  00B8               	movwf	FNC@byte_location
  1401  00FE  3000               	movlw	0
  1402  00FF  3D35               	addwfc	??_FNC+1,w
  1403  0100  00B9               	movwf	FNC@byte_location+1
  1404                           
  1405                           ;INTERRUPT.h: 273: EEPROMAT24C1024B_write_page(received_data);
  1406  0101  084F               	movf	_received_data,w
  1407  0102  3184  2452  3180   	fcall	_EEPROMAT24C1024B_write_page
  1408                           
  1409                           ;INTERRUPT.h: 274: _delay((unsigned long)((1)*(4000000/4000.0)));
  1410  0105  30F9               	movlw	249
  1411  0106  0020               	movlb	0	; select bank0
  1412  0107  00B4               	movwf	??_FNC
  1413  0108                     u162_27:	
  1414  0108  0000               	nop
  1415  0109  0BB4               	decfsz	??_FNC,f
  1416  010A  2908               	goto	u162_27
  1417  010B  3200               	nop2	;nop
  1418  010C  0000               	nop
  1419                           
  1420                           ;INTERRUPT.h: 275: UART_byte_send('T');
  1421  010D  3054               	movlw	84
  1422  010E  3186  2623  3180   	fcall	_UART_byte_send
  1423                           
  1424                           ;INTERRUPT.h: 276: received_data = UART_byte_receive();
  1425  0111  3186  2647  3180   	fcall	_UART_byte_receive
  1426  0114  0020               	movlb	0	; select bank0
  1427  0115  00B4               	movwf	??_FNC
  1428  0116  0834               	movf	??_FNC,w
  1429  0117  00CF               	movwf	_received_data
  1430                           
  1431                           ;INTERRUPT.h: 277: byte_location+=1;
  1432  0118  3001               	movlw	1
  1433  0119  07B8               	addwf	FNC@byte_location,f
  1434  011A  3000               	movlw	0
  1435  011B  3DB9               	addwfc	FNC@byte_location+1,f
  1436                           
  1437                           ;INTERRUPT.h: 278: EEPROMAT24C1024B_write_page(received_data);
  1438  011C  084F               	movf	_received_data,w
  1439  011D  3184  2452  3180   	fcall	_EEPROMAT24C1024B_write_page
  1440                           
  1441                           ;INTERRUPT.h: 279: _delay((unsigned long)((1)*(4000000/4000.0)));
  1442  0120  30F9               	movlw	249
  1443  0121  0020               	movlb	0	; select bank0
  1444  0122  00B4               	movwf	??_FNC
  1445  0123                     u163_27:	
  1446  0123  0000               	nop
  1447  0124  0BB4               	decfsz	??_FNC,f
  1448  0125  2923               	goto	u163_27
  1449  0126  3200               	nop2	;nop
  1450  0127  0000               	nop
  1451  0128                     L1:	
  1452                           
  1453                           ;INTERRUPT.h: 280: UART_byte_send('T');
  1454  0128  3054               	movlw	84
  1455  0129  3186  2623  3180   	fcall	_UART_byte_send
  1456  012C  3001               	movlw	1
  1457  012D  0020               	movlb	0	; select bank0
  1458  012E  07BA               	addwf	FNC@i,f
  1459  012F  3000               	movlw	0
  1460  0130  3DBB               	addwfc	FNC@i+1,f
  1461  0131  28CE               	goto	i1l2101
  1462  0132                     i1l2103:	
  1463                           
  1464                           ;INTERRUPT.h: 283: }
  1465                           ;INTERRUPT.h: 284: }
  1466                           ;INTERRUPT.h: 286: EEPROMAT24C1024B_stop_write_page();
  1467  0132  3186  2650  3180   	fcall	_EEPROMAT24C1024B_stop_write_page
  1468                           
  1469                           ;INTERRUPT.h: 287: _delay((unsigned long)((10)*(4000000/4000.0)));
  1470  0135  300D               	movlw	13
  1471  0136  0020               	movlb	0	; select bank0
  1472  0137  00B5               	movwf	??_FNC+1
  1473  0138  30FB               	movlw	251
  1474  0139  00B4               	movwf	??_FNC
  1475  013A                     u164_27:	
  1476  013A  0BB4               	decfsz	??_FNC,f
  1477  013B  293A               	goto	u164_27
  1478  013C  0BB5               	decfsz	??_FNC+1,f
  1479  013D  293A               	goto	u164_27
  1480  013E  3200               	nop2
  1481                           
  1482                           ;INTERRUPT.h: 290: }
  1483  013F  2968               	goto	i1l319
  1484  0140                     i1l2107:	
  1485                           
  1486                           ;INTERRUPT.h: 291: else if (received_data == 'S')
  1487  0140  3053               	movlw	83
  1488  0141  0020               	movlb	0	; select bank0
  1489  0142  064F               	xorwf	_received_data,w
  1490  0143  1D03               	btfss	3,2
  1491  0144  2968               	goto	i1l319
  1492                           
  1493                           ;INTERRUPT.h: 292: {
  1494                           ;INTERRUPT.h: 293: _delay((unsigned long)((1)*(4000000/4000.0)));
  1495  0145  30F9               	movlw	249
  1496  0146  00B4               	movwf	??_FNC
  1497  0147                     u165_27:	
  1498  0147  0000               	nop
  1499  0148  0BB4               	decfsz	??_FNC,f
  1500  0149  2947               	goto	u165_27
  1501  014A  3200               	nop2	;nop
  1502  014B  0000               	nop
  1503                           
  1504                           ;INTERRUPT.h: 294: UART_byte_send('T');
  1505  014C  3054               	movlw	84
  1506  014D  3186  2623  3180   	fcall	_UART_byte_send
  1507                           
  1508                           ;INTERRUPT.h: 295: _delay((unsigned long)((1)*(4000000/4000.0)));
  1509  0150  30F9               	movlw	249
  1510  0151  0020               	movlb	0	; select bank0
  1511  0152  00B4               	movwf	??_FNC
  1512  0153                     u166_27:	
  1513  0153  0000               	nop
  1514  0154  0BB4               	decfsz	??_FNC,f
  1515  0155  2953               	goto	u166_27
  1516  0156  3200               	nop2	;nop
  1517  0157  0000               	nop
  1518                           
  1519                           ;INTERRUPT.h: 297: check_circuit(1);
  1520  0158  3001               	movlw	1
  1521  0159  3181  2190  3180   	fcall	_check_circuit
  1522                           
  1523                           ;INTERRUPT.h: 302: UART_byte_send('T');
  1524  015C  3054               	movlw	84
  1525  015D  3186  2623  3180   	fcall	_UART_byte_send
  1526                           
  1527                           ;INTERRUPT.h: 303: _delay((unsigned long)((1)*(4000000/4000.0)));
  1528  0160  30F9               	movlw	249
  1529  0161  0020               	movlb	0	; select bank0
  1530  0162  00B4               	movwf	??_FNC
  1531  0163                     u167_27:	
  1532  0163  0000               	nop
  1533  0164  0BB4               	decfsz	??_FNC,f
  1534  0165  2963               	goto	u167_27
  1535  0166  3200               	nop2	;nop
  1536  0167  0000               	nop
  1537  0168                     i1l319:	
  1538                           ;INTERRUPT.h: 311: else ;
  1539                           
  1540                           ;INTERRUPT.h: 306: }
  1541                           ;INTERRUPT.h: 310: }
  1542                           
  1543                           
  1544                           ;INTERRUPT.h: 314: }
  1545                           ;INTERRUPT.h: 317: if(IOCIF)
  1546  0168  1C0B               	btfss	11,0	;volatile
  1547  0169  2975               	goto	i1l331
  1548                           
  1549                           ;INTERRUPT.h: 318: {
  1550                           ;INTERRUPT.h: 319: RA4 = ~RA4;
  1551  016A  3010               	movlw	16
  1552  016B  0020               	movlb	0	; select bank0
  1553  016C  068C               	xorwf	12,f
  1554                           
  1555                           ;INTERRUPT.h: 320: DELAY100(5);
  1556  016D  3005               	movlw	5
  1557  016E  3185  25AE  3180   	fcall	i1_DELAY100
  1558                           
  1559                           ;INTERRUPT.h: 322: IOCIF = 0;
  1560  0171  100B               	bcf	11,0	;volatile
  1561                           
  1562                           ;INTERRUPT.h: 323: check_circuit(0);
  1563  0172  3000               	movlw	0
  1564  0173  3181  2190         	fcall	_check_circuit
  1565  0175                     i1l331:	
  1566  0175  0020               	movlb	0	; select bank0
  1567  0176  0837               	movf	??_FNC+3,w
  1568  0177  00FF               	movwf	127
  1569  0178  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1570  0179  0009               	retfie
  1571  017A                     __end_of_FNC:	
  1572                           
  1573                           	psect	text6
  1574  05AE                     __ptext6:	
  1575 ;; *************** function i1_DELAY100 *****************
  1576 ;; Defined at:
  1577 ;;		line 18 in file "LogicCircuitTester.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  number          1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  number          1    2[COMMON] unsigned char 
  1582 ;;  DELAY100        1    3[COMMON] unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1592 ;;      Params:         0       0       0       0
  1593 ;;      Locals:         2       0       0       0
  1594 ;;      Temps:          2       0       0       0
  1595 ;;      Totals:         4       0       0       0
  1596 ;;Total ram usage:        4 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_FNC
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function i1_DELAY100
  1607  05AE                     i1_DELAY100:	
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in i1_DELAY100: [wreg+status,2+status,0]
  1611                           ;i1DELAY100@number stored from wreg
  1612  05AE  00F2               	movwf	i1DELAY100@number
  1613                           
  1614                           ;LogicCircuitTester.c: 20: for(byte k=0; k != number; k++)
  1615  05AF  01F3               	clrf	i1DELAY100@k
  1616  05B0                     i1l1981:	
  1617  05B0  0873               	movf	i1DELAY100@k,w
  1618  05B1  0672               	xorwf	i1DELAY100@number,w
  1619  05B2  1903               	btfsc	3,2
  1620  05B3  0008               	return
  1621                           
  1622                           ;LogicCircuitTester.c: 21: _delay((unsigned long)((100)*(4000000/4000.0)));
  1623  05B4  3082               	movlw	130
  1624  05B5  00F1               	movwf	??i1_DELAY100+1
  1625  05B6  30DD               	movlw	221
  1626  05B7  00F0               	movwf	??i1_DELAY100
  1627  05B8                     u168_27:	
  1628  05B8  0BF0               	decfsz	??i1_DELAY100,f
  1629  05B9  2DB8               	goto	u168_27
  1630  05BA  0BF1               	decfsz	??i1_DELAY100+1,f
  1631  05BB  2DB8               	goto	u168_27
  1632  05BC  3200               	nop2
  1633  05BD  3001               	movlw	1
  1634  05BE  00F0               	movwf	??i1_DELAY100
  1635  05BF  0870               	movf	??i1_DELAY100,w
  1636  05C0  07F3               	addwf	i1DELAY100@k,f
  1637  05C1  2DB0               	goto	i1l1981
  1638  05C2                     __end_ofi1_DELAY100:	
  1639                           
  1640                           	psect	text7
  1641  0190                     __ptext7:	
  1642 ;; *************** function _check_circuit *****************
  1643 ;; Defined at:
  1644 ;;		line 28 in file "INTERRUPT.h"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  send_data       1    wreg     unsigned char 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  send_data       1   15[BANK0 ] unsigned char 
  1649 ;;  k               1   14[BANK0 ] unsigned char 
  1650 ;;  j               1    8[BANK0 ] unsigned char 
  1651 ;;  k               1   13[BANK0 ] unsigned char 
  1652 ;;  j               1    7[BANK0 ] unsigned char 
  1653 ;;  j               1    6[BANK0 ] unsigned char 
  1654 ;;  i               2   18[BANK0 ] unsigned int 
  1655 ;;  configuratio    2   10[BANK0 ] unsigned int 
  1656 ;;  output1         1   17[BANK0 ] unsigned char 
  1657 ;;  correct1        1   16[BANK0 ] unsigned char 
  1658 ;;  result_byte     1   12[BANK0 ] unsigned char 
  1659 ;;  output2         1    9[BANK0 ] unsigned char 
  1660 ;;  correct2        1    5[BANK0 ] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1670 ;;      Params:         0       0       0       0
  1671 ;;      Locals:         0      15       0       0
  1672 ;;      Temps:          0       5       0       0
  1673 ;;      Totals:         0      20       0       0
  1674 ;;Total ram usage:       20 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    2
  1677 ;; This function calls:
  1678 ;;		_EEPROM24C64_start_write_page
  1679 ;;		_EEPROM24C64_stop_write_page
  1680 ;;		_EEPROM24C64_write_page
  1681 ;;		_EEPROMAT24C1024B_read_byte
  1682 ;;		_EEPROM_ReadByte
  1683 ;;		_PCF8574_load_data
  1684 ;;		_PCF8574_read
  1685 ;;		_UART_byte_receive
  1686 ;;		_UART_byte_send
  1687 ;; This function is called by:
  1688 ;;		_FNC
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _check_circuit
  1694  0190                     _check_circuit:	
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _check_circuit: [wreg+status,2+status,0+pclath+cstack]
  1698                           ;check_circuit@send_data stored from wreg
  1699  0190  0020               	movlb	0	; select bank0
  1700  0191  00AF               	movwf	check_circuit@send_data
  1701                           
  1702                           ;INTERRUPT.h: 30: pass_count = fail_count = 0;
  1703  0192  01C8               	clrf	_fail_count
  1704  0193  01C9               	clrf	_fail_count+1
  1705  0194  01CA               	clrf	_pass_count
  1706  0195  01CB               	clrf	_pass_count+1
  1707                           
  1708                           ;INTERRUPT.h: 31: input_count = EEPROM_ReadByte(0);
  1709  0196  3000               	movlw	0
  1710  0197  3186  260A  3181   	fcall	_EEPROM_ReadByte
  1711  019A  0020               	movlb	0	; select bank0
  1712  019B  00A0               	movwf	??_check_circuit
  1713  019C  0820               	movf	??_check_circuit,w
  1714  019D  00CD               	movwf	_input_count
  1715                           
  1716                           ;INTERRUPT.h: 32: output_count = EEPROM_ReadByte(0);
  1717  019E  3000               	movlw	0
  1718  019F  3186  260A  3181   	fcall	_EEPROM_ReadByte
  1719  01A2  0020               	movlb	0	; select bank0
  1720  01A3  00A0               	movwf	??_check_circuit
  1721  01A4  0820               	movf	??_check_circuit,w
  1722  01A5  00CE               	movwf	_output_count
  1723                           
  1724                           ;INTERRUPT.h: 34: if(send_data)
  1725  01A6  082F               	movf	check_circuit@send_data,w
  1726  01A7  1903               	btfsc	3,2
  1727  01A8  29CC               	goto	i1l289
  1728                           
  1729                           ;INTERRUPT.h: 35: {
  1730                           ;INTERRUPT.h: 36: UART_byte_receive();
  1731  01A9  3186  2647  3181   	fcall	_UART_byte_receive
  1732                           
  1733                           ;INTERRUPT.h: 37: UART_byte_send(input_count);
  1734  01AC  0020               	movlb	0	; select bank0
  1735  01AD  084D               	movf	_input_count,w
  1736  01AE  3186  2623  3181   	fcall	_UART_byte_send
  1737                           
  1738                           ;INTERRUPT.h: 38: _delay((unsigned long)((1)*(4000000/4000.0)));
  1739  01B1  30F9               	movlw	249
  1740  01B2  0020               	movlb	0	; select bank0
  1741  01B3  00A0               	movwf	??_check_circuit
  1742  01B4                     u169_27:	
  1743  01B4  0000               	nop
  1744  01B5  0BA0               	decfsz	??_check_circuit,f
  1745  01B6  29B4               	goto	u169_27
  1746  01B7  3200               	nop2	;nop
  1747  01B8  0000               	nop
  1748                           
  1749                           ;INTERRUPT.h: 40: UART_byte_receive();
  1750  01B9  3186  2647  3181   	fcall	_UART_byte_receive
  1751                           
  1752                           ;INTERRUPT.h: 41: UART_byte_send(output_count);
  1753  01BC  0020               	movlb	0	; select bank0
  1754  01BD  084E               	movf	_output_count,w
  1755  01BE  3186  2623  3181   	fcall	_UART_byte_send
  1756                           
  1757                           ;INTERRUPT.h: 42: _delay((unsigned long)((1)*(4000000/4000.0)));
  1758  01C1  30F9               	movlw	249
  1759  01C2  0020               	movlb	0	; select bank0
  1760  01C3  00A0               	movwf	??_check_circuit
  1761  01C4                     u170_27:	
  1762  01C4  0000               	nop
  1763  01C5  0BA0               	decfsz	??_check_circuit,f
  1764  01C6  29C4               	goto	u170_27
  1765  01C7  3200               	nop2	;nop
  1766  01C8  0000               	nop
  1767                           
  1768                           ;INTERRUPT.h: 43: UART_byte_receive();
  1769  01C9  3186  2647  3181   	fcall	_UART_byte_receive
  1770  01CC                     i1l289:	
  1771                           
  1772                           ;INTERRUPT.h: 45: }
  1773                           ;INTERRUPT.h: 49: unsigned int configuration_count = (EEPROM_ReadByte(2) << 8) + EEPROM_
      +                          ReadByte(3);
  1774  01CC  3003               	movlw	3
  1775  01CD  3186  260A  3181   	fcall	_EEPROM_ReadByte
  1776  01D0  0020               	movlb	0	; select bank0
  1777  01D1  00A0               	movwf	??_check_circuit
  1778  01D2  01A1               	clrf	??_check_circuit+1
  1779  01D3  3002               	movlw	2
  1780  01D4  3186  260A  3181   	fcall	_EEPROM_ReadByte
  1781  01D7  0020               	movlb	0	; select bank0
  1782  01D8  00A2               	movwf	??_check_circuit+2
  1783  01D9  01A3               	clrf	??_check_circuit+3
  1784  01DA  0822               	movf	??_check_circuit+2,w
  1785  01DB  00A3               	movwf	??_check_circuit+3
  1786  01DC  01A2               	clrf	??_check_circuit+2
  1787  01DD  0820               	movf	??_check_circuit,w
  1788  01DE  0722               	addwf	??_check_circuit+2,w
  1789  01DF  00AA               	movwf	check_circuit@configuration_count
  1790  01E0  0821               	movf	??_check_circuit+1,w
  1791  01E1  3D23               	addwfc	??_check_circuit+3,w
  1792  01E2  00AB               	movwf	check_circuit@configuration_count+1
  1793                           
  1794                           ;INTERRUPT.h: 51: if(send_data)
  1795  01E3  082F               	movf	check_circuit@send_data,w
  1796  01E4  1903               	btfsc	3,2
  1797  01E5  2A05               	goto	i1l1803
  1798                           
  1799                           ;INTERRUPT.h: 52: {
  1800                           ;INTERRUPT.h: 53: UART_byte_send(configuration_count>> 8);
  1801  01E6  082B               	movf	check_circuit@configuration_count+1,w
  1802  01E7  3186  2623  3181   	fcall	_UART_byte_send
  1803                           
  1804                           ;INTERRUPT.h: 54: _delay((unsigned long)((1)*(4000000/4000.0)));
  1805  01EA  30F9               	movlw	249
  1806  01EB  0020               	movlb	0	; select bank0
  1807  01EC  00A0               	movwf	??_check_circuit
  1808  01ED                     u171_27:	
  1809  01ED  0000               	nop
  1810  01EE  0BA0               	decfsz	??_check_circuit,f
  1811  01EF  29ED               	goto	u171_27
  1812  01F0  3200               	nop2	;nop
  1813  01F1  0000               	nop
  1814                           
  1815                           ;INTERRUPT.h: 56: UART_byte_receive();
  1816  01F2  3186  2647  3181   	fcall	_UART_byte_receive
  1817                           
  1818                           ;INTERRUPT.h: 57: UART_byte_send(configuration_count & 0xff);
  1819  01F5  0020               	movlb	0	; select bank0
  1820  01F6  082A               	movf	check_circuit@configuration_count,w
  1821  01F7  3186  2623  3181   	fcall	_UART_byte_send
  1822                           
  1823                           ;INTERRUPT.h: 58: _delay((unsigned long)((1)*(4000000/4000.0)));
  1824  01FA  30F9               	movlw	249
  1825  01FB  0020               	movlb	0	; select bank0
  1826  01FC  00A0               	movwf	??_check_circuit
  1827  01FD                     u172_27:	
  1828  01FD  0000               	nop
  1829  01FE  0BA0               	decfsz	??_check_circuit,f
  1830  01FF  29FD               	goto	u172_27
  1831  0200  3200               	nop2	;nop
  1832  0201  0000               	nop
  1833                           
  1834                           ;INTERRUPT.h: 60: UART_byte_receive();
  1835  0202  3186  2647  3181   	fcall	_UART_byte_receive
  1836  0205                     i1l1803:	
  1837                           
  1838                           ;INTERRUPT.h: 61: }
  1839                           ;INTERRUPT.h: 63: byte output1 = 0, output2 = 0, correct1, correct2;
  1840  0205  0020               	movlb	0	; select bank0
  1841  0206  01B1               	clrf	check_circuit@output1
  1842  0207  01A9               	clrf	check_circuit@output2
  1843                           
  1844                           ;INTERRUPT.h: 66: byte result_byte = 0;
  1845  0208  01AC               	clrf	check_circuit@result_byte
  1846                           
  1847                           ;INTERRUPT.h: 67: for (unsigned int i = 0; i < configuration_count; i++)
  1848  0209  01B2               	clrf	check_circuit@i
  1849  020A  01B3               	clrf	check_circuit@i+1
  1850  020B                     i1l1955:	
  1851  020B  082B               	movf	check_circuit@configuration_count+1,w
  1852  020C  0233               	subwf	check_circuit@i+1,w
  1853  020D  1D03               	skipz
  1854  020E  2A11               	goto	u128_25
  1855  020F  082A               	movf	check_circuit@configuration_count,w
  1856  0210  0232               	subwf	check_circuit@i,w
  1857  0211                     u128_25:	
  1858  0211  1803               	btfsc	3,0
  1859  0212  0008               	return
  1860                           
  1861                           ;INTERRUPT.h: 68: {
  1862                           ;INTERRUPT.h: 70: PCF8574_value[0] = i & 0xff;
  1863  0213  0832               	movf	check_circuit@i,w
  1864  0214  00A0               	movwf	??_check_circuit
  1865  0215  0820               	movf	??_check_circuit,w
  1866  0216  00C0               	movwf	_PCF8574_value
  1867                           
  1868                           ;INTERRUPT.h: 71: PCF8574_value[1] = (i >> 8) & 0xff;
  1869  0217  0833               	movf	check_circuit@i+1,w
  1870  0218  00A0               	movwf	??_check_circuit
  1871  0219  0820               	movf	??_check_circuit,w
  1872  021A  00C1               	movwf	_PCF8574_value+1
  1873                           
  1874                           ;INTERRUPT.h: 73: PCF8574_load_data(0, PCF8574_value[0]);
  1875  021B  0840               	movf	_PCF8574_value,w
  1876  021C  00A0               	movwf	??_check_circuit
  1877  021D  0820               	movf	??_check_circuit,w
  1878  021E  00F2               	movwf	PCF8574_load_data@data
  1879  021F  3000               	movlw	0
  1880  0220  3185  25FA  3181   	fcall	_PCF8574_load_data
  1881                           
  1882                           ;INTERRUPT.h: 74: PCF8574_load_data(1, PCF8574_value[1]);
  1883  0223  0020               	movlb	0	; select bank0
  1884  0224  0841               	movf	_PCF8574_value+1,w
  1885  0225  00A0               	movwf	??_check_circuit
  1886  0226  0820               	movf	??_check_circuit,w
  1887  0227  00F2               	movwf	PCF8574_load_data@data
  1888  0228  3001               	movlw	1
  1889  0229  3185  25FA  3181   	fcall	_PCF8574_load_data
  1890                           
  1891                           ;INTERRUPT.h: 75: _delay((unsigned long)((25)*(4000000/4000.0)));
  1892  022C  3021               	movlw	33
  1893  022D  0020               	movlb	0	; select bank0
  1894  022E  00A1               	movwf	??_check_circuit+1
  1895  022F  3076               	movlw	118
  1896  0230  00A0               	movwf	??_check_circuit
  1897  0231                     u173_27:	
  1898  0231  0BA0               	decfsz	??_check_circuit,f
  1899  0232  2A31               	goto	u173_27
  1900  0233  0BA1               	decfsz	??_check_circuit+1,f
  1901  0234  2A31               	goto	u173_27
  1902  0235  0000               	nop
  1903                           
  1904                           ;INTERRUPT.h: 77: if (output_count > 8)
  1905  0236  3009               	movlw	9
  1906  0237  0020               	movlb	0	; select bank0
  1907  0238  024E               	subwf	_output_count,w
  1908  0239  1C03               	skipc
  1909  023A  2B3B               	goto	i1l1899
  1910                           
  1911                           ;INTERRUPT.h: 78: {
  1912                           ;INTERRUPT.h: 79: for(byte j=0; j < 5; j++)
  1913  023B  01A6               	clrf	check_circuit@j
  1914  023C  3005               	movlw	5
  1915  023D  0226               	subwf	check_circuit@j,w
  1916  023E  1803               	btfsc	3,0
  1917  023F  2A50               	goto	i1l1835
  1918  0240                     i1l1829:	
  1919                           
  1920                           ;INTERRUPT.h: 80: output1 = PCF8574_read(2);
  1921  0240  3002               	movlw	2
  1922  0241  3185  25D6  3181   	fcall	_PCF8574_read
  1923  0244  0020               	movlb	0	; select bank0
  1924  0245  00A0               	movwf	??_check_circuit
  1925  0246  0820               	movf	??_check_circuit,w
  1926  0247  00B1               	movwf	check_circuit@output1
  1927  0248  3001               	movlw	1
  1928  0249  00A0               	movwf	??_check_circuit
  1929  024A  0820               	movf	??_check_circuit,w
  1930  024B  07A6               	addwf	check_circuit@j,f
  1931  024C  3005               	movlw	5
  1932  024D  0226               	subwf	check_circuit@j,w
  1933  024E  1C03               	skipc
  1934  024F  2A40               	goto	i1l1829
  1935  0250                     i1l1835:	
  1936                           
  1937                           ;INTERRUPT.h: 81: for(byte j=0; j < 5; j++)
  1938  0250  01A7               	clrf	check_circuit@j_181
  1939  0251  3005               	movlw	5
  1940  0252  0227               	subwf	check_circuit@j_181,w
  1941  0253  1803               	btfsc	3,0
  1942  0254  2A65               	goto	i1l1847
  1943  0255                     i1l1841:	
  1944                           
  1945                           ;INTERRUPT.h: 82: output2 = PCF8574_read(3);
  1946  0255  3003               	movlw	3
  1947  0256  3185  25D6  3181   	fcall	_PCF8574_read
  1948  0259  0020               	movlb	0	; select bank0
  1949  025A  00A0               	movwf	??_check_circuit
  1950  025B  0820               	movf	??_check_circuit,w
  1951  025C  00A9               	movwf	check_circuit@output2
  1952  025D  3001               	movlw	1
  1953  025E  00A0               	movwf	??_check_circuit
  1954  025F  0820               	movf	??_check_circuit,w
  1955  0260  07A7               	addwf	check_circuit@j_181,f
  1956  0261  3005               	movlw	5
  1957  0262  0227               	subwf	check_circuit@j_181,w
  1958  0263  1C03               	skipc
  1959  0264  2A55               	goto	i1l1841
  1960  0265                     i1l1847:	
  1961                           
  1962                           ;INTERRUPT.h: 83: correct1 = EEPROMAT24C1024B_read_byte(i*2);
  1963  0265  3532               	lslf	check_circuit@i,w
  1964  0266  00F2               	movwf	EEPROMAT24C1024B_read_byte@address
  1965  0267  0D33               	rlf	check_circuit@i+1,w
  1966  0268  00F3               	movwf	EEPROMAT24C1024B_read_byte@address+1
  1967  0269  01F4               	clrf	EEPROMAT24C1024B_read_byte@address+2
  1968  026A  01F5               	clrf	EEPROMAT24C1024B_read_byte@address+3
  1969  026B  3183  23F0  3181   	fcall	_EEPROMAT24C1024B_read_byte
  1970  026E  0020               	movlb	0	; select bank0
  1971  026F  00A0               	movwf	??_check_circuit
  1972  0270  0820               	movf	??_check_circuit,w
  1973  0271  00B0               	movwf	check_circuit@correct1
  1974                           
  1975                           ;INTERRUPT.h: 84: correct2 = EEPROMAT24C1024B_read_byte(i*2+1);
  1976  0272  0833               	movf	check_circuit@i+1,w
  1977  0273  00A1               	movwf	??_check_circuit+1
  1978  0274  0832               	movf	check_circuit@i,w
  1979  0275  00A0               	movwf	??_check_circuit
  1980  0276  35A0               	lslf	??_check_circuit,f
  1981  0277  0DA1               	rlf	??_check_circuit+1,f
  1982  0278  0820               	movf	??_check_circuit,w
  1983  0279  3E01               	addlw	1
  1984  027A  00F2               	movwf	EEPROMAT24C1024B_read_byte@address
  1985  027B  3000               	movlw	0
  1986  027C  3D21               	addwfc	??_check_circuit+1,w
  1987  027D  00F3               	movwf	EEPROMAT24C1024B_read_byte@address+1
  1988  027E  01F4               	clrf	EEPROMAT24C1024B_read_byte@address+2
  1989  027F  01F5               	clrf	EEPROMAT24C1024B_read_byte@address+3
  1990  0280  3183  23F0  3181   	fcall	_EEPROMAT24C1024B_read_byte
  1991  0283  0020               	movlb	0	; select bank0
  1992  0284  00A2               	movwf	??_check_circuit+2
  1993  0285  0822               	movf	??_check_circuit+2,w
  1994  0286  00A5               	movwf	check_circuit@correct2
  1995                           
  1996                           ;INTERRUPT.h: 86: for(byte k = output_count - 8; k < 8; k++)
  1997  0287  084E               	movf	_output_count,w
  1998  0288  3EF8               	addlw	248
  1999  0289  00A0               	movwf	??_check_circuit
  2000  028A  0820               	movf	??_check_circuit,w
  2001  028B  00AD               	movwf	check_circuit@k
  2002  028C  3008               	movlw	8
  2003  028D  022D               	subwf	check_circuit@k,w
  2004  028E  1803               	btfsc	3,0
  2005  028F  2AA4               	goto	i1l1859
  2006  0290                     i1l1855:	
  2007                           
  2008                           ;INTERRUPT.h: 87: {
  2009                           ;INTERRUPT.h: 88: output2 &= ~(1 << k);
  2010  0290  3001               	movlw	1
  2011  0291  00A0               	movwf	??_check_circuit
  2012  0292  0A2D               	incf	check_circuit@k,w
  2013  0293  2A95               	goto	u112_24
  2014  0294                     u112_25:	
  2015  0294  35A0               	lslf	??_check_circuit,f
  2016  0295                     u112_24:	
  2017  0295  0B89               	decfsz	9,f
  2018  0296  2A94               	goto	u112_25
  2019  0297  0820               	movf	??_check_circuit,w
  2020  0298  3AFF               	xorlw	255
  2021  0299  00A1               	movwf	??_check_circuit+1
  2022  029A  0821               	movf	??_check_circuit+1,w
  2023  029B  05A9               	andwf	check_circuit@output2,f
  2024  029C  3001               	movlw	1
  2025  029D  00A0               	movwf	??_check_circuit
  2026  029E  0820               	movf	??_check_circuit,w
  2027  029F  07AD               	addwf	check_circuit@k,f
  2028  02A0  3008               	movlw	8
  2029  02A1  022D               	subwf	check_circuit@k,w
  2030  02A2  1C03               	skipc
  2031  02A3  2A90               	goto	i1l1855
  2032  02A4                     i1l1859:	
  2033                           
  2034                           ;INTERRUPT.h: 89: }
  2035                           ;INTERRUPT.h: 91: if(send_data)
  2036  02A4  082F               	movf	check_circuit@send_data,w
  2037  02A5  1903               	btfsc	3,2
  2038  02A6  2AE6               	goto	i1l1879
  2039                           
  2040                           ;INTERRUPT.h: 92: {
  2041                           ;INTERRUPT.h: 93: UART_byte_send(output1);
  2042  02A7  0831               	movf	check_circuit@output1,w
  2043  02A8  3186  2623  3181   	fcall	_UART_byte_send
  2044                           
  2045                           ;INTERRUPT.h: 94: _delay((unsigned long)((1)*(4000000/4000.0)));
  2046  02AB  30F9               	movlw	249
  2047  02AC  0020               	movlb	0	; select bank0
  2048  02AD  00A0               	movwf	??_check_circuit
  2049  02AE                     u174_27:	
  2050  02AE  0000               	nop
  2051  02AF  0BA0               	decfsz	??_check_circuit,f
  2052  02B0  2AAE               	goto	u174_27
  2053  02B1  3200               	nop2	;nop
  2054  02B2  0000               	nop
  2055                           
  2056                           ;INTERRUPT.h: 95: UART_byte_receive();
  2057  02B3  3186  2647  3181   	fcall	_UART_byte_receive
  2058                           
  2059                           ;INTERRUPT.h: 96: UART_byte_send(correct1);
  2060  02B6  0020               	movlb	0	; select bank0
  2061  02B7  0830               	movf	check_circuit@correct1,w
  2062  02B8  3186  2623  3181   	fcall	_UART_byte_send
  2063                           
  2064                           ;INTERRUPT.h: 97: _delay((unsigned long)((1)*(4000000/4000.0)));
  2065  02BB  30F9               	movlw	249
  2066  02BC  0020               	movlb	0	; select bank0
  2067  02BD  00A0               	movwf	??_check_circuit
  2068  02BE                     u175_27:	
  2069  02BE  0000               	nop
  2070  02BF  0BA0               	decfsz	??_check_circuit,f
  2071  02C0  2ABE               	goto	u175_27
  2072  02C1  3200               	nop2	;nop
  2073  02C2  0000               	nop
  2074                           
  2075                           ;INTERRUPT.h: 98: UART_byte_receive();
  2076  02C3  3186  2647  3181   	fcall	_UART_byte_receive
  2077                           
  2078                           ;INTERRUPT.h: 99: UART_byte_send(output2);
  2079  02C6  0020               	movlb	0	; select bank0
  2080  02C7  0829               	movf	check_circuit@output2,w
  2081  02C8  3186  2623  3181   	fcall	_UART_byte_send
  2082                           
  2083                           ;INTERRUPT.h: 100: _delay((unsigned long)((1)*(4000000/4000.0)));
  2084  02CB  30F9               	movlw	249
  2085  02CC  0020               	movlb	0	; select bank0
  2086  02CD  00A0               	movwf	??_check_circuit
  2087  02CE                     u176_27:	
  2088  02CE  0000               	nop
  2089  02CF  0BA0               	decfsz	??_check_circuit,f
  2090  02D0  2ACE               	goto	u176_27
  2091  02D1  3200               	nop2	;nop
  2092  02D2  0000               	nop
  2093                           
  2094                           ;INTERRUPT.h: 101: UART_byte_receive();
  2095  02D3  3186  2647  3181   	fcall	_UART_byte_receive
  2096                           
  2097                           ;INTERRUPT.h: 102: UART_byte_send(correct2);
  2098  02D6  0020               	movlb	0	; select bank0
  2099  02D7  0825               	movf	check_circuit@correct2,w
  2100  02D8  3186  2623  3181   	fcall	_UART_byte_send
  2101                           
  2102                           ;INTERRUPT.h: 103: _delay((unsigned long)((1)*(4000000/4000.0)));
  2103  02DB  30F9               	movlw	249
  2104  02DC  0020               	movlb	0	; select bank0
  2105  02DD  00A0               	movwf	??_check_circuit
  2106  02DE                     u177_27:	
  2107  02DE  0000               	nop
  2108  02DF  0BA0               	decfsz	??_check_circuit,f
  2109  02E0  2ADE               	goto	u177_27
  2110  02E1  3200               	nop2	;nop
  2111  02E2  0000               	nop
  2112                           
  2113                           ;INTERRUPT.h: 104: UART_byte_receive();
  2114  02E3  3186  2647  3181   	fcall	_UART_byte_receive
  2115  02E6                     i1l1879:	
  2116                           
  2117                           ;INTERRUPT.h: 107: }
  2118                           ;INTERRUPT.h: 111: if(output1 == correct1 && output2 == correct2){ pass_count ++;
  2119  02E6  0020               	movlb	0	; select bank0
  2120  02E7  0831               	movf	check_circuit@output1,w
  2121  02E8  0630               	xorwf	check_circuit@correct1,w
  2122  02E9  1D03               	skipz
  2123  02EA  2B04               	goto	i1l1887
  2124  02EB  0829               	movf	check_circuit@output2,w
  2125  02EC  0625               	xorwf	check_circuit@correct2,w
  2126  02ED  1D03               	skipz
  2127  02EE  2B04               	goto	i1l1887
  2128  02EF  3001               	movlw	1
  2129  02F0  07CA               	addwf	_pass_count,f
  2130  02F1  3000               	movlw	0
  2131  02F2  3DCB               	addwfc	_pass_count+1,f
  2132                           
  2133                           ;INTERRUPT.h: 112: result_byte |= 1 << (7-i%8);
  2134  02F3  3001               	movlw	1
  2135  02F4  00A0               	movwf	??_check_circuit
  2136  02F5  0832               	movf	check_circuit@i,w
  2137  02F6  3907               	andlw	7
  2138  02F7  3AFF               	xorlw	255
  2139  02F8  3E01               	addlw	1
  2140  02F9  3E07               	addlw	7
  2141  02FA  0A89               	incf	9,f
  2142  02FB  2AFD               	goto	u117_24
  2143  02FC                     u117_25:	
  2144  02FC  35A0               	lslf	??_check_circuit,f
  2145  02FD                     u117_24:	
  2146  02FD  0B89               	decfsz	9,f
  2147  02FE  2AFC               	goto	u117_25
  2148  02FF  0820               	movf	??_check_circuit,w
  2149  0300  00A1               	movwf	??_check_circuit+1
  2150  0301  0821               	movf	??_check_circuit+1,w
  2151  0302  04AC               	iorwf	check_circuit@result_byte,f
  2152                           
  2153                           ;INTERRUPT.h: 113: }
  2154  0303  2B08               	goto	i1l1889
  2155  0304                     i1l1887:	
  2156                           
  2157                           ;INTERRUPT.h: 114: else{ fail_count ++;
  2158  0304  3001               	movlw	1
  2159  0305  07C8               	addwf	_fail_count,f
  2160  0306  3000               	movlw	0
  2161  0307  3DC9               	addwfc	_fail_count+1,f
  2162  0308                     i1l1889:	
  2163                           
  2164                           ;INTERRUPT.h: 116: }
  2165                           ;INTERRUPT.h: 119: if (i % 8 == 7)
  2166  0308  3007               	movlw	7
  2167  0309  0532               	andwf	check_circuit@i,w
  2168  030A  00A0               	movwf	??_check_circuit
  2169  030B  3000               	movlw	0
  2170  030C  0533               	andwf	check_circuit@i+1,w
  2171  030D  00A1               	movwf	??_check_circuit+1
  2172  030E  3007               	movlw	7
  2173  030F  0620               	xorwf	??_check_circuit,w
  2174  0310  0421               	iorwf	??_check_circuit+1,w
  2175  0311  1D03               	btfss	3,2
  2176  0312  2BEA               	goto	i1l1953
  2177                           
  2178                           ;INTERRUPT.h: 120: {
  2179                           ;INTERRUPT.h: 121: EEPROM24C64_start_write_page((i+1)/8);
  2180  0313  0832               	movf	check_circuit@i,w
  2181  0314  3E01               	addlw	1
  2182  0315  00A0               	movwf	??_check_circuit
  2183  0316  3000               	movlw	0
  2184  0317  3D33               	addwfc	check_circuit@i+1,w
  2185  0318  00A1               	movwf	??_check_circuit+1
  2186  0319  36A1               	lsrf	??_check_circuit+1,f
  2187  031A  0CA0               	rrf	??_check_circuit,f
  2188  031B  36A1               	lsrf	??_check_circuit+1,f
  2189  031C  0CA0               	rrf	??_check_circuit,f
  2190  031D  36A1               	lsrf	??_check_circuit+1,f
  2191  031E  0CA0               	rrf	??_check_circuit,f
  2192  031F  0820               	movf	??_check_circuit,w
  2193  0320  00F2               	movwf	EEPROM24C64_start_write_page@address
  2194  0321  0821               	movf	??_check_circuit+1,w
  2195  0322  00F3               	movwf	EEPROM24C64_start_write_page@address+1
  2196  0323  3185  25C2  3181   	fcall	_EEPROM24C64_start_write_page
  2197                           
  2198                           ;INTERRUPT.h: 123: EEPROM24C64_write_page(result_byte);
  2199  0326  0020               	movlb	0	; select bank0
  2200  0327  082C               	movf	check_circuit@result_byte,w
  2201  0328  3184  24EA  3181   	fcall	_EEPROM24C64_write_page
  2202                           
  2203                           ;INTERRUPT.h: 124: result_byte = 0;
  2204  032B  0020               	movlb	0	; select bank0
  2205  032C  01AC               	clrf	check_circuit@result_byte
  2206                           
  2207                           ;INTERRUPT.h: 126: EEPROM24C64_stop_write_page();
  2208  032D  3186  264D  3181   	fcall	_EEPROM24C64_stop_write_page
  2209                           
  2210                           ;INTERRUPT.h: 127: _delay((unsigned long)((6)*(4000000/4000.0)));
  2211  0330  3008               	movlw	8
  2212  0331  0020               	movlb	0	; select bank0
  2213  0332  00A1               	movwf	??_check_circuit+1
  2214  0333  30C9               	movlw	201
  2215  0334  00A0               	movwf	??_check_circuit
  2216  0335                     u178_27:	
  2217  0335  0BA0               	decfsz	??_check_circuit,f
  2218  0336  2B35               	goto	u178_27
  2219  0337  0BA1               	decfsz	??_check_circuit+1,f
  2220  0338  2B35               	goto	u178_27
  2221  0339  3200               	nop2
  2222                           
  2223                           ;INTERRUPT.h: 129: }
  2224                           ;INTERRUPT.h: 131: }
  2225  033A  2BEA               	goto	i1l1953
  2226  033B                     i1l1899:	
  2227                           
  2228                           ;INTERRUPT.h: 132: else
  2229                           ;INTERRUPT.h: 133: {
  2230                           ;INTERRUPT.h: 134: for(byte j=0; j < 5; j++)
  2231  033B  0020               	movlb	0	; select bank0
  2232  033C  01A8               	clrf	check_circuit@j_187
  2233  033D  3005               	movlw	5
  2234  033E  0228               	subwf	check_circuit@j_187,w
  2235  033F  1803               	btfsc	3,0
  2236  0340  2B51               	goto	i1l1911
  2237  0341                     i1l1905:	
  2238                           
  2239                           ;INTERRUPT.h: 135: output1 = PCF8574_read(2);
  2240  0341  3002               	movlw	2
  2241  0342  3185  25D6  3181   	fcall	_PCF8574_read
  2242  0345  0020               	movlb	0	; select bank0
  2243  0346  00A0               	movwf	??_check_circuit
  2244  0347  0820               	movf	??_check_circuit,w
  2245  0348  00B1               	movwf	check_circuit@output1
  2246  0349  3001               	movlw	1
  2247  034A  00A0               	movwf	??_check_circuit
  2248  034B  0820               	movf	??_check_circuit,w
  2249  034C  07A8               	addwf	check_circuit@j_187,f
  2250  034D  3005               	movlw	5
  2251  034E  0228               	subwf	check_circuit@j_187,w
  2252  034F  1C03               	skipc
  2253  0350  2B41               	goto	i1l1905
  2254  0351                     i1l1911:	
  2255                           
  2256                           ;INTERRUPT.h: 137: correct1 = EEPROMAT24C1024B_read_byte(i);
  2257  0351  0832               	movf	check_circuit@i,w
  2258  0352  00F2               	movwf	EEPROMAT24C1024B_read_byte@address
  2259  0353  0833               	movf	check_circuit@i+1,w
  2260  0354  00F3               	movwf	EEPROMAT24C1024B_read_byte@address+1
  2261  0355  01F4               	clrf	EEPROMAT24C1024B_read_byte@address+2
  2262  0356  01F5               	clrf	EEPROMAT24C1024B_read_byte@address+3
  2263  0357  3183  23F0  3181   	fcall	_EEPROMAT24C1024B_read_byte
  2264  035A  0020               	movlb	0	; select bank0
  2265  035B  00A0               	movwf	??_check_circuit
  2266  035C  0820               	movf	??_check_circuit,w
  2267  035D  00B0               	movwf	check_circuit@correct1
  2268                           
  2269                           ;INTERRUPT.h: 140: for(byte k = output_count; k < 8; k++)
  2270  035E  084E               	movf	_output_count,w
  2271  035F  00A0               	movwf	??_check_circuit
  2272  0360  0820               	movf	??_check_circuit,w
  2273  0361  00AE               	movwf	check_circuit@k_188
  2274  0362  3008               	movlw	8
  2275  0363  022E               	subwf	check_circuit@k_188,w
  2276  0364  1803               	btfsc	3,0
  2277  0365  2B7A               	goto	i1l1923
  2278  0366                     i1l1919:	
  2279                           
  2280                           ;INTERRUPT.h: 141: {
  2281                           ;INTERRUPT.h: 142: output1 &= ~(1 << k);
  2282  0366  3001               	movlw	1
  2283  0367  00A0               	movwf	??_check_circuit
  2284  0368  0A2E               	incf	check_circuit@k_188,w
  2285  0369  2B6B               	goto	u122_24
  2286  036A                     u122_25:	
  2287  036A  35A0               	lslf	??_check_circuit,f
  2288  036B                     u122_24:	
  2289  036B  0B89               	decfsz	9,f
  2290  036C  2B6A               	goto	u122_25
  2291  036D  0820               	movf	??_check_circuit,w
  2292  036E  3AFF               	xorlw	255
  2293  036F  00A1               	movwf	??_check_circuit+1
  2294  0370  0821               	movf	??_check_circuit+1,w
  2295  0371  05B1               	andwf	check_circuit@output1,f
  2296  0372  3001               	movlw	1
  2297  0373  00A0               	movwf	??_check_circuit
  2298  0374  0820               	movf	??_check_circuit,w
  2299  0375  07AE               	addwf	check_circuit@k_188,f
  2300  0376  3008               	movlw	8
  2301  0377  022E               	subwf	check_circuit@k_188,w
  2302  0378  1C03               	skipc
  2303  0379  2B66               	goto	i1l1919
  2304  037A                     i1l1923:	
  2305                           
  2306                           ;INTERRUPT.h: 143: }
  2307                           ;INTERRUPT.h: 145: if(send_data)
  2308  037A  082F               	movf	check_circuit@send_data,w
  2309  037B  1903               	btfsc	3,2
  2310  037C  2B9C               	goto	i1l1935
  2311                           
  2312                           ;INTERRUPT.h: 146: {
  2313                           ;INTERRUPT.h: 147: UART_byte_send(output1);
  2314  037D  0831               	movf	check_circuit@output1,w
  2315  037E  3186  2623  3181   	fcall	_UART_byte_send
  2316                           
  2317                           ;INTERRUPT.h: 148: _delay((unsigned long)((1)*(4000000/4000.0)));
  2318  0381  30F9               	movlw	249
  2319  0382  0020               	movlb	0	; select bank0
  2320  0383  00A0               	movwf	??_check_circuit
  2321  0384                     u179_27:	
  2322  0384  0000               	nop
  2323  0385  0BA0               	decfsz	??_check_circuit,f
  2324  0386  2B84               	goto	u179_27
  2325  0387  3200               	nop2	;nop
  2326  0388  0000               	nop
  2327                           
  2328                           ;INTERRUPT.h: 149: UART_byte_receive();
  2329  0389  3186  2647  3181   	fcall	_UART_byte_receive
  2330                           
  2331                           ;INTERRUPT.h: 150: UART_byte_send(correct1);
  2332  038C  0020               	movlb	0	; select bank0
  2333  038D  0830               	movf	check_circuit@correct1,w
  2334  038E  3186  2623  3181   	fcall	_UART_byte_send
  2335                           
  2336                           ;INTERRUPT.h: 151: _delay((unsigned long)((1)*(4000000/4000.0)));
  2337  0391  30F9               	movlw	249
  2338  0392  0020               	movlb	0	; select bank0
  2339  0393  00A0               	movwf	??_check_circuit
  2340  0394                     u180_27:	
  2341  0394  0000               	nop
  2342  0395  0BA0               	decfsz	??_check_circuit,f
  2343  0396  2B94               	goto	u180_27
  2344  0397  3200               	nop2	;nop
  2345  0398  0000               	nop
  2346                           
  2347                           ;INTERRUPT.h: 152: UART_byte_receive();
  2348  0399  3186  2647  3181   	fcall	_UART_byte_receive
  2349  039C                     i1l1935:	
  2350                           
  2351                           ;INTERRUPT.h: 155: }
  2352                           ;INTERRUPT.h: 158: if(output1 == correct1) {pass_count ++;
  2353  039C  0020               	movlb	0	; select bank0
  2354  039D  0831               	movf	check_circuit@output1,w
  2355  039E  0630               	xorwf	check_circuit@correct1,w
  2356  039F  1D03               	skipz
  2357  03A0  2BB6               	goto	i1l1941
  2358  03A1  3001               	movlw	1
  2359  03A2  07CA               	addwf	_pass_count,f
  2360  03A3  3000               	movlw	0
  2361  03A4  3DCB               	addwfc	_pass_count+1,f
  2362                           
  2363                           ;INTERRUPT.h: 159: result_byte |= 1 << (7-i%8);
  2364  03A5  3001               	movlw	1
  2365  03A6  00A0               	movwf	??_check_circuit
  2366  03A7  0832               	movf	check_circuit@i,w
  2367  03A8  3907               	andlw	7
  2368  03A9  3AFF               	xorlw	255
  2369  03AA  3E01               	addlw	1
  2370  03AB  3E07               	addlw	7
  2371  03AC  0A89               	incf	9,f
  2372  03AD  2BAF               	goto	u126_24
  2373  03AE                     u126_25:	
  2374  03AE  35A0               	lslf	??_check_circuit,f
  2375  03AF                     u126_24:	
  2376  03AF  0B89               	decfsz	9,f
  2377  03B0  2BAE               	goto	u126_25
  2378  03B1  0820               	movf	??_check_circuit,w
  2379  03B2  00A1               	movwf	??_check_circuit+1
  2380  03B3  0821               	movf	??_check_circuit+1,w
  2381  03B4  04AC               	iorwf	check_circuit@result_byte,f
  2382                           
  2383                           ;INTERRUPT.h: 171: }
  2384  03B5  2BBA               	goto	i1l1943
  2385  03B6                     i1l1941:	
  2386                           
  2387                           ;INTERRUPT.h: 172: else {fail_count ++;
  2388  03B6  3001               	movlw	1
  2389  03B7  07C8               	addwf	_fail_count,f
  2390  03B8  3000               	movlw	0
  2391  03B9  3DC9               	addwfc	_fail_count+1,f
  2392  03BA                     i1l1943:	
  2393                           
  2394                           ;INTERRUPT.h: 181: }
  2395                           ;INTERRUPT.h: 183: if (i % 8 == 7)
  2396  03BA  3007               	movlw	7
  2397  03BB  0532               	andwf	check_circuit@i,w
  2398  03BC  00A0               	movwf	??_check_circuit
  2399  03BD  3000               	movlw	0
  2400  03BE  0533               	andwf	check_circuit@i+1,w
  2401  03BF  00A1               	movwf	??_check_circuit+1
  2402  03C0  3007               	movlw	7
  2403  03C1  0620               	xorwf	??_check_circuit,w
  2404  03C2  0421               	iorwf	??_check_circuit+1,w
  2405  03C3  1D03               	btfss	3,2
  2406  03C4  2BEA               	goto	i1l1953
  2407                           
  2408                           ;INTERRUPT.h: 184: {
  2409                           ;INTERRUPT.h: 185: EEPROM24C64_start_write_page((i)/8);
  2410  03C5  0833               	movf	check_circuit@i+1,w
  2411  03C6  00A1               	movwf	??_check_circuit+1
  2412  03C7  0832               	movf	check_circuit@i,w
  2413  03C8  00A0               	movwf	??_check_circuit
  2414  03C9  36A1               	lsrf	??_check_circuit+1,f
  2415  03CA  0CA0               	rrf	??_check_circuit,f
  2416  03CB  36A1               	lsrf	??_check_circuit+1,f
  2417  03CC  0CA0               	rrf	??_check_circuit,f
  2418  03CD  36A1               	lsrf	??_check_circuit+1,f
  2419  03CE  0CA0               	rrf	??_check_circuit,f
  2420  03CF  0820               	movf	??_check_circuit,w
  2421  03D0  00F2               	movwf	EEPROM24C64_start_write_page@address
  2422  03D1  0821               	movf	??_check_circuit+1,w
  2423  03D2  00F3               	movwf	EEPROM24C64_start_write_page@address+1
  2424  03D3  3185  25C2  3181   	fcall	_EEPROM24C64_start_write_page
  2425                           
  2426                           ;INTERRUPT.h: 187: EEPROM24C64_write_page(result_byte);
  2427  03D6  0020               	movlb	0	; select bank0
  2428  03D7  082C               	movf	check_circuit@result_byte,w
  2429  03D8  3184  24EA  3181   	fcall	_EEPROM24C64_write_page
  2430                           
  2431                           ;INTERRUPT.h: 188: result_byte = 0;
  2432  03DB  0020               	movlb	0	; select bank0
  2433  03DC  01AC               	clrf	check_circuit@result_byte
  2434                           
  2435                           ;INTERRUPT.h: 190: EEPROM24C64_stop_write_page();
  2436  03DD  3186  264D  3181   	fcall	_EEPROM24C64_stop_write_page
  2437                           
  2438                           ;INTERRUPT.h: 191: _delay((unsigned long)((6)*(4000000/4000.0)));
  2439  03E0  3008               	movlw	8
  2440  03E1  0020               	movlb	0	; select bank0
  2441  03E2  00A1               	movwf	??_check_circuit+1
  2442  03E3  30C9               	movlw	201
  2443  03E4  00A0               	movwf	??_check_circuit
  2444  03E5                     u181_27:	
  2445  03E5  0BA0               	decfsz	??_check_circuit,f
  2446  03E6  2BE5               	goto	u181_27
  2447  03E7  0BA1               	decfsz	??_check_circuit+1,f
  2448  03E8  2BE5               	goto	u181_27
  2449  03E9  3200               	nop2
  2450  03EA                     i1l1953:	
  2451  03EA  3001               	movlw	1
  2452  03EB  0020               	movlb	0	; select bank0
  2453  03EC  07B2               	addwf	check_circuit@i,f
  2454  03ED  3000               	movlw	0
  2455  03EE  3DB3               	addwfc	check_circuit@i+1,f
  2456  03EF  2A0B               	goto	i1l1955
  2457  03F0                     __end_of_check_circuit:	
  2458                           
  2459                           	psect	text8
  2460  0623                     __ptext8:	
  2461 ;; *************** function _UART_byte_send *****************
  2462 ;; Defined at:
  2463 ;;		line 17 in file "UART.h"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  data            1    wreg     unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  data            1    0[COMMON] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2477 ;;      Params:         0       0       0       0
  2478 ;;      Locals:         1       0       0       0
  2479 ;;      Temps:          0       0       0       0
  2480 ;;      Totals:         1       0       0       0
  2481 ;;Total ram usage:        1 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_check_circuit
  2487 ;;		_FNC
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _UART_byte_send
  2493  0623                     _UART_byte_send:	
  2494                           
  2495                           ;incstack = 0
  2496                           ; Regs used in _UART_byte_send: [wreg]
  2497                           ;UART_byte_send@data stored from wreg
  2498  0623  00F0               	movwf	UART_byte_send@data
  2499  0624                     i1l161:	
  2500                           ;UART.h: 19: while ( !TXIF ) ;
  2501                           
  2502  0624  0020               	movlb	0	; select bank0
  2503  0625  1E11               	btfss	17,4	;volatile
  2504  0626  2E24               	goto	i1l161
  2505                           
  2506                           ;UART.h: 20: TXREG = data ;
  2507  0627  0870               	movf	UART_byte_send@data,w
  2508  0628  0023               	movlb	3	; select bank3
  2509  0629  009A               	movwf	26	;volatile
  2510  062A  0008               	return
  2511  062B                     __end_of_UART_byte_send:	
  2512                           
  2513                           	psect	text9
  2514  0647                     __ptext9:	
  2515 ;; *************** function _UART_byte_receive *****************
  2516 ;; Defined at:
  2517 ;;		line 25 in file "UART.h"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      unsigned char 
  2524 ;; Registers used:
  2525 ;;		wreg
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2531 ;;      Params:         0       0       0       0
  2532 ;;      Locals:         0       0       0       0
  2533 ;;      Temps:          0       0       0       0
  2534 ;;      Totals:         0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_check_circuit
  2541 ;;		_FNC
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _UART_byte_receive
  2547  0647                     _UART_byte_receive:	
  2548  0647                     i1l167:	
  2549                           ;UART.h: 27: while ( !RCIF ) ;
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _UART_byte_receive: [wreg]
  2553                           
  2554  0647  0020               	movlb	0	; select bank0
  2555  0648  1E91               	btfss	17,5	;volatile
  2556  0649  2E47               	goto	i1l167
  2557                           
  2558                           ;UART.h: 28: return RCREG ;
  2559  064A  0023               	movlb	3	; select bank3
  2560  064B  0819               	movf	25,w	;volatile
  2561  064C  0008               	return
  2562  064D                     __end_of_UART_byte_receive:	
  2563                           
  2564                           	psect	text10
  2565  05D6                     __ptext10:	
  2566 ;; *************** function _PCF8574_read *****************
  2567 ;; Defined at:
  2568 ;;		line 37 in file "PCF8574.h"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  id              1    wreg     unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  id              1    3[COMMON] unsigned char 
  2573 ;;  received        1    4[COMMON] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      unsigned char 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2583 ;;      Params:         0       0       0       0
  2584 ;;      Locals:         2       0       0       0
  2585 ;;      Temps:          1       0       0       0
  2586 ;;      Totals:         3       0       0       0
  2587 ;;Total ram usage:        3 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    1
  2590 ;; This function calls:
  2591 ;;		_I2C_Start
  2592 ;;		_I2C_Stop
  2593 ;;		_I2C_data_receive
  2594 ;;		_I2C_data_send
  2595 ;; This function is called by:
  2596 ;;		_check_circuit
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _PCF8574_read
  2602  05D6                     _PCF8574_read:	
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _PCF8574_read: [wreg+status,2+status,0+pclath+cstack]
  2606                           ;PCF8574_read@id stored from wreg
  2607  05D6  00F3               	movwf	PCF8574_read@id
  2608                           
  2609                           ;PCF8574.h: 40: byte received;
  2610                           ;PCF8574.h: 41: I2C_Start();
  2611  05D7  3186  263A  3185   	fcall	_I2C_Start
  2612                           
  2613                           ;PCF8574.h: 42: I2C_data_send(0x40+(id <<1)+1);
  2614  05DA  3573               	lslf	PCF8574_read@id,w
  2615  05DB  3E41               	addlw	65
  2616  05DC  3185  2543  3185   	fcall	_I2C_data_send
  2617                           
  2618                           ;PCF8574.h: 44: received = I2C_data_receive();
  2619  05DF  3186  2618  3185   	fcall	_I2C_data_receive
  2620  05E2  00F2               	movwf	??_PCF8574_read
  2621  05E3  0872               	movf	??_PCF8574_read,w
  2622  05E4  00F4               	movwf	PCF8574_read@received
  2623                           
  2624                           ;PCF8574.h: 46: I2C_Stop();
  2625  05E5  3186  2633         	fcall	_I2C_Stop
  2626                           
  2627                           ;PCF8574.h: 47: return received;
  2628  05E7  0874               	movf	PCF8574_read@received,w
  2629  05E8  0008               	return
  2630  05E9                     __end_of_PCF8574_read:	
  2631                           
  2632                           	psect	text11
  2633  05FA                     __ptext11:	
  2634 ;; *************** function _PCF8574_load_data *****************
  2635 ;; Defined at:
  2636 ;;		line 19 in file "PCF8574.h"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  id              1    wreg     unsigned char 
  2639 ;;  data            1    2[COMMON] unsigned char 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  id              1    3[COMMON] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2651 ;;      Params:         1       0       0       0
  2652 ;;      Locals:         1       0       0       0
  2653 ;;      Temps:          0       0       0       0
  2654 ;;      Totals:         2       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    1
  2658 ;; This function calls:
  2659 ;;		_I2C_Start
  2660 ;;		_I2C_Stop
  2661 ;;		_I2C_data_send
  2662 ;; This function is called by:
  2663 ;;		_check_circuit
  2664 ;;		_PCF8574_set_pin
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _PCF8574_load_data
  2670  05FA                     _PCF8574_load_data:	
  2671                           
  2672                           ;incstack = 0
  2673                           ; Regs used in _PCF8574_load_data: [wreg+status,2+status,0+pclath+cstack]
  2674                           ;PCF8574_load_data@id stored from wreg
  2675  05FA  00F3               	movwf	PCF8574_load_data@id
  2676                           
  2677                           ;PCF8574.h: 21: I2C_Start();
  2678  05FB  3186  263A  3185   	fcall	_I2C_Start
  2679                           
  2680                           ;PCF8574.h: 22: I2C_data_send(0x40+(id <<1));
  2681  05FE  3573               	lslf	PCF8574_load_data@id,w
  2682  05FF  3E40               	addlw	64
  2683  0600  3185  2543  3185   	fcall	_I2C_data_send
  2684                           
  2685                           ;PCF8574.h: 24: I2C_data_send(data);
  2686  0603  0872               	movf	PCF8574_load_data@data,w
  2687  0604  3185  2543  3185   	fcall	_I2C_data_send
  2688                           
  2689                           ;PCF8574.h: 26: I2C_Stop();
  2690  0607  3186  2633         	fcall	_I2C_Stop
  2691  0609  0008               	return
  2692  060A                     __end_of_PCF8574_load_data:	
  2693                           
  2694                           	psect	text12
  2695  060A                     __ptext12:	
  2696 ;; *************** function _EEPROM_ReadByte *****************
  2697 ;; Defined at:
  2698 ;;		line 37 in file "EEPROM.h"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  address         1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  address         1    0[COMMON] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      unsigned char 
  2705 ;; Registers used:
  2706 ;;		wreg
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2712 ;;      Params:         0       0       0       0
  2713 ;;      Locals:         1       0       0       0
  2714 ;;      Temps:          0       0       0       0
  2715 ;;      Totals:         1       0       0       0
  2716 ;;Total ram usage:        1 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_check_circuit
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _EEPROM_ReadByte
  2727  060A                     _EEPROM_ReadByte:	
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _EEPROM_ReadByte: [wreg]
  2731                           ;EEPROM_ReadByte@address stored from wreg
  2732  060A  00F0               	movwf	EEPROM_ReadByte@address
  2733                           
  2734                           ;EEPROM.h: 39: EEPGD = 0;
  2735  060B  0023               	movlb	3	; select bank3
  2736  060C  1395               	bcf	21,7	;volsfr
  2737                           
  2738                           ;EEPROM.h: 40: CFGS = 0;
  2739  060D  1315               	bcf	21,6	;volsfr
  2740                           
  2741                           ;EEPROM.h: 41: EEADRL = address;
  2742  060E  0870               	movf	EEPROM_ReadByte@address,w
  2743  060F  0091               	movwf	17	;volatile
  2744                           
  2745                           ;EEPROM.h: 42: RD = 1;
  2746  0610  1415               	bsf	21,0	;volsfr
  2747  0611                     i1l245:	
  2748                           ;EEPROM.h: 43: while(RD);
  2749                           
  2750  0611  1815               	btfsc	21,0	;volsfr
  2751  0612  2E11               	goto	i1l245
  2752                           
  2753                           ;EEPROM.h: 44: EEIF = 0;
  2754  0613  0020               	movlb	0	; select bank0
  2755  0614  1212               	bcf	18,4	;volatile
  2756                           
  2757                           ;EEPROM.h: 45: return EEDATL;
  2758  0615  0023               	movlb	3	; select bank3
  2759  0616  0813               	movf	19,w	;volatile
  2760  0617  0008               	return
  2761  0618                     __end_of_EEPROM_ReadByte:	
  2762                           
  2763                           	psect	text13
  2764  03F0                     __ptext13:	
  2765 ;; *************** function _EEPROMAT24C1024B_read_byte *****************
  2766 ;; Defined at:
  2767 ;;		line 51 in file "EEPROMAT24C1024B.h"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  address         4    2[COMMON] unsigned long 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  data            1   10[COMMON] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      unsigned char 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0, pclath, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2781 ;;      Params:         4       0       0       0
  2782 ;;      Locals:         1       0       0       0
  2783 ;;      Temps:          4       0       0       0
  2784 ;;      Totals:         9       0       0       0
  2785 ;;Total ram usage:        9 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    1
  2788 ;; This function calls:
  2789 ;;		_I2C_SendNACK
  2790 ;;		_I2C_Start
  2791 ;;		_I2C_Stop
  2792 ;;		_I2C_data_receive
  2793 ;;		_I2C_data_send
  2794 ;; This function is called by:
  2795 ;;		_check_circuit
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _EEPROMAT24C1024B_read_byte
  2801  03F0                     _EEPROMAT24C1024B_read_byte:	
  2802                           
  2803                           ;EEPROMAT24C1024B.h: 53: I2C_Start();
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _EEPROMAT24C1024B_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2807  03F0  3186  263A  3183   	fcall	_I2C_Start
  2808                           
  2809                           ;EEPROMAT24C1024B.h: 55: I2C_data_send(0b10100000+ (((address >> 16)&0x1) << 1) );
  2810  03F3  0872               	movf	EEPROMAT24C1024B_read_byte@address,w
  2811  03F4  00F6               	movwf	??_EEPROMAT24C1024B_read_byte
  2812  03F5  0873               	movf	EEPROMAT24C1024B_read_byte@address+1,w
  2813  03F6  00F7               	movwf	??_EEPROMAT24C1024B_read_byte+1
  2814  03F7  0874               	movf	EEPROMAT24C1024B_read_byte@address+2,w
  2815  03F8  00F8               	movwf	??_EEPROMAT24C1024B_read_byte+2
  2816  03F9  0875               	movf	EEPROMAT24C1024B_read_byte@address+3,w
  2817  03FA  00F9               	movwf	??_EEPROMAT24C1024B_read_byte+3
  2818  03FB  3010               	movlw	16
  2819  03FC                     u91_25:	
  2820  03FC  36F9               	lsrf	??_EEPROMAT24C1024B_read_byte+3,f
  2821  03FD  0CF8               	rrf	??_EEPROMAT24C1024B_read_byte+2,f
  2822  03FE  0CF7               	rrf	??_EEPROMAT24C1024B_read_byte+1,f
  2823  03FF  0CF6               	rrf	??_EEPROMAT24C1024B_read_byte,f
  2824  0400  0B89               	decfsz	9,f
  2825  0401  2BFC               	goto	u91_25
  2826  0402  0876               	movf	??_EEPROMAT24C1024B_read_byte,w
  2827  0403  3901               	andlw	1
  2828  0404  0709               	addwf	9,w
  2829  0405  3EA0               	addlw	160
  2830  0406  3185  2543  3183   	fcall	_I2C_data_send
  2831                           
  2832                           ;EEPROMAT24C1024B.h: 56: I2C_data_send((address >> 8) & 0xff);
  2833  0409  0872               	movf	EEPROMAT24C1024B_read_byte@address,w
  2834  040A  00F6               	movwf	??_EEPROMAT24C1024B_read_byte
  2835  040B  0873               	movf	EEPROMAT24C1024B_read_byte@address+1,w
  2836  040C  00F7               	movwf	??_EEPROMAT24C1024B_read_byte+1
  2837  040D  0874               	movf	EEPROMAT24C1024B_read_byte@address+2,w
  2838  040E  00F8               	movwf	??_EEPROMAT24C1024B_read_byte+2
  2839  040F  0875               	movf	EEPROMAT24C1024B_read_byte@address+3,w
  2840  0410  00F9               	movwf	??_EEPROMAT24C1024B_read_byte+3
  2841  0411  3008               	movlw	8
  2842  0412                     u92_25:	
  2843  0412  36F9               	lsrf	??_EEPROMAT24C1024B_read_byte+3,f
  2844  0413  0CF8               	rrf	??_EEPROMAT24C1024B_read_byte+2,f
  2845  0414  0CF7               	rrf	??_EEPROMAT24C1024B_read_byte+1,f
  2846  0415  0CF6               	rrf	??_EEPROMAT24C1024B_read_byte,f
  2847  0416  0B89               	decfsz	9,f
  2848  0417  2C12               	goto	u92_25
  2849  0418  0876               	movf	??_EEPROMAT24C1024B_read_byte,w
  2850  0419  3185  2543  3183   	fcall	_I2C_data_send
  2851                           
  2852                           ;EEPROMAT24C1024B.h: 57: I2C_data_send(address & 0xff);
  2853  041C  0872               	movf	EEPROMAT24C1024B_read_byte@address,w
  2854  041D  3185  2543  3183   	fcall	_I2C_data_send
  2855                           
  2856                           ;EEPROMAT24C1024B.h: 61: I2C_Stop();
  2857  0420  3186  2633  3183   	fcall	_I2C_Stop
  2858                           
  2859                           ;EEPROMAT24C1024B.h: 62: _delay((unsigned long)((6)*(4000000/4000.0)));
  2860  0423  3008               	movlw	8
  2861  0424  00F7               	movwf	??_EEPROMAT24C1024B_read_byte+1
  2862  0425  30C9               	movlw	201
  2863  0426  00F6               	movwf	??_EEPROMAT24C1024B_read_byte
  2864  0427                     u182_27:	
  2865  0427  0BF6               	decfsz	??_EEPROMAT24C1024B_read_byte,f
  2866  0428  2C27               	goto	u182_27
  2867  0429  0BF7               	decfsz	??_EEPROMAT24C1024B_read_byte+1,f
  2868  042A  2C27               	goto	u182_27
  2869  042B  3200               	nop2
  2870                           
  2871                           ;EEPROMAT24C1024B.h: 63: I2C_Start();
  2872  042C  3186  263A  3183   	fcall	_I2C_Start
  2873                           
  2874                           ;EEPROMAT24C1024B.h: 65: I2C_data_send(0b10100001+ (((address >> 16)&0x1) << 1) );
  2875  042F  0872               	movf	EEPROMAT24C1024B_read_byte@address,w
  2876  0430  00F6               	movwf	??_EEPROMAT24C1024B_read_byte
  2877  0431  0873               	movf	EEPROMAT24C1024B_read_byte@address+1,w
  2878  0432  00F7               	movwf	??_EEPROMAT24C1024B_read_byte+1
  2879  0433  0874               	movf	EEPROMAT24C1024B_read_byte@address+2,w
  2880  0434  00F8               	movwf	??_EEPROMAT24C1024B_read_byte+2
  2881  0435  0875               	movf	EEPROMAT24C1024B_read_byte@address+3,w
  2882  0436  00F9               	movwf	??_EEPROMAT24C1024B_read_byte+3
  2883  0437  3010               	movlw	16
  2884  0438                     u93_25:	
  2885  0438  36F9               	lsrf	??_EEPROMAT24C1024B_read_byte+3,f
  2886  0439  0CF8               	rrf	??_EEPROMAT24C1024B_read_byte+2,f
  2887  043A  0CF7               	rrf	??_EEPROMAT24C1024B_read_byte+1,f
  2888  043B  0CF6               	rrf	??_EEPROMAT24C1024B_read_byte,f
  2889  043C  0B89               	decfsz	9,f
  2890  043D  2C38               	goto	u93_25
  2891  043E  0876               	movf	??_EEPROMAT24C1024B_read_byte,w
  2892  043F  3901               	andlw	1
  2893  0440  0709               	addwf	9,w
  2894  0441  3EA1               	addlw	161
  2895  0442  3185  2543  3183   	fcall	_I2C_data_send
  2896                           
  2897                           ;EEPROMAT24C1024B.h: 67: byte data = I2C_data_receive();
  2898  0445  3186  2618  3183   	fcall	_I2C_data_receive
  2899  0448  00F6               	movwf	??_EEPROMAT24C1024B_read_byte
  2900  0449  0876               	movf	??_EEPROMAT24C1024B_read_byte,w
  2901  044A  00FA               	movwf	EEPROMAT24C1024B_read_byte@data
  2902                           
  2903                           ;EEPROMAT24C1024B.h: 68: I2C_SendNACK();
  2904  044B  3186  262B  3183   	fcall	_I2C_SendNACK
  2905                           
  2906                           ;EEPROMAT24C1024B.h: 70: I2C_Stop();
  2907  044E  3186  2633         	fcall	_I2C_Stop
  2908                           
  2909                           ;EEPROMAT24C1024B.h: 71: return data;
  2910  0450  087A               	movf	EEPROMAT24C1024B_read_byte@data,w
  2911  0451  0008               	return
  2912  0452                     __end_of_EEPROMAT24C1024B_read_byte:	
  2913                           
  2914                           	psect	text14
  2915  0618                     __ptext14:	
  2916 ;; *************** function _I2C_data_receive *****************
  2917 ;; Defined at:
  2918 ;;		line 221 in file "I2C.h"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      unsigned char 
  2925 ;; Registers used:
  2926 ;;		wreg
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2932 ;;      Params:         0       0       0       0
  2933 ;;      Locals:         0       0       0       0
  2934 ;;      Temps:          0       0       0       0
  2935 ;;      Totals:         0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_EEPROMAT24C1024B_read_byte
  2942 ;;		_PCF8574_read
  2943 ;;		_EEPROM24C64_read_byte
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function _I2C_data_receive
  2949  0618                     _I2C_data_receive:	
  2950                           
  2951                           ;I2C.h: 223: RCEN = 1;
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _I2C_data_receive: [wreg]
  2955  0618  0024               	movlb	4	; select bank4
  2956  0619  1596               	bsf	22,3	;volatile
  2957  061A                     i1l185:	
  2958                           ;I2C.h: 225: while(BF == 0 );
  2959                           
  2960  061A  1C14               	btfss	20,0	;volatile
  2961  061B  2E1A               	goto	i1l185
  2962  061C                     i1l188:	
  2963                           ;I2C.h: 226: while(SSP1IF==0);
  2964                           
  2965  061C  0020               	movlb	0	; select bank0
  2966  061D  1D91               	btfss	17,3	;volatile
  2967  061E  2E1C               	goto	i1l188
  2968                           
  2969                           ;I2C.h: 227: SSP1IF = 0;
  2970  061F  1191               	bcf	17,3	;volatile
  2971                           
  2972                           ;I2C.h: 228: return SSPBUF;
  2973  0620  0024               	movlb	4	; select bank4
  2974  0621  0811               	movf	17,w	;volatile
  2975  0622  0008               	return
  2976  0623                     __end_of_I2C_data_receive:	
  2977                           
  2978                           	psect	text15
  2979  062B                     __ptext15:	
  2980 ;; *************** function _I2C_SendNACK *****************
  2981 ;; Defined at:
  2982 ;;		line 323 in file "I2C.h"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		None
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2996 ;;      Params:         0       0       0       0
  2997 ;;      Locals:         0       0       0       0
  2998 ;;      Temps:          0       0       0       0
  2999 ;;      Totals:         0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_EEPROMAT24C1024B_read_byte
  3006 ;;		_EEPROM24C64_read_byte
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _I2C_SendNACK
  3012  062B                     _I2C_SendNACK:	
  3013                           
  3014                           ;I2C.h: 325: ACKDT = 1 ;
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _I2C_SendNACK: []
  3018  062B  0024               	movlb	4	; select bank4
  3019  062C  1696               	bsf	22,5	;volatile
  3020                           
  3021                           ;I2C.h: 326: ACKEN = 1;
  3022  062D  1616               	bsf	22,4	;volatile
  3023  062E                     i1l212:	
  3024                           ;I2C.h: 327: while (ACKEN);
  3025                           
  3026  062E  1A16               	btfsc	22,4	;volatile
  3027  062F  2E2E               	goto	i1l212
  3028                           
  3029                           ;I2C.h: 328: SSP1IF = 0;
  3030  0630  0020               	movlb	0	; select bank0
  3031  0631  1191               	bcf	17,3	;volatile
  3032  0632  0008               	return
  3033  0633                     __end_of_I2C_SendNACK:	
  3034                           
  3035                           	psect	text16
  3036  04EA                     __ptext16:	
  3037 ;; *************** function _EEPROM24C64_write_page *****************
  3038 ;; Defined at:
  3039 ;;		line 29 in file "EEPROM24C64.h"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  data            1    wreg     unsigned char 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  data            1    4[COMMON] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0, pclath, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3053 ;;      Params:         0       0       0       0
  3054 ;;      Locals:         1       0       0       0
  3055 ;;      Temps:          2       0       0       0
  3056 ;;      Totals:         3       0       0       0
  3057 ;;Total ram usage:        3 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    1
  3060 ;; This function calls:
  3061 ;;		_I2C_Start
  3062 ;;		_I2C_Stop
  3063 ;;		_I2C_data_send
  3064 ;; This function is called by:
  3065 ;;		_check_circuit
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _EEPROM24C64_write_page
  3071  04EA                     _EEPROM24C64_write_page:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _EEPROM24C64_write_page: [wreg+status,2+status,0+pclath+cstack]
  3075                           ;EEPROM24C64_write_page@data stored from wreg
  3076  04EA  00F4               	movwf	EEPROM24C64_write_page@data
  3077                           
  3078                           ;EEPROM24C64.h: 31: I2C_data_send(data);
  3079  04EB  0874               	movf	EEPROM24C64_write_page@data,w
  3080  04EC  3185  2543  3184   	fcall	_I2C_data_send
  3081                           
  3082                           ;EEPROM24C64.h: 32: EEPROM24C64_memory_address++;
  3083  04EF  3001               	movlw	1
  3084  04F0  0020               	movlb	0	; select bank0
  3085  04F1  07C4               	addwf	_EEPROM24C64_memory_address,f
  3086  04F2  3000               	movlw	0
  3087  04F3  3DC5               	addwfc	_EEPROM24C64_memory_address+1,f
  3088                           
  3089                           ;EEPROM24C64.h: 33: if((EEPROM24C64_memory_address % 32) == 0)
  3090  04F4  301F               	movlw	31
  3091  04F5  0544               	andwf	_EEPROM24C64_memory_address,w
  3092  04F6  00F2               	movwf	??_EEPROM24C64_write_page
  3093  04F7  3000               	movlw	0
  3094  04F8  0545               	andwf	_EEPROM24C64_memory_address+1,w
  3095  04F9  00F3               	movwf	??_EEPROM24C64_write_page+1
  3096  04FA  0872               	movf	??_EEPROM24C64_write_page,w
  3097  04FB  0473               	iorwf	??_EEPROM24C64_write_page+1,w
  3098  04FC  1D03               	btfss	3,2
  3099  04FD  0008               	return
  3100                           
  3101                           ;EEPROM24C64.h: 34: {
  3102                           ;EEPROM24C64.h: 36: I2C_Stop();
  3103  04FE  3186  2633  3184   	fcall	_I2C_Stop
  3104                           
  3105                           ;EEPROM24C64.h: 37: _delay((unsigned long)((10)*(4000000/4000.0)));
  3106  0501  300D               	movlw	13
  3107  0502  00F3               	movwf	??_EEPROM24C64_write_page+1
  3108  0503  30FB               	movlw	251
  3109  0504  00F2               	movwf	??_EEPROM24C64_write_page
  3110  0505                     u183_27:	
  3111  0505  0BF2               	decfsz	??_EEPROM24C64_write_page,f
  3112  0506  2D05               	goto	u183_27
  3113  0507  0BF3               	decfsz	??_EEPROM24C64_write_page+1,f
  3114  0508  2D05               	goto	u183_27
  3115  0509  3200               	nop2
  3116                           
  3117                           ;EEPROM24C64.h: 38: I2C_Start();
  3118  050A  3186  263A  3184   	fcall	_I2C_Start
  3119                           
  3120                           ;EEPROM24C64.h: 39: I2C_data_send(0b10101110);
  3121  050D  30AE               	movlw	174
  3122  050E  3185  2543  3184   	fcall	_I2C_data_send
  3123                           
  3124                           ;EEPROM24C64.h: 40: I2C_data_send((EEPROM24C64_memory_address >> 8) & 0xff);
  3125  0511  0020               	movlb	0	; select bank0
  3126  0512  0845               	movf	_EEPROM24C64_memory_address+1,w
  3127  0513  3185  2543  3184   	fcall	_I2C_data_send
  3128                           
  3129                           ;EEPROM24C64.h: 41: I2C_data_send(EEPROM24C64_memory_address & 0xff);
  3130  0516  0020               	movlb	0	; select bank0
  3131  0517  0844               	movf	_EEPROM24C64_memory_address,w
  3132  0518  3185  2543         	fcall	_I2C_data_send
  3133  051A  0008               	return
  3134  051B                     __end_of_EEPROM24C64_write_page:	
  3135                           
  3136                           	psect	text17
  3137  064D                     __ptext17:	
  3138 ;; *************** function _EEPROM24C64_stop_write_page *****************
  3139 ;; Defined at:
  3140 ;;		line 46 in file "EEPROM24C64.h"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3154 ;;      Params:         0       0       0       0
  3155 ;;      Locals:         0       0       0       0
  3156 ;;      Temps:          0       0       0       0
  3157 ;;      Totals:         0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    1
  3161 ;; This function calls:
  3162 ;;		_I2C_Stop
  3163 ;; This function is called by:
  3164 ;;		_check_circuit
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _EEPROM24C64_stop_write_page
  3170  064D                     _EEPROM24C64_stop_write_page:	
  3171                           
  3172                           ;EEPROM24C64.h: 48: I2C_Stop();
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _EEPROM24C64_stop_write_page: [status,2+status,0+pclath+cstack]
  3176  064D  3186  2633         	fcall	_I2C_Stop
  3177  064F  0008               	return
  3178  0650                     __end_of_EEPROM24C64_stop_write_page:	
  3179                           
  3180                           	psect	text18
  3181  05C2                     __ptext18:	
  3182 ;; *************** function _EEPROM24C64_start_write_page *****************
  3183 ;; Defined at:
  3184 ;;		line 17 in file "EEPROM24C64.h"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  address         2    2[COMMON] unsigned int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, pclath, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3198 ;;      Params:         2       0       0       0
  3199 ;;      Locals:         0       0       0       0
  3200 ;;      Temps:          0       0       0       0
  3201 ;;      Totals:         2       0       0       0
  3202 ;;Total ram usage:        2 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    1
  3205 ;; This function calls:
  3206 ;;		_I2C_Start
  3207 ;;		_I2C_data_send
  3208 ;; This function is called by:
  3209 ;;		_check_circuit
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _EEPROM24C64_start_write_page
  3215  05C2                     _EEPROM24C64_start_write_page:	
  3216                           
  3217                           ;EEPROM24C64.h: 19: EEPROM24C64_memory_address = address;
  3218                           
  3219                           ;incstack = 0
  3220                           ; Regs used in _EEPROM24C64_start_write_page: [wreg+status,2+status,0+pclath+cstack]
  3221  05C2  0873               	movf	EEPROM24C64_start_write_page@address+1,w
  3222  05C3  0020               	movlb	0	; select bank0
  3223  05C4  00C5               	movwf	_EEPROM24C64_memory_address+1
  3224  05C5  0872               	movf	EEPROM24C64_start_write_page@address,w
  3225  05C6  00C4               	movwf	_EEPROM24C64_memory_address
  3226                           
  3227                           ;EEPROM24C64.h: 20: I2C_Start();
  3228  05C7  3186  263A  3185   	fcall	_I2C_Start
  3229                           
  3230                           ;EEPROM24C64.h: 23: I2C_data_send(0b10101110);
  3231  05CA  30AE               	movlw	174
  3232  05CB  3185  2543  3185   	fcall	_I2C_data_send
  3233                           
  3234                           ;EEPROM24C64.h: 24: I2C_data_send((address >> 8) & 0xff);
  3235  05CE  0873               	movf	EEPROM24C64_start_write_page@address+1,w
  3236  05CF  3185  2543  3185   	fcall	_I2C_data_send
  3237                           
  3238                           ;EEPROM24C64.h: 25: I2C_data_send(address & 0xff);
  3239  05D2  0872               	movf	EEPROM24C64_start_write_page@address,w
  3240  05D3  3185  2543         	fcall	_I2C_data_send
  3241  05D5  0008               	return
  3242  05D6                     __end_of_EEPROM24C64_start_write_page:	
  3243                           
  3244                           	psect	text19
  3245  0571                     __ptext19:	
  3246 ;; *************** function _EEPROM_WriteByte *****************
  3247 ;; Defined at:
  3248 ;;		line 15 in file "EEPROM.h"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  address         1    wreg     unsigned char 
  3251 ;;  value           1    0[COMMON] unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  address         1    1[COMMON] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3263 ;;      Params:         1       0       0       0
  3264 ;;      Locals:         1       0       0       0
  3265 ;;      Temps:          0       0       0       0
  3266 ;;      Totals:         2       0       0       0
  3267 ;;Total ram usage:        2 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_FNC
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function _EEPROM_WriteByte
  3278  0571                     _EEPROM_WriteByte:	
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _EEPROM_WriteByte: [wreg]
  3282                           ;EEPROM_WriteByte@address stored from wreg
  3283  0571  00F1               	movwf	EEPROM_WriteByte@address
  3284                           
  3285                           ;EEPROM.h: 17: EEPGD = 0;
  3286  0572  0023               	movlb	3	; select bank3
  3287  0573  1395               	bcf	21,7	;volsfr
  3288                           
  3289                           ;EEPROM.h: 18: CFGS = 0;
  3290  0574  1315               	bcf	21,6	;volsfr
  3291                           
  3292                           ;EEPROM.h: 19: EEDATL = value;
  3293  0575  0870               	movf	EEPROM_WriteByte@value,w
  3294  0576  0093               	movwf	19	;volatile
  3295                           
  3296                           ;EEPROM.h: 20: EEADRL = address;
  3297  0577  0871               	movf	EEPROM_WriteByte@address,w
  3298  0578  0091               	movwf	17	;volatile
  3299                           
  3300                           ;EEPROM.h: 22: WREN = 1;
  3301  0579  1515               	bsf	21,2	;volsfr
  3302                           
  3303                           ;EEPROM.h: 24: EECON2 = 0x55;
  3304  057A  3055               	movlw	85
  3305  057B  0096               	movwf	22	;volsfr
  3306                           
  3307                           ;EEPROM.h: 25: EECON2 = 0xaa;
  3308  057C  30AA               	movlw	170
  3309  057D  0096               	movwf	22	;volsfr
  3310                           
  3311                           ;EEPROM.h: 27: WR = 1;
  3312  057E  1495               	bsf	21,1	;volsfr
  3313  057F                     i1l239:	
  3314                           ;EEPROM.h: 29: while(WR);
  3315                           
  3316  057F  1895               	btfsc	21,1	;volsfr
  3317  0580  2D7F               	goto	i1l239
  3318                           
  3319                           ;EEPROM.h: 33: EEIF = 0;
  3320  0581  0020               	movlb	0	; select bank0
  3321  0582  1212               	bcf	18,4	;volatile
  3322                           
  3323                           ;EEPROM.h: 34: WREN = 0;
  3324  0583  0023               	movlb	3	; select bank3
  3325  0584  1115               	bcf	21,2	;volsfr
  3326  0585  0008               	return
  3327  0586                     __end_of_EEPROM_WriteByte:	
  3328                           
  3329                           	psect	text20
  3330  0452                     __ptext20:	
  3331 ;; *************** function _EEPROMAT24C1024B_write_page *****************
  3332 ;; Defined at:
  3333 ;;		line 29 in file "EEPROMAT24C1024B.h"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  data            1    wreg     unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  data            1    6[COMMON] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3347 ;;      Params:         0       0       0       0
  3348 ;;      Locals:         1       0       0       0
  3349 ;;      Temps:          4       0       0       0
  3350 ;;      Totals:         5       0       0       0
  3351 ;;Total ram usage:        5 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    1
  3354 ;; This function calls:
  3355 ;;		_I2C_Start
  3356 ;;		_I2C_Stop
  3357 ;;		_I2C_data_send
  3358 ;; This function is called by:
  3359 ;;		_FNC
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _EEPROMAT24C1024B_write_page
  3365  0452                     _EEPROMAT24C1024B_write_page:	
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _EEPROMAT24C1024B_write_page: [wreg+status,2+status,0+pclath+cstack]
  3369                           ;EEPROMAT24C1024B_write_page@data stored from wreg
  3370  0452  00F6               	movwf	EEPROMAT24C1024B_write_page@data
  3371                           
  3372                           ;EEPROMAT24C1024B.h: 31: I2C_data_send(data);
  3373  0453  0876               	movf	EEPROMAT24C1024B_write_page@data,w
  3374  0454  3185  2543  3184   	fcall	_I2C_data_send
  3375                           
  3376                           ;EEPROMAT24C1024B.h: 32: EEPROM_memory_address++;
  3377  0457  3001               	movlw	1
  3378  0458  0020               	movlb	0	; select bank0
  3379  0459  07BC               	addwf	_EEPROM_memory_address,f
  3380  045A  3000               	movlw	0
  3381  045B  3DBD               	addwfc	_EEPROM_memory_address+1,f
  3382  045C  3000               	movlw	0
  3383  045D  3DBE               	addwfc	_EEPROM_memory_address+2,f
  3384  045E  3000               	movlw	0
  3385  045F  3DBF               	addwfc	_EEPROM_memory_address+3,f
  3386                           
  3387                           ;EEPROMAT24C1024B.h: 33: if((EEPROM_memory_address % 256) == 0)
  3388  0460  30FF               	movlw	255
  3389  0461  053C               	andwf	_EEPROM_memory_address,w
  3390  0462  00F2               	movwf	??_EEPROMAT24C1024B_write_page
  3391  0463  3000               	movlw	0
  3392  0464  053D               	andwf	_EEPROM_memory_address+1,w
  3393  0465  00F3               	movwf	??_EEPROMAT24C1024B_write_page+1
  3394  0466  3000               	movlw	0
  3395  0467  053E               	andwf	_EEPROM_memory_address+2,w
  3396  0468  00F4               	movwf	??_EEPROMAT24C1024B_write_page+2
  3397  0469  3000               	movlw	0
  3398  046A  053F               	andwf	_EEPROM_memory_address+3,w
  3399  046B  00F5               	movwf	??_EEPROMAT24C1024B_write_page+3
  3400  046C  0875               	movf	??_EEPROMAT24C1024B_write_page+3,w
  3401  046D  0474               	iorwf	??_EEPROMAT24C1024B_write_page+2,w
  3402  046E  0473               	iorwf	??_EEPROMAT24C1024B_write_page+1,w
  3403  046F  0472               	iorwf	??_EEPROMAT24C1024B_write_page,w
  3404  0470  1D03               	skipz
  3405  0471  0008               	return
  3406                           
  3407                           ;EEPROMAT24C1024B.h: 34: {
  3408                           ;EEPROMAT24C1024B.h: 35: I2C_Stop();
  3409  0472  3186  2633  3184   	fcall	_I2C_Stop
  3410                           
  3411                           ;EEPROMAT24C1024B.h: 36: _delay((unsigned long)((10)*(4000000/4000.0)));
  3412  0475  300D               	movlw	13
  3413  0476  00F3               	movwf	??_EEPROMAT24C1024B_write_page+1
  3414  0477  30FB               	movlw	251
  3415  0478  00F2               	movwf	??_EEPROMAT24C1024B_write_page
  3416  0479                     u184_27:	
  3417  0479  0BF2               	decfsz	??_EEPROMAT24C1024B_write_page,f
  3418  047A  2C79               	goto	u184_27
  3419  047B  0BF3               	decfsz	??_EEPROMAT24C1024B_write_page+1,f
  3420  047C  2C79               	goto	u184_27
  3421  047D  3200               	nop2
  3422                           
  3423                           ;EEPROMAT24C1024B.h: 37: I2C_Start();
  3424  047E  3186  263A  3184   	fcall	_I2C_Start
  3425                           
  3426                           ;EEPROMAT24C1024B.h: 38: I2C_data_send(0b10100000+ (((EEPROM_memory_address >> 16)&0x1) 
      +                          << 1) );
  3427  0481  0020               	movlb	0	; select bank0
  3428  0482  083C               	movf	_EEPROM_memory_address,w
  3429  0483  00F2               	movwf	??_EEPROMAT24C1024B_write_page
  3430  0484  083D               	movf	_EEPROM_memory_address+1,w
  3431  0485  00F3               	movwf	??_EEPROMAT24C1024B_write_page+1
  3432  0486  083E               	movf	_EEPROM_memory_address+2,w
  3433  0487  00F4               	movwf	??_EEPROMAT24C1024B_write_page+2
  3434  0488  083F               	movf	_EEPROM_memory_address+3,w
  3435  0489  00F5               	movwf	??_EEPROMAT24C1024B_write_page+3
  3436  048A  3010               	movlw	16
  3437  048B                     u101_25:	
  3438  048B  36F5               	lsrf	??_EEPROMAT24C1024B_write_page+3,f
  3439  048C  0CF4               	rrf	??_EEPROMAT24C1024B_write_page+2,f
  3440  048D  0CF3               	rrf	??_EEPROMAT24C1024B_write_page+1,f
  3441  048E  0CF2               	rrf	??_EEPROMAT24C1024B_write_page,f
  3442  048F  0B89               	decfsz	9,f
  3443  0490  2C8B               	goto	u101_25
  3444  0491  0872               	movf	??_EEPROMAT24C1024B_write_page,w
  3445  0492  3901               	andlw	1
  3446  0493  0709               	addwf	9,w
  3447  0494  3EA0               	addlw	160
  3448  0495  3185  2543  3184   	fcall	_I2C_data_send
  3449                           
  3450                           ;EEPROMAT24C1024B.h: 39: I2C_data_send((EEPROM_memory_address >> 8) & 0xff);
  3451  0498  0020               	movlb	0	; select bank0
  3452  0499  083C               	movf	_EEPROM_memory_address,w
  3453  049A  00F2               	movwf	??_EEPROMAT24C1024B_write_page
  3454  049B  083D               	movf	_EEPROM_memory_address+1,w
  3455  049C  00F3               	movwf	??_EEPROMAT24C1024B_write_page+1
  3456  049D  083E               	movf	_EEPROM_memory_address+2,w
  3457  049E  00F4               	movwf	??_EEPROMAT24C1024B_write_page+2
  3458  049F  083F               	movf	_EEPROM_memory_address+3,w
  3459  04A0  00F5               	movwf	??_EEPROMAT24C1024B_write_page+3
  3460  04A1  3008               	movlw	8
  3461  04A2                     u102_25:	
  3462  04A2  36F5               	lsrf	??_EEPROMAT24C1024B_write_page+3,f
  3463  04A3  0CF4               	rrf	??_EEPROMAT24C1024B_write_page+2,f
  3464  04A4  0CF3               	rrf	??_EEPROMAT24C1024B_write_page+1,f
  3465  04A5  0CF2               	rrf	??_EEPROMAT24C1024B_write_page,f
  3466  04A6  0B89               	decfsz	9,f
  3467  04A7  2CA2               	goto	u102_25
  3468  04A8  0872               	movf	??_EEPROMAT24C1024B_write_page,w
  3469  04A9  3185  2543  3184   	fcall	_I2C_data_send
  3470                           
  3471                           ;EEPROMAT24C1024B.h: 40: I2C_data_send(EEPROM_memory_address & 0xff);
  3472  04AC  0020               	movlb	0	; select bank0
  3473  04AD  083C               	movf	_EEPROM_memory_address,w
  3474  04AE  3185  2543         	fcall	_I2C_data_send
  3475  04B0  0008               	return
  3476  04B1                     __end_of_EEPROMAT24C1024B_write_page:	
  3477                           
  3478                           	psect	text21
  3479  0650                     __ptext21:	
  3480 ;; *************** function _EEPROMAT24C1024B_stop_write_page *****************
  3481 ;; Defined at:
  3482 ;;		line 45 in file "EEPROMAT24C1024B.h"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		status,2, status,0, pclath, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3496 ;;      Params:         0       0       0       0
  3497 ;;      Locals:         0       0       0       0
  3498 ;;      Temps:          0       0       0       0
  3499 ;;      Totals:         0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    1
  3503 ;; This function calls:
  3504 ;;		_I2C_Stop
  3505 ;; This function is called by:
  3506 ;;		_FNC
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _EEPROMAT24C1024B_stop_write_page
  3512  0650                     _EEPROMAT24C1024B_stop_write_page:	
  3513                           
  3514                           ;EEPROMAT24C1024B.h: 47: I2C_Stop();
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _EEPROMAT24C1024B_stop_write_page: [status,2+status,0+pclath+cstack]
  3518  0650  3186  2633         	fcall	_I2C_Stop
  3519  0652  0008               	return
  3520  0653                     __end_of_EEPROMAT24C1024B_stop_write_page:	
  3521                           
  3522                           	psect	text22
  3523  0633                     __ptext22:	
  3524 ;; *************** function _I2C_Stop *****************
  3525 ;; Defined at:
  3526 ;;		line 347 in file "I2C.h"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		None
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3540 ;;      Params:         0       0       0       0
  3541 ;;      Locals:         0       0       0       0
  3542 ;;      Temps:          0       0       0       0
  3543 ;;      Totals:         0       0       0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_EEPROMAT24C1024B_write_page
  3550 ;;		_EEPROMAT24C1024B_stop_write_page
  3551 ;;		_EEPROMAT24C1024B_read_byte
  3552 ;;		_PCF8574_load_data
  3553 ;;		_PCF8574_read
  3554 ;;		_EEPROM24C64_write_page
  3555 ;;		_EEPROM24C64_stop_write_page
  3556 ;;		_EEPROM24C64_read_byte
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function _I2C_Stop
  3562  0633                     _I2C_Stop:	
  3563                           
  3564                           ;I2C.h: 349: PEN = 1;
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _I2C_Stop: []
  3568  0633  0024               	movlb	4	; select bank4
  3569  0634  1516               	bsf	22,2	;volatile
  3570  0635                     i1l218:	
  3571                           ;I2C.h: 350: while(PEN);
  3572                           
  3573  0635  1916               	btfsc	22,2	;volatile
  3574  0636  2E35               	goto	i1l218
  3575                           
  3576                           ;I2C.h: 352: SSP1IF = 0;
  3577  0637  0020               	movlb	0	; select bank0
  3578  0638  1191               	bcf	17,3	;volatile
  3579  0639  0008               	return
  3580  063A                     __end_of_I2C_Stop:	
  3581                           
  3582                           	psect	text23
  3583  04B1                     __ptext23:	
  3584 ;; *************** function _EEPROMAT24C1024B_start_write_page *****************
  3585 ;; Defined at:
  3586 ;;		line 17 in file "EEPROMAT24C1024B.h"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  address         4    2[COMMON] unsigned long 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0, pclath, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3600 ;;      Params:         4       0       0       0
  3601 ;;      Locals:         0       0       0       0
  3602 ;;      Temps:          4       0       0       0
  3603 ;;      Totals:         8       0       0       0
  3604 ;;Total ram usage:        8 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    1
  3607 ;; This function calls:
  3608 ;;		_I2C_Start
  3609 ;;		_I2C_data_send
  3610 ;; This function is called by:
  3611 ;;		_FNC
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           
  3616                           ;psect for function _EEPROMAT24C1024B_start_write_page
  3617  04B1                     _EEPROMAT24C1024B_start_write_page:	
  3618                           
  3619                           ;EEPROMAT24C1024B.h: 19: EEPROM_memory_address = address;
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in _EEPROMAT24C1024B_start_write_page: [wreg+status,2+status,0+pclath+cstack
      +                          ]
  3623  04B1  0875               	movf	EEPROMAT24C1024B_start_write_page@address+3,w
  3624  04B2  0020               	movlb	0	; select bank0
  3625  04B3  00BF               	movwf	_EEPROM_memory_address+3
  3626  04B4  0874               	movf	EEPROMAT24C1024B_start_write_page@address+2,w
  3627  04B5  00BE               	movwf	_EEPROM_memory_address+2
  3628  04B6  0873               	movf	EEPROMAT24C1024B_start_write_page@address+1,w
  3629  04B7  00BD               	movwf	_EEPROM_memory_address+1
  3630  04B8  0872               	movf	EEPROMAT24C1024B_start_write_page@address,w
  3631  04B9  00BC               	movwf	_EEPROM_memory_address
  3632                           
  3633                           ;EEPROMAT24C1024B.h: 20: I2C_Start();
  3634  04BA  3186  263A  3184   	fcall	_I2C_Start
  3635                           
  3636                           ;EEPROMAT24C1024B.h: 23: I2C_data_send(0b10100000+ (((address >> 16)&0x1) << 1) );
  3637  04BD  0872               	movf	EEPROMAT24C1024B_start_write_page@address,w
  3638  04BE  00F6               	movwf	??_EEPROMAT24C1024B_start_write_page
  3639  04BF  0873               	movf	EEPROMAT24C1024B_start_write_page@address+1,w
  3640  04C0  00F7               	movwf	??_EEPROMAT24C1024B_start_write_page+1
  3641  04C1  0874               	movf	EEPROMAT24C1024B_start_write_page@address+2,w
  3642  04C2  00F8               	movwf	??_EEPROMAT24C1024B_start_write_page+2
  3643  04C3  0875               	movf	EEPROMAT24C1024B_start_write_page@address+3,w
  3644  04C4  00F9               	movwf	??_EEPROMAT24C1024B_start_write_page+3
  3645  04C5  3010               	movlw	16
  3646  04C6                     u98_25:	
  3647  04C6  36F9               	lsrf	??_EEPROMAT24C1024B_start_write_page+3,f
  3648  04C7  0CF8               	rrf	??_EEPROMAT24C1024B_start_write_page+2,f
  3649  04C8  0CF7               	rrf	??_EEPROMAT24C1024B_start_write_page+1,f
  3650  04C9  0CF6               	rrf	??_EEPROMAT24C1024B_start_write_page,f
  3651  04CA  0B89               	decfsz	9,f
  3652  04CB  2CC6               	goto	u98_25
  3653  04CC  0876               	movf	??_EEPROMAT24C1024B_start_write_page,w
  3654  04CD  3901               	andlw	1
  3655  04CE  0709               	addwf	9,w
  3656  04CF  3EA0               	addlw	160
  3657  04D0  3185  2543  3184   	fcall	_I2C_data_send
  3658                           
  3659                           ;EEPROMAT24C1024B.h: 24: I2C_data_send((address >> 8) & 0xff);
  3660  04D3  0872               	movf	EEPROMAT24C1024B_start_write_page@address,w
  3661  04D4  00F6               	movwf	??_EEPROMAT24C1024B_start_write_page
  3662  04D5  0873               	movf	EEPROMAT24C1024B_start_write_page@address+1,w
  3663  04D6  00F7               	movwf	??_EEPROMAT24C1024B_start_write_page+1
  3664  04D7  0874               	movf	EEPROMAT24C1024B_start_write_page@address+2,w
  3665  04D8  00F8               	movwf	??_EEPROMAT24C1024B_start_write_page+2
  3666  04D9  0875               	movf	EEPROMAT24C1024B_start_write_page@address+3,w
  3667  04DA  00F9               	movwf	??_EEPROMAT24C1024B_start_write_page+3
  3668  04DB  3008               	movlw	8
  3669  04DC                     u99_25:	
  3670  04DC  36F9               	lsrf	??_EEPROMAT24C1024B_start_write_page+3,f
  3671  04DD  0CF8               	rrf	??_EEPROMAT24C1024B_start_write_page+2,f
  3672  04DE  0CF7               	rrf	??_EEPROMAT24C1024B_start_write_page+1,f
  3673  04DF  0CF6               	rrf	??_EEPROMAT24C1024B_start_write_page,f
  3674  04E0  0B89               	decfsz	9,f
  3675  04E1  2CDC               	goto	u99_25
  3676  04E2  0876               	movf	??_EEPROMAT24C1024B_start_write_page,w
  3677  04E3  3185  2543  3184   	fcall	_I2C_data_send
  3678                           
  3679                           ;EEPROMAT24C1024B.h: 25: I2C_data_send(address & 0xff);
  3680  04E6  0872               	movf	EEPROMAT24C1024B_start_write_page@address,w
  3681  04E7  3185  2543         	fcall	_I2C_data_send
  3682  04E9  0008               	return
  3683  04EA                     __end_of_EEPROMAT24C1024B_start_write_page:	
  3684                           
  3685                           	psect	text24
  3686  0543                     __ptext24:	
  3687 ;; *************** function _I2C_data_send *****************
  3688 ;; Defined at:
  3689 ;;		line 234 in file "I2C.h"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  data            1    wreg     unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  data            1    1[COMMON] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3703 ;;      Params:         0       0       0       0
  3704 ;;      Locals:         1       0       0       0
  3705 ;;      Temps:          1       0       0       0
  3706 ;;      Totals:         2       0       0       0
  3707 ;;Total ram usage:        2 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_EEPROMAT24C1024B_start_write_page
  3713 ;;		_EEPROMAT24C1024B_write_page
  3714 ;;		_EEPROMAT24C1024B_read_byte
  3715 ;;		_PCF8574_load_data
  3716 ;;		_PCF8574_read
  3717 ;;		_EEPROM24C64_start_write_page
  3718 ;;		_EEPROM24C64_write_page
  3719 ;;		_EEPROM24C64_read_byte
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _I2C_data_send
  3725  0543                     _I2C_data_send:	
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _I2C_data_send: [wreg+status,2+status,0]
  3729                           ;I2C_data_send@data stored from wreg
  3730  0543  00F1               	movwf	I2C_data_send@data
  3731                           
  3732                           ;I2C.h: 282: SSP1IF = 0;
  3733  0544  0020               	movlb	0	; select bank0
  3734  0545  1191               	bcf	17,3	;volatile
  3735                           
  3736                           ;I2C.h: 285: SSPBUF = data ;
  3737  0546  0871               	movf	I2C_data_send@data,w
  3738  0547  0024               	movlb	4	; select bank4
  3739  0548  0091               	movwf	17	;volatile
  3740  0549                     i1l196:	
  3741                           ;I2C.h: 286: while (BF);
  3742                           
  3743  0549  1C14               	btfss	20,0	;volatile
  3744  054A  2D55               	goto	i1l199
  3745  054B  2D49               	goto	i1l196
  3746  054C                     i1l1565:	
  3747                           ;I2C.h: 301: while(SSP1IF ==0){unnecessary++; if(unnecessary == 200)break;};
  3748                           
  3749  054C  3001               	movlw	1
  3750  054D  00F0               	movwf	??_I2C_data_send
  3751  054E  0870               	movf	??_I2C_data_send,w
  3752  054F  0020               	movlb	0	; select bank0
  3753  0550  07D1               	addwf	_unnecessary,f
  3754  0551  30C8               	movlw	200
  3755  0552  0651               	xorwf	_unnecessary,w
  3756  0553  1903               	btfsc	3,2
  3757  0554  2D58               	goto	i1l202
  3758  0555                     i1l199:	
  3759  0555  0020               	movlb	0	; select bank0
  3760  0556  1D91               	btfss	17,3	;volatile
  3761  0557  2D4C               	goto	i1l1565
  3762  0558                     i1l202:	
  3763                           
  3764                           ;I2C.h: 302: SSP1IF = 0;
  3765  0558  1191               	bcf	17,3	;volatile
  3766                           
  3767                           ;I2C.h: 303: unnecessary = 0;
  3768  0559  01D1               	clrf	_unnecessary
  3769  055A  0008               	return
  3770  055B                     __end_of_I2C_data_send:	
  3771                           
  3772                           	psect	text25
  3773  063A                     __ptext25:	
  3774 ;; *************** function _I2C_Start *****************
  3775 ;; Defined at:
  3776 ;;		line 203 in file "I2C.h"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		None
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3790 ;;      Params:         0       0       0       0
  3791 ;;      Locals:         0       0       0       0
  3792 ;;      Temps:          0       0       0       0
  3793 ;;      Totals:         0       0       0       0
  3794 ;;Total ram usage:        0 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_EEPROMAT24C1024B_start_write_page
  3800 ;;		_EEPROMAT24C1024B_write_page
  3801 ;;		_EEPROMAT24C1024B_read_byte
  3802 ;;		_PCF8574_load_data
  3803 ;;		_PCF8574_read
  3804 ;;		_EEPROM24C64_start_write_page
  3805 ;;		_EEPROM24C64_write_page
  3806 ;;		_EEPROM24C64_read_byte
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function _I2C_Start
  3812  063A                     _I2C_Start:	
  3813                           
  3814                           ;I2C.h: 206: SEN = 1;
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in _I2C_Start: []
  3818  063A  0024               	movlb	4	; select bank4
  3819  063B  1416               	bsf	22,0	;volatile
  3820  063C                     i1l179:	
  3821                           ;I2C.h: 209: while ( SEN);
  3822                           
  3823  063C  1816               	btfsc	22,0	;volatile
  3824  063D  2E3C               	goto	i1l179
  3825                           
  3826                           ;I2C.h: 210: SSP1IF = 0;
  3827  063E  0020               	movlb	0	; select bank0
  3828  063F  1191               	bcf	17,3	;volatile
  3829  0640  0008               	return
  3830  0641                     __end_of_I2C_Start:	
  3831  007E                     btemp	set	126	;btemp
  3832  007E                     int$flags	set	126
  3833  007E                     wtemp	set	126
  3834  007E                     wtemp0	set	126
  3835  0080                     wtemp1	set	128
  3836  0082                     wtemp2	set	130
  3837  0084                     wtemp3	set	132
  3838  0086                     wtemp4	set	134
  3839  0088                     wtemp5	set	136
  3840  007F                     wtemp6	set	127
  3841  007E                     ttemp	set	126
  3842  007E                     ttemp0	set	126
  3843  0081                     ttemp1	set	129
  3844  0084                     ttemp2	set	132
  3845  0087                     ttemp3	set	135
  3846  007F                     ttemp4	set	127
  3847  007E                     ltemp	set	126
  3848  007E                     ltemp0	set	126
  3849  0082                     ltemp1	set	130
  3850  0086                     ltemp2	set	134
  3851  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     28      52
    BANK1            80      5       5
    BANK2            64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _FNC in COMMON

    _check_circuit->_EEPROMAT24C1024B_read_byte
    _PCF8574_read->_I2C_data_send
    _PCF8574_load_data->_I2C_data_send
    _EEPROMAT24C1024B_read_byte->_I2C_data_send
    _EEPROM24C64_write_page->_I2C_data_send
    _EEPROM24C64_start_write_page->_I2C_data_send
    _EEPROMAT24C1024B_write_page->_I2C_data_send
    _EEPROMAT24C1024B_start_write_page->_I2C_data_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _FNC in BANK0

    _FNC->_check_circuit

Critical Paths under _main in BANK1

    _main->_DELAY100
    _I2C_initialize->_DELAY

Critical Paths under _FNC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _FNC in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     207
                                              4 BANK1      1     1      0
                              _DELAY
                           _DELAY100
                     _I2C_initialize
                          _UART_init
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_initialize                                       0     0      0      68
                              _DELAY
 ---------------------------------------------------------------------------------
 (2) _DELAY                                                3     3      0      68
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DELAY100                                             4     4      0      68
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _FNC                                                  8     8      0    2486
                                             20 BANK0      8     8      0
  _EEPROMAT24C1024B_start_write_page
   _EEPROMAT24C1024B_stop_write_page
        _EEPROMAT24C1024B_write_page
                   _EEPROM_WriteByte
                  _UART_byte_receive
                     _UART_byte_send
                      _check_circuit
                         i1_DELAY100
 ---------------------------------------------------------------------------------
 (4) i1_DELAY100                                           4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _check_circuit                                       20    20      0    1884
                                              0 BANK0     20    20      0
       _EEPROM24C64_start_write_page
        _EEPROM24C64_stop_write_page
             _EEPROM24C64_write_page
         _EEPROMAT24C1024B_read_byte
                    _EEPROM_ReadByte
                  _PCF8574_load_data
                       _PCF8574_read
                  _UART_byte_receive
                     _UART_byte_send
 ---------------------------------------------------------------------------------
 (5) _UART_byte_send                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _UART_byte_receive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PCF8574_read                                         3     3      0      67
                                              2 COMMON     3     3      0
                          _I2C_Start
                           _I2C_Stop
                   _I2C_data_receive
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (5) _PCF8574_load_data                                    2     1      1     225
                                              2 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (5) _EEPROM_ReadByte                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EEPROMAT24C1024B_read_byte                           9     5      4     292
                                              2 COMMON     9     5      4
                       _I2C_SendNACK
                          _I2C_Start
                           _I2C_Stop
                   _I2C_data_receive
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (6) _I2C_data_receive                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SendNACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EEPROM24C64_write_page                               3     3      0      44
                                              2 COMMON     3     3      0
                          _I2C_Start
                           _I2C_Stop
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (5) _EEPROM24C64_stop_write_page                          0     0      0       0
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _EEPROM24C64_start_write_page                         2     0      2     194
                                              2 COMMON     2     0      2
                          _I2C_Start
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (4) _EEPROM_WriteByte                                     2     1      1     256
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (4) _EEPROMAT24C1024B_write_page                          5     5      0      44
                                              2 COMMON     5     5      0
                          _I2C_Start
                           _I2C_Stop
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (4) _EEPROMAT24C1024B_stop_write_page                     0     0      0       0
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROMAT24C1024B_start_write_page                    8     4      4     163
                                              2 COMMON     8     4      4
                          _I2C_Start
                      _I2C_data_send
 ---------------------------------------------------------------------------------
 (6) _I2C_data_send                                        2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY
   _DELAY100
   _I2C_initialize
     _DELAY
   _UART_init

 _FNC (ROOT)
   _EEPROMAT24C1024B_start_write_page
     _I2C_Start
     _I2C_data_send
   _EEPROMAT24C1024B_stop_write_page
     _I2C_Stop
   _EEPROMAT24C1024B_write_page
     _I2C_Start
     _I2C_Stop
     _I2C_data_send
   _EEPROM_WriteByte
   _UART_byte_receive
   _UART_byte_send
   _check_circuit
     _EEPROM24C64_start_write_page
       _I2C_Start
       _I2C_data_send
     _EEPROM24C64_stop_write_page
       _I2C_Stop
     _EEPROM24C64_write_page
       _I2C_Start
       _I2C_Stop
       _I2C_data_send
     _EEPROMAT24C1024B_read_byte
       _I2C_SendNACK
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
     _EEPROM_ReadByte
     _PCF8574_load_data
       _I2C_Start
       _I2C_Stop
       _I2C_data_send
     _PCF8574_read
       _I2C_Start
       _I2C_Stop
       _I2C_data_receive
       _I2C_data_send
     _UART_byte_receive
     _UART_byte_send
   i1_DELAY100

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      47       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1C      34       6       65.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      5       5       8        6.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      47      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Apr 03 17:15:32 2020

                        __size_of_I2C_Start 0007                                          _BF 10A0  
                                        _RD 0CA8                                          _WR 0CA9  
                                        __x 007B                                          __y 007C  
                               ?i1_DELAY100 0070                                         _GIE 005F  
                                       _FNC 0004                                         _RA4 0064  
                                       _PEN 10B2                                         _SEN 10B0  
                               _unnecessary 0051                                         wreg 0009  
                     __end_of_check_circuit 03F0                                        FNC@i 003A  
                                      ?_FNC 0070                                        l2255 055E  
                                      l2239 059D                                        l2369 053E  
                                      _ADIF 008E                                        _ADFM 04F7  
                                      _ADGO 04E9                                        _ADON 04E8  
                                      _CHS0 04EA                                        _CHS1 04EB  
                                      _CHS2 04EC                                        _CFGS 0CAE  
                                      _CHS3 04ED                                        _EEIF 0094  
                                      _BRGH 0CF2                                        _CREN 0CEC  
                                      u1537 05A3                                        u1547 0566  
                                      _PEIE 005E                                        _RCIE 048D  
                                      _RCEN 10B3                                        _RCIF 008D  
                                      _SCS0 04C8                                        _SCS1 04C9  
                                      _SPEN 0CEF                                        _WREN 0CAA  
                                      _TXEN 0CF5                                        _TXIF 008C  
                                      _SYNC 0CF4                                        _main 051B  
                                      _saim 0050                                        fsr0h 0005  
                                      fsr0l 0004                                        indf0 0000  
                                      btemp 007E                            __end_of_DELAY100 0571  
                          __end_of_I2C_Stop 063A                       __size_of_I2C_SendNACK 0008  
                                      ltemp 007E                                        start 017A  
                                      ttemp 007E                                        wtemp 007E  
                  __size_of_EEPROM_ReadByte 000E                            ??_I2C_initialize 003C  
                        UART_byte_send@data 0070                                       ??_FNC 0034  
            EEPROMAT24C1024B_read_byte@data 007A                                       _ADCS0 04F4  
                                     _ADCS1 04F5                                       _ADCS2 04F6  
                                     ?_main 0070                                       _ACKEN 10B4  
                                     _ACKDT 10B5                                       _BRG16 0CFB  
                                     _DELAY 059A                                       _ANSA1 0C61  
                                     _ANSA2 0C62                                       _ANSA4 0C64  
                                     _EEPGD 0CAF                                       _IRCF0 04CB  
                                     _IRCF1 04CC                                       _IRCF2 04CD  
                                     _IRCF3 04CE                                       _IOCIE 005B  
                                     _IOCIF 0058                                       i1l202 0558  
                                     i1l212 062E                                       i1l161 0624  
                                     i1l218 0635                                       i1l331 0175  
                                     i1l245 0611                                       i1l239 057F  
                                     i1l167 0647                                       i1l319 0168  
                                     i1l185 061A                                       i1l179 063C  
                                     i1l196 0549                                       i1l188 061C  
                                     i1l199 0555                                       i1l289 01CC  
                                     _RCREG 0199                ??_EEPROMAT24C1024B_read_byte 0076  
                                     _SPBRG 019B                                       _SSPM0 10A8  
                                     _SSPM1 10A9                                       _SSPM2 10AA  
                                     _SSPM3 10AB                                       _SSPEN 10AD  
                                     u91_25 03FC                                       u92_25 0412  
                                     u93_25 0438                                       _TXREG 019A  
                                     u98_25 04C6                                       u99_25 04DC  
                              _output_count 004E                          __size_of_UART_init 0011  
                              _I2C_SendNACK 062B                                       main@l 00A4  
                         __end_of_I2C_Start 0641                                       ltemp0 007E  
                                     ltemp1 0082                                       ltemp2 0086  
                                     ltemp3 0080                       EEPROM_WriteByte@value 0070  
                                     ttemp0 007E                                       ttemp1 0081  
                                     ttemp2 0084                                       ttemp3 0087  
                                     ttemp4 007F        __end_of_EEPROM24C64_start_write_page 05D6  
     __size_of_EEPROM24C64_start_write_page 0014                _EEPROM24C64_start_write_page 05C2  
                                     status 0003                                       wtemp0 007E  
                                     wtemp1 0080                        __end_of_PCF8574_read 05E9  
                                     wtemp2 0082                                       wtemp3 0084  
                                     wtemp4 0086                                       wtemp5 0088  
                                     wtemp6 007F                         __size_ofi1_DELAY100 0014  
                           __initialization 017C                                __end_of_main 0543  
       __size_of_EEPROMAT24C1024B_read_byte 0062           EEPROMAT24C1024B_read_byte@address 0072  
                                    DELAY@k 00A2                                      ??_main 003C  
                                    ?_DELAY 0070                   __size_of_I2C_data_receive 000B  
                                 DELAY100@k 00A3                                      _ADRESH 009C  
                                    _ADRESL 009B                                      _EEADRL 0191  
                                    _EEDATL 0193                                      _EECON2 0196  
                                    _ANSELA 018C                                      _IOCAP3 1C8B  
                                    u101_25 048B                                      u102_25 04A2  
                                    i1l2101 00CE                                      i1l2103 0132  
                                    i1l2107 0140                                      i1l2083 00F4  
                                    u112_24 0295                                      u112_25 0294  
                                    i1l1803 0205                                      i1l1565 054C  
                                    i1l1911 0351                                      i1l1905 0341  
                                    i1l1841 0255                                      i1l1923 037A  
                                    i1l1835 0250                                      u122_24 036B  
                                    i1l1941 03B6                                      u122_25 036A  
                                    i1l1829 0240                                      i1l1943 03BA  
                                    i1l1935 039C                                      i1l1919 0366  
                                    i1l1855 0290                                      i1l1847 0265  
                                    i1l1953 03EA                                      i1l1859 02A4  
                                    i1l1955 020B                                      i1l1981 05B0  
                                    i1l1887 0304                                      i1l1879 02E6  
                                    i1l1889 0308                                      i1l1899 033B  
                                    u117_24 02FD                                      u117_25 02FC  
                                    u126_24 03AF                                      u126_25 03AE  
                                    u128_25 0211                                      u160_27 0080  
                                    u161_27 00EE                                      u170_27 01C4  
                                    u162_27 0108                                      u139_25 00D4  
                                    u171_27 01ED                                      u163_27 0123  
                                    u155_27 0014                                      u180_27 0394  
                                    u172_27 01FD                                      u164_27 013A  
                                    u156_27 0022                                      u181_27 03E5  
                                    u173_27 0231                                      u165_27 0147  
                                    u157_27 0034                                      u182_27 0427  
                                    u174_27 02AE                                      u166_27 0153  
                                    u158_27 004A                                      u183_27 0505  
                                    u175_27 02BE                                      u167_27 0163  
                                    u159_27 0065                                      u184_27 0479  
                                    u176_27 02CE                                      u168_27 05B8  
                                    u177_27 02DE                                      u169_27 01B4  
                                    u178_27 0335                                      u179_27 0384  
                                    _SSP1IF 008B                                      _SPLLEN 04CF  
                                    _SSPADD 0212                                      _TRISA0 0460  
                                    _TRISA1 0461                                      _TRISA2 0462  
                                    _TRISA4 0464                                      _TRISA5 0465  
                                    _SSPBUF 0211                          check_circuit@j_181 0027  
                        check_circuit@j_187 0028                          check_circuit@k_188 002E  
             ?_EEPROM24C64_start_write_page 0072                      __size_of_I2C_data_send 0018  
                         __end_of_UART_init 05FA                                      __temp_ 004C  
                         ??_EEPROM_ReadByte 0070                      check_circuit@send_data 002F  
                  __end_of_EEPROM_WriteByte 0586                    ??_EEPROM24C64_write_page 0072  
                              __pdataCOMMON 007B                       PCF8574_load_data@data 0072  
                                 ?_DELAY100 0070                                   ?_I2C_Stop 0070  
       __end_of_EEPROM24C64_stop_write_page 0650                 _EEPROM24C64_stop_write_page 064D  
                   __end_of__initialization 018C                               __end_of_DELAY 05AE  
                            __pcstackCOMMON 0070                          _measured_adc_value 0052  
                              ??i1_DELAY100 0070          __end_of_EEPROMAT24C1024B_read_byte 0452  
                _EEPROMAT24C1024B_read_byte 03F0                                     ??_DELAY 00A0  
       __end_of_EEPROMAT24C1024B_write_page 04B1                 _EEPROMAT24C1024B_write_page 0452  
                                ??_DELAY100 00A0                               _I2C_data_send 0543  
                                ??_I2C_Stop 0070                            FNC@byte_location 0038  
                     __size_of_PCF8574_read 0013                         PCF8574_load_data@id 0073  
                                __pbssBANK0 003C                                  _fail_count 0048  
 __end_of_EEPROMAT24C1024B_start_write_page 04EA  __size_of_EEPROMAT24C1024B_start_write_page 0039  
       ??_EEPROMAT24C1024B_start_write_page 0076          ?_EEPROMAT24C1024B_start_write_page 0072  
         _EEPROMAT24C1024B_start_write_page 04B1                          __end_ofi1_DELAY100 05C2  
                                __pmaintext 051B              ??_EEPROM24C64_start_write_page 0074  
                                __pintentry 0004                     __size_of_UART_byte_send 0008  
                         _UART_byte_receive 0647                                _PCF8574_read 05D6  
                                   _LCDData 007D                              ?_I2C_data_send 0070  
                          _I2C_data_receive 0618             __size_of_EEPROM24C64_write_page 0031  
                        ?_UART_byte_receive 0070                  EEPROM24C64_write_page@data 0074  
                                   _RXDTSEL 08EF                           _PCF8574_load_data 05FA  
                       ??_UART_byte_receive 0070                              PCF8574_read@id 0073  
                        ?_PCF8574_load_data 0072                                   _I2C_Start 063A  
                       ??_PCF8574_load_data 0073                      __size_of_check_circuit 0260  
                 __end_of_UART_byte_receive 064D                                     __ptext1 05E9  
                                   __ptext2 0586                                     __ptext3 059A  
                                   __ptext4 055B                                     __ptext6 05AE  
                                   __ptext7 0190                                     __ptext8 0623  
                                   __ptext9 0647                                __size_of_FNC 0176  
                    EEPROM_ReadByte@address 0070                   __end_of_PCF8574_load_data 060A  
                                _pass_count 004A                               _received_data 004F  
                   EEPROM_WriteByte@address 0071                                     clrloop0 0642  
                      end_of_initialization 018C                                  ?_I2C_Start 0070  
                           _EEPROM_ReadByte 060A                      _EEPROM24C64_write_page 04EA  
                           ??_I2C_data_send 0070                                   _UART_init 05E9  
                         ?_EEPROM_WriteByte 0070                     __size_of_I2C_initialize 0014  
                        ??_EEPROM_WriteByte 0071                           __size_of_DELAY100 0016  
                         __size_of_I2C_Stop 0007                               _check_circuit 0190  
                            DELAY100@number 00A2                  _EEPROM24C64_memory_address 0044  
                            _UART_byte_send 0623                  __size_of_UART_byte_receive 0006  
                             __pidataCOMMON 0653                                  ?_UART_init 0070  
               ?_EEPROMAT24C1024B_read_byte 0072                                 i1DELAY100@k 0073  
  __end_of_EEPROMAT24C1024B_stop_write_page 0653   __size_of_EEPROMAT24C1024B_stop_write_page 0003  
        ??_EEPROMAT24C1024B_stop_write_page 0070           ?_EEPROMAT24C1024B_stop_write_page 0070  
          _EEPROMAT24C1024B_stop_write_page 0650                         start_initialization 017C  
                               __end_of_FNC 017A                  __size_of_PCF8574_load_data 0010  
                            ?_check_circuit 0070                              check_circuit@i 0032  
                            check_circuit@j 0026                              check_circuit@k 002D  
                   __end_of_EEPROM_ReadByte 0618                        PCF8574_read@received 0074  
                               ??_I2C_Start 0070                       check_circuit@correct1 0030  
                     check_circuit@correct2 0025                    __end_of_I2C_data_receive 0623  
                    __end_of_UART_byte_send 062B                                 __pbssCOMMON 007D  
                                 ___latbits 0001                               __pcstackBANK0 0020  
                             __pcstackBANK1 00A0                               ?_I2C_SendNACK 0070  
       EEPROM24C64_start_write_page@address 0072                             ?_UART_byte_send 0070  
  EEPROMAT24C1024B_start_write_page@address 0072                                 ??_UART_init 003C  
                            _I2C_initialize 0586                              __size_of_DELAY 0014  
                                  _DELAY100 055B                                    _I2C_Stop 0633  
                           ??_check_circuit 0020                              ??_I2C_SendNACK 0070  
                          ?_EEPROM_ReadByte 0070                               _PCF8574_value 0040  
                   ?_EEPROM24C64_write_page 0070                                   clear_ram0 0641  
                    __end_of_I2C_initialize 059A                           I2C_data_send@data 0071  
                               DELAY@number 00A1              __end_of_EEPROM24C64_write_page 051B  
                 __size_of_EEPROM_WriteByte 0015                ?_EEPROM24C64_stop_write_page 0070  
                           ?_I2C_initialize 0070                        check_circuit@output1 0031  
                      check_circuit@output2 0029                            i1DELAY100@number 0072  
                     __end_of_I2C_data_send 055B                ?_EEPROMAT24C1024B_write_page 0070  
                                  __ptext10 05D6                                    __ptext11 05FA  
                                  __ptext20 0452                                    __ptext12 060A  
                                  __ptext21 0650                                    __ptext13 03F0  
                                  __ptext22 0633                                    __ptext14 0618  
                                  __ptext23 04B1                                    __ptext15 062B  
                                  __ptext24 0543                                    __ptext16 04EA  
                                  __ptext25 063A                                    __ptext17 064D  
                                  __ptext18 05C2                                    __ptext19 0571  
                             __size_of_main 0028               ??_EEPROM24C64_stop_write_page 0070  
                         ?_I2C_data_receive 0070                          ??_I2C_data_receive 0070  
                      __end_of_I2C_SendNACK 0633                                    int$flags 007E  
                               _input_count 004D                               ?_PCF8574_read 0070  
                                i1_DELAY100 05AE               ??_EEPROMAT24C1024B_write_page 0072  
                                  intlevel1 0000                       _EEPROM_memory_address 003C  
                          ??_UART_byte_send 0070                    check_circuit@result_byte 002C  
           EEPROMAT24C1024B_write_page@data 0076                              ??_PCF8574_read 0072  
      __size_of_EEPROM24C64_stop_write_page 0003            check_circuit@configuration_count 002A  
                          _EEPROM_WriteByte 0571                         _configuration_count 0046  
      __size_of_EEPROMAT24C1024B_write_page 005F  
